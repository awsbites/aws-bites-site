{
  "speakers": {
    "spk_0": "spk_0",
    "spk_1": "spk_1"
  },
  "segments": [
    {
      "speakerLabel": "spk_0",
      "start": 0,
      "end": 4.8,
      "text": " If you have run an EC2 instance on AWS, you are very likely to have used EBS storage."
    },
    {
      "speakerLabel": "spk_0",
      "start": 4.8,
      "end": 9.28,
      "text": " Storage may be a dual topic, but if you scratch under the surface, EBS is actually a bit of a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 9.28,
      "end": 13.84,
      "text": " technical partner. Its design is even based on the Portuguese manoir, not the metal band,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 13.84,
      "end": 20.240000000000002,
      "text": " but a stinging jellyfish-like sea animal. We'll try and explain why and explain why EBS"
    },
    {
      "speakerLabel": "spk_0",
      "start": 20.240000000000002,
      "end": 26.080000000000002,
      "text": " is an understated genius amongst AWS offering. This is AWS Bites and Luciano, joined today by Eoin."
    },
    {
      "speakerLabel": "spk_0",
      "start": 30,
      "end": 38.96,
      "text": " AWS Bites is brought to you by fourTheorem, an AWS partner that does cloud stuff in a really,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 38.96,
      "end": 44.08,
      "text": " really good way. Go to fourtheorem.com to read about our case studies and feel free to reach out to us."
    },
    {
      "speakerLabel": "spk_0",
      "start": 44.08,
      "end": 49.120000000000005,
      "text": " So if you use EC2, you're going to need some sort of storage, something like a disk drive or a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 49.120000000000005,
      "end": 54.32,
      "text": " remote storage, and you would use some kind of physical server that needs to store information,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 54.32,
      "end": 60.32,
      "text": " of course. Some instances support what they call instance store, which is something that is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 60.32,
      "end": 65.2,
      "text": " physically attached to the instance itself, which is also really fast, but they are also ephemeral,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 65.2,
      "end": 69.84,
      "text": " which means it's temporary storage. So if your instance gets stopped, terminated or hibernated,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 69.84,
      "end": 75.03999999999999,
      "text": " all the data gets lost. So for these reasons, they are very good for cases where you need fast access"
    },
    {
      "speakerLabel": "spk_0",
      "start": 75.03999999999999,
      "end": 80.16,
      "text": " but not persistent data like caches or temporary storage. But for almost everything else, imagine"
    },
    {
      "speakerLabel": "spk_0",
      "start": 80.16,
      "end": 85.84,
      "text": " you have databases or files that you need to keep around, there is something that's called EBS,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 85.84,
      "end": 90.8,
      "text": " Elastic Block Storage. So what is really EBS? Eoin, do you want to try to take a stab at it?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 90.8,
      "end": 94.72,
      "text": " It might be worthwhile starting with block storage. What is block storage? It's used by"
    },
    {
      "speakerLabel": "spk_1",
      "start": 94.72,
      "end": 100.8,
      "text": " physical disks as well as SANs, so storage area networks. And with a block store, data is stored"
    },
    {
      "speakerLabel": "spk_1",
      "start": 100.8,
      "end": 106,
      "text": " in fixed sized blocks. That's how it gets its name. If you imagine old school traditional spinning"
    },
    {
      "speakerLabel": "spk_1",
      "start": 106,
      "end": 111.04,
      "text": " disks, these blocks related to physical sectors, and then with software or network-based storage,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 111.04,
      "end": 115.28,
      "text": " dividing a storage volume into blocks can actually be used to achieve resilience and performance if"
    },
    {
      "speakerLabel": "spk_1",
      "start": 115.28,
      "end": 119.92,
      "text": " you optimize how those blocks are read and written. So when you create a file system on top of a block"
    },
    {
      "speakerLabel": "spk_1",
      "start": 119.92,
      "end": 123.84,
      "text": " storage device, file reads and writes are translated to reads and writes of individual"
    },
    {
      "speakerLabel": "spk_1",
      "start": 123.84,
      "end": 129.44,
      "text": " blocks. And the volume might also have some form of caching built in. So what about EBS then? Well,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 129.44,
      "end": 133.68,
      "text": " EBS is a kind of block store, hence the name, and it's a service that allows you to create"
    },
    {
      "speakerLabel": "spk_1",
      "start": 133.68,
      "end": 139.84,
      "text": " storage volumes in AWS that can be attached to EC2 instances. And now actually ECS containers. So"
    },
    {
      "speakerLabel": "spk_1",
      "start": 139.84,
      "end": 143.52,
      "text": " we'll talk a little bit about that later. The volumes themselves exist independently of the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 143.52,
      "end": 149.20000000000002,
      "text": " EC2 instances. So they can be detached and reattached to other instances. And they give you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 149.20000000000002,
      "end": 153.92000000000002,
      "text": " a really good performance. They also give you different options so you can balance the cost and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 153.92000000000002,
      "end": 160,
      "text": " performance factors. In terms of size, they can go from one gigabyte all the way up to 64 terabytes."
    },
    {
      "speakerLabel": "spk_1",
      "start": 160,
      "end": 164.08,
      "text": " And that's just for a single volume. So you can also have multiple volumes and you can even use"
    },
    {
      "speakerLabel": "spk_1",
      "start": 164.08,
      "end": 169.04,
      "text": " things like RAID to create arrays of volumes. You can also easily change volume types. So you've"
    },
    {
      "speakerLabel": "spk_1",
      "start": 169.04,
      "end": 174.16,
      "text": " got elastic options with EBS as well. You can change the type, the size, as well as other"
    },
    {
      "speakerLabel": "spk_1",
      "start": 174.16,
      "end": 179.84,
      "text": " features. Volumes can even be resized dynamically without any downtime on attached instances,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 179.84,
      "end": 184.08,
      "text": " which is pretty cool. Now they're encrypted. And one of the amazing things about them is that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 184.08,
      "end": 188.56,
      "text": " they're encrypted without that encryption incurring any performance impact. Because of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 188.56,
      "end": 193.68,
      "text": " their design, they also have a reduced failure rate when compared to physical disk drives,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 193.68,
      "end": 199.12,
      "text": " typically, which is something that is really an advantage when it comes to choosing EBS over"
    },
    {
      "speakerLabel": "spk_1",
      "start": 199.12,
      "end": 203.92000000000002,
      "text": " a traditional physical medium in a data center. And they're highly available within an AZ. And"
    },
    {
      "speakerLabel": "spk_1",
      "start": 203.92000000000002,
      "end": 207.68,
      "text": " I think that's one of the important things to understand about EBS volumes. They are related to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 208.32,
      "end": 213.2,
      "text": " availability zone. Within that AZ, there is redundancy when it comes to the storage and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 213.2,
      "end": 218.16,
      "text": " failure of components of the EBS volume, but they're still within one availability zone. So"
    },
    {
      "speakerLabel": "spk_1",
      "start": 218.16,
      "end": 223.44,
      "text": " if you want to make them more resilient, you can do that by taking EBS snapshots. And these"
    },
    {
      "speakerLabel": "spk_1",
      "start": 223.44,
      "end": 228.48,
      "text": " are backed by S3. So then they're stored in multiple AZs. Another point to mention is that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 228.48,
      "end": 233.68,
      "text": " we're talking about EC2. EBS volumes are of course also used by RDS for storage. So when you're"
    },
    {
      "speakerLabel": "spk_1",
      "start": 233.68,
      "end": 239.2,
      "text": " creating databases in RDS, you will choose EBS volume types when you're creating them. It doesn't"
    },
    {
      "speakerLabel": "spk_1",
      "start": 239.2,
      "end": 243.28,
      "text": " apply to Aurora because Aurora has its own very special storage mechanism, which we might talk"
    },
    {
      "speakerLabel": "spk_1",
      "start": 243.28,
      "end": 247.84,
      "text": " about in another future episode. One of the neat features of EBS is snapshots. And we just"
    },
    {
      "speakerLabel": "spk_1",
      "start": 247.84,
      "end": 251.44,
      "text": " referred to them there, but it's worthwhile going into them in a bit more detail. What do you think?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 251.44,
      "end": 258.16,
      "text": " Yes."
    },
    {
      "speakerLabel": "spk_0",
      "start": 258.16,
      "end": 263.36,
      "text": " So snapshots are point in time backups, and that backup will contain the entirety of your EBS volume. And they will be stored in S3. So that means that by default, you just get the 11 nines"
    },
    {
      "speakerLabel": "spk_0",
      "start": 263.36,
      "end": 267.92,
      "text": " of durability that S3 gives you. It needs to be monitored for cost because of course, if you have"
    },
    {
      "speakerLabel": "spk_0",
      "start": 267.92,
      "end": 273.76,
      "text": " large volumes, you are effectively replicating all of that data into S3 and that comes with a cost."
    },
    {
      "speakerLabel": "spk_0",
      "start": 273.76,
      "end": 277.59999999999997,
      "text": " And if you are not careful, that cost is going to build up, right? But there is actually an"
    },
    {
      "speakerLabel": "spk_0",
      "start": 277.59999999999997,
      "end": 282.48,
      "text": " interesting feature there because these backups are incremental. So only the data that has changed"
    },
    {
      "speakerLabel": "spk_0",
      "start": 282.48,
      "end": 287.44,
      "text": " from the previous snapshot is actually stored. So that can make them more efficient. And you still"
    },
    {
      "speakerLabel": "spk_0",
      "start": 287.44,
      "end": 291.44,
      "text": " need to be careful of course, but generally speaking, the incremental approach will make"
    },
    {
      "speakerLabel": "spk_0",
      "start": 291.44,
      "end": 296.08,
      "text": " so that you are not replicating all the data all the time, but just the first snapshot and then"
    },
    {
      "speakerLabel": "spk_0",
      "start": 296.08,
      "end": 301.03999999999996,
      "text": " the changes layer on top of that. You can create new volumes starting from a snapshot. So the idea"
    },
    {
      "speakerLabel": "spk_0",
      "start": 301.04,
      "end": 306.8,
      "text": " is that basically you might snapshot a volume from a machine. From that snapshot, you can maybe"
    },
    {
      "speakerLabel": "spk_0",
      "start": 306.8,
      "end": 312.08000000000004,
      "text": " bootstrap another machine. And other things that are relevant are that you can create copies of the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 312.08000000000004,
      "end": 316.8,
      "text": " snapshot within or across regions. So maybe you can use this approach for instance to spin up"
    },
    {
      "speakerLabel": "spk_0",
      "start": 316.8,
      "end": 321.20000000000005,
      "text": " a new machine in another region. And you can also share snapshots with other accounts. So you can"
    },
    {
      "speakerLabel": "spk_0",
      "start": 321.20000000000005,
      "end": 326.08000000000004,
      "text": " even use this approach to share data across different accounts, or even you can create"
    },
    {
      "speakerLabel": "spk_0",
      "start": 326.08,
      "end": 330.96,
      "text": " snapshots that are publicly accessible. So if you have information that somehow needs to be"
    },
    {
      "speakerLabel": "spk_0",
      "start": 330.96,
      "end": 335.76,
      "text": " shared across pretty much everyone that might need that information, maybe it's like a large"
    },
    {
      "speakerLabel": "spk_0",
      "start": 335.76,
      "end": 340.71999999999997,
      "text": " data set that you want to make public, and people might need to spin up an EC2 and load that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 340.71999999999997,
      "end": 345.68,
      "text": " information easily into the EC2 instance, you can use this approach as well. Snapshots can also be"
    },
    {
      "speakerLabel": "spk_0",
      "start": 345.68,
      "end": 350.15999999999997,
      "text": " a card, which is something that can be convenient when you don't expect to necessarily access that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 350.16,
      "end": 356.64000000000004,
      "text": " snapshot frequently, maybe just for extra peace of mind. That will help you to reduce the cost. So"
    },
    {
      "speakerLabel": "spk_0",
      "start": 356.64000000000004,
      "end": 362.56,
      "text": " you just take the snapshot, archive it, and it's going to be there for 90 days or more, for example."
    },
    {
      "speakerLabel": "spk_0",
      "start": 362.56,
      "end": 367.44000000000005,
      "text": " So apart from attaching an EBS volume, is there any other way to access the data? You might be"
    },
    {
      "speakerLabel": "spk_0",
      "start": 367.44000000000005,
      "end": 373.6,
      "text": " wondering, okay, is that the only use case? There is actually a very interesting API that is something"
    },
    {
      "speakerLabel": "spk_0",
      "start": 373.6,
      "end": 377.6,
      "text": " that I came across only very recently. So it's a little bit of something that is not necessarily"
    },
    {
      "speakerLabel": "spk_0",
      "start": 377.6,
      "end": 382,
      "text": " well known to everybody, and it's what is called the direct API. We will have a link in the show"
    },
    {
      "speakerLabel": "spk_0",
      "start": 382,
      "end": 387.44,
      "text": " notes with all the documentation, some examples, but generally speaking, it's kind of a lower level"
    },
    {
      "speakerLabel": "spk_0",
      "start": 387.44,
      "end": 394.24,
      "text": " API that allows you to access directly the EBS snapshot data, so without having to mount a volume"
    },
    {
      "speakerLabel": "spk_0",
      "start": 394.24,
      "end": 399.84000000000003,
      "text": " into an EC2 instance. And this is probably a bit of a niche use case that is used maybe if you are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 399.84000000000003,
      "end": 405.28000000000003,
      "text": " a vendor that wants to provide some kind of backup, DR kind of extra facility, they can use this"
    },
    {
      "speakerLabel": "spk_0",
      "start": 405.28,
      "end": 410.88,
      "text": " approach to be very efficient in the way they can access the data and read and write data directly"
    },
    {
      "speakerLabel": "spk_0",
      "start": 410.88,
      "end": 415.28,
      "text": " into EBS snapshot data. You don't necessarily have to create volumes. That's kind of the idea. So"
    },
    {
      "speakerLabel": "spk_0",
      "start": 415.28,
      "end": 419.91999999999996,
      "text": " if you have a use case where you want to control the data directly and you might do that at large"
    },
    {
      "speakerLabel": "spk_0",
      "start": 419.91999999999996,
      "end": 424.15999999999997,
      "text": " volumes, this might be an API worth exploring a little bit more. It will come at a lower price."
    },
    {
      "speakerLabel": "spk_0",
      "start": 425.28,
      "end": 430.79999999999995,
      "text": " That's kind of the idea. We mentioned that EBS itself is a bit of a technical wonder in AWS. So"
    },
    {
      "speakerLabel": "spk_0",
      "start": 430.79999999999995,
      "end": 435.03999999999996,
      "text": " what is this magic? How does it work under the hood?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 435.84000000000003,
      "end": 439.76000000000005,
      "text": " Well, I can't explain all the details because the details and if I did, I probably wouldn't understand them. But one of the interesting"
    },
    {
      "speakerLabel": "spk_1",
      "start": 439.76000000000005,
      "end": 443.76000000000005,
      "text": " things I suppose fundamentally is that it's not directly attached to physical storage."
    },
    {
      "speakerLabel": "spk_1",
      "start": 443.76000000000005,
      "end": 449.12,
      "text": " It's accessed by instances over a network, but it appears to the operating system like a physical"
    },
    {
      "speakerLabel": "spk_1",
      "start": 449.12,
      "end": 455.20000000000005,
      "text": " disk. Now there is a paper, there is an academic paper published by AWS on how they evolve their"
    },
    {
      "speakerLabel": "spk_1",
      "start": 455.20000000000005,
      "end": 459.92,
      "text": " internal configuration management system. And the paper is called millions of tiny databases,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 459.92,
      "end": 463.84000000000003,
      "text": " which gives you a hint as to how that's architected. The idea is that in the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 463.84,
      "end": 469.67999999999995,
      "text": " configuration management system for EBS, it uses cells, which are full tolerant units that manage"
    },
    {
      "speakerLabel": "spk_1",
      "start": 469.67999999999995,
      "end": 474.79999999999995,
      "text": " a small portion of EBS data. And these little cells are replicated across the storage nodes"
    },
    {
      "speakerLabel": "spk_1",
      "start": 474.79999999999995,
      "end": 479.59999999999997,
      "text": " to give durability and availability. And each cell is actually a seven node Paxos cluster."
    },
    {
      "speakerLabel": "spk_1",
      "start": 479.59999999999997,
      "end": 485.28,
      "text": " This cellular database design is known as Physalia or Physalia after the Latin name for the Portuguese"
    },
    {
      "speakerLabel": "spk_1",
      "start": 485.28,
      "end": 489.12,
      "text": " Man o' War. So the Portuguese Man o' War is, it looks like a jellyfish, but it's not technically"
    },
    {
      "speakerLabel": "spk_1",
      "start": 489.12,
      "end": 495.44,
      "text": " a jellyfish because it's not a single animal, but a colony of millions of individual organisms."
    },
    {
      "speakerLabel": "spk_1",
      "start": 495.44,
      "end": 499.68,
      "text": " So I guess the team thought that this was a good fit for the Physalia EBS architecture,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 499.68,
      "end": 504.64,
      "text": " which is built basically on a colony of individual distributed database cells. So it's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 505.2,
      "end": 509.52,
      "text": " difficult to really wrap your head around the idea that this high performance storage system is"
    },
    {
      "speakerLabel": "spk_1",
      "start": 509.52,
      "end": 515.2,
      "text": " actually backed by millions of tiny distributed databases that give you durability, high"
    },
    {
      "speakerLabel": "spk_1",
      "start": 515.2,
      "end": 519.6,
      "text": " availability and consistency that you need. And if you have a look at that paper, like a lot of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 519.6,
      "end": 524,
      "text": " distributed systems papers, it'll talk about the CAP theorem, which is the famous theorem that it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 524,
      "end": 528.88,
      "text": " describes in a distributed system, you can have two out of the three when it comes to consistency,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 528.88,
      "end": 535.84,
      "text": " availability, and partitioning. Now consistency and partitioning are non negotiable in the context"
    },
    {
      "speakerLabel": "spk_1",
      "start": 535.84,
      "end": 541.5200000000001,
      "text": " of EBS, you have to have consistency when it comes to block storage. And the architecture basically"
    },
    {
      "speakerLabel": "spk_1",
      "start": 541.52,
      "end": 546.64,
      "text": " just optimizes to achieve the maximum possible value of the third one, which is availability."
    },
    {
      "speakerLabel": "spk_1",
      "start": 546.64,
      "end": 550.48,
      "text": " So it's they're just essentially achieving availability with a very high probability,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 550.48,
      "end": 555.76,
      "text": " which is the best trade off you can achieve for a system like this. Now you often hear AWS people"
    },
    {
      "speakerLabel": "spk_1",
      "start": 555.76,
      "end": 561.68,
      "text": " talking about the nitro system, which is their custom, very extensive hardware that underpins"
    },
    {
      "speakerLabel": "spk_1",
      "start": 561.68,
      "end": 566.8,
      "text": " a lot of the modern AWS infrastructure. And this the nitro system actually has specific"
    },
    {
      "speakerLabel": "spk_1",
      "start": 566.8,
      "end": 572.64,
      "text": " features built into it to facilitate EBS volumes. And to enable this encryption, we talked about"
    },
    {
      "speakerLabel": "spk_1",
      "start": 572.64,
      "end": 578.8,
      "text": " without having any performance overhead, you might also have heard of EBS optimized easy to instances,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 578.8,
      "end": 583.04,
      "text": " because it's a network based file system, these instances actually have dedicated bandwidth,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 583.04,
      "end": 588.64,
      "text": " so they give you more guarantees around the bandwidth you have when accessing EBS. So that's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 588.64,
      "end": 594.3199999999999,
      "text": " as much I think, as I can say about the internals of EBS, feel free to check out the paper if that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 594.32,
      "end": 598.1600000000001,
      "text": " kind of thing floats your boat. When it comes to actually using them as an end user, though,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 598.1600000000001,
      "end": 603.84,
      "text": " one of the things I find is that if you're not used to EBS, suddenly, all you want is a disk,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 603.84,
      "end": 608.48,
      "text": " but you're confronted by all these different terms that seem very confusing. And there's a lot of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 608.48,
      "end": 612.48,
      "text": " different options. And people talk about IOPS, and it's very easy to get lost and confused."
    },
    {
      "speakerLabel": "spk_1",
      "start": 612.48,
      "end": 617.36,
      "text": " So should we try and do our best to explain these concepts at least at a high level without boring"
    },
    {
      "speakerLabel": "spk_1",
      "start": 617.36,
      "end": 622,
      "text": " everybody to death? I agree."
    },
    {
      "speakerLabel": "spk_0",
      "start": 622.08,
      "end": 626.48,
      "text": " And it's something that to be honest, I still get confused about every once in a while. So it's definitely good for me to also go over all of it again and try"
    },
    {
      "speakerLabel": "spk_0",
      "start": 626.48,
      "end": 631.28,
      "text": " to finally memorize all of these different concepts. So we have at least three different"
    },
    {
      "speakerLabel": "spk_0",
      "start": 631.28,
      "end": 635.52,
      "text": " pieces of terminology that can be confusing and something that we need to know. And we are talking"
    },
    {
      "speakerLabel": "spk_0",
      "start": 635.52,
      "end": 640.4,
      "text": " about volume types, throughput, and IOPS. And those are really important, not just because you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 640.4,
      "end": 645.12,
      "text": " need to make the choice, right? As you said, you just need a disk, but you don't just get to pick"
    },
    {
      "speakerLabel": "spk_0",
      "start": 645.12,
      "end": 650.32,
      "text": " a random disk, you need to decide based on these options. So definitely, you need to be aware."
    },
    {
      "speakerLabel": "spk_0",
      "start": 650.32,
      "end": 655.84,
      "text": " But the other element is that it has a massive correlation with the cost. So cost is definitely"
    },
    {
      "speakerLabel": "spk_0",
      "start": 655.84,
      "end": 660.08,
      "text": " based on the different values that you pick when it comes to these options. So it's important to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 660.08,
      "end": 665.44,
      "text": " understand the meaning and the associated pricing so that you can avoid some kind of random bill"
    },
    {
      "speakerLabel": "spk_0",
      "start": 665.44,
      "end": 669.2,
      "text": " shock just because you provision a disk and you didn't know what you picked. So let's start with"
    },
    {
      "speakerLabel": "spk_0",
      "start": 669.2,
      "end": 674.6400000000001,
      "text": " IOPS. What is an IOPS? It basically means IO, input output per second. And it identifies the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 674.6400000000001,
      "end": 680.1600000000001,
      "text": " number of IO operations that you can perform every second. So what is an IO operation, you might ask?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 681.04,
      "end": 686.9599999999999,
      "text": " And this is basically either a read or a write of either 16 kilobytes, 64 kilobytes, or one megabyte,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 686.9599999999999,
      "end": 691.52,
      "text": " depending on the EBS volume type. So you are effectively reading or writing a certain amount"
    },
    {
      "speakerLabel": "spk_0",
      "start": 691.52,
      "end": 696.4,
      "text": " of data. That's an operation. If you have any meaningful production workload, it's generally"
    },
    {
      "speakerLabel": "spk_0",
      "start": 696.4,
      "end": 702.3199999999999,
      "text": " a good idea to really understand how IOPS can become kind of a bottleneck and make sure that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 702.3199999999999,
      "end": 707.36,
      "text": " you fine tune the number of IOPS to make sure it matches your needs for that particular workload."
    },
    {
      "speakerLabel": "spk_0",
      "start": 707.36,
      "end": 711.52,
      "text": " Just always be aware of cost. Don't just push that to the maximum because you might end up"
    },
    {
      "speakerLabel": "spk_0",
      "start": 711.52,
      "end": 716.72,
      "text": " just paying a lot of money for something that you don't really need to use. So instead, what are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 716.72,
      "end": 721.84,
      "text": " volume types? This can be a little bit confusing because there are many different options, but"
    },
    {
      "speakerLabel": "spk_0",
      "start": 721.84,
      "end": 726.8000000000001,
      "text": " let's try to cover the broad categories and how to think about them so that you can choose somewhat"
    },
    {
      "speakerLabel": "spk_0",
      "start": 726.8000000000001,
      "end": 732.4,
      "text": " consciously. So you have one category of volume type, which is basically SSD, so solid states,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 732.4,
      "end": 736.48,
      "text": " like, I don't know, the flash memory that you have in your phone, or probably if you have a very"
    },
    {
      "speakerLabel": "spk_0",
      "start": 736.48,
      "end": 742.48,
      "text": " modern laptop, they will have some kind of SSD inside. Then the other option is HDD, so the old"
    },
    {
      "speakerLabel": "spk_0",
      "start": 742.48,
      "end": 746.72,
      "text": " school spinning mechanical disks. It's another option and there are slightly different trade-offs"
    },
    {
      "speakerLabel": "spk_0",
      "start": 746.72,
      "end": 751.84,
      "text": " in terms of performance and cost, but you can make this option. With SSD, you have general"
    },
    {
      "speakerLabel": "spk_0",
      "start": 751.84,
      "end": 757.84,
      "text": " purpose SSD and provision IOPS types. So this is a kind of a subcategory when you pick SSD."
    },
    {
      "speakerLabel": "spk_0",
      "start": 757.84,
      "end": 763.28,
      "text": " Then if you go with HDD, you can pick either throughput optimized or called"
    },
    {
      "speakerLabel": "spk_0",
      "start": 763.28,
      "end": 769.28,
      "text": " HDD. Now again, we might kind of deep dive a lot more, but let's just try to keep it high level."
    },
    {
      "speakerLabel": "spk_0",
      "start": 769.28,
      "end": 774.3199999999999,
      "text": " And we will put a link in the show notes about some pricing examples that are part of the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 774.3199999999999,
      "end": 778.56,
      "text": " official documentation when it comes to pricing to really understand how these different choices"
    },
    {
      "speakerLabel": "spk_0",
      "start": 778.56,
      "end": 783.52,
      "text": " will affect pricing. Again, the pricing model as sometimes happens with AWS is not very linear."
    },
    {
      "speakerLabel": "spk_0",
      "start": 783.52,
      "end": 788.4,
      "text": " Depending on the choices, it changes the formula. So I think the examples are a very good way to try"
    },
    {
      "speakerLabel": "spk_0",
      "start": 788.4,
      "end": 793.04,
      "text": " to figure out some common use cases and how to think about pricing for those specific use cases."
    },
    {
      "speakerLabel": "spk_0",
      "start": 793.6,
      "end": 798.4,
      "text": " Eoin, do you want to try to give us a little bit of a more complete overview on what the types are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 798.4,
      "end": 803.12,
      "text": " and how to think about them? Yeah, it's probably worth starting with the default option."
    },
    {
      "speakerLabel": "spk_1",
      "start": 803.12,
      "end": 807.52,
      "text": " So I think the default option, if you don't listen to anything else in this section, it's probably worth listening"
    },
    {
      "speakerLabel": "spk_1",
      "start": 807.52,
      "end": 813.68,
      "text": " to the fact that GP3, so the general purpose SSD type known as GP3 is probably the default option."
    },
    {
      "speakerLabel": "spk_1",
      "start": 813.68,
      "end": 816.9599999999999,
      "text": " And if you're not sure or you can't be bothered learning the rest of them, I would say go with"
    },
    {
      "speakerLabel": "spk_1",
      "start": 816.9599999999999,
      "end": 822.4,
      "text": " that one. This one is the one that measures IOPS with 64 kilobyte I O units. So when we talk about"
    },
    {
      "speakerLabel": "spk_1",
      "start": 822.4,
      "end": 827.04,
      "text": " IOPS, the different types can have different I O unit size. So you need to think about two things,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 827.04,
      "end": 831.12,
      "text": " the number of I O operations you might want to perform per second, but also the throughput."
    },
    {
      "speakerLabel": "spk_1",
      "start": 831.12,
      "end": 834.72,
      "text": " And these things are two different dimensions. They're slightly related, but you need to think"
    },
    {
      "speakerLabel": "spk_1",
      "start": 834.72,
      "end": 840.0799999999999,
      "text": " about them separately. Now the GP3 is relatively new and it gives you a decent balance between cost"
    },
    {
      "speakerLabel": "spk_1",
      "start": 840.0799999999999,
      "end": 845.12,
      "text": " and the ability to control IOPS throughput and size independently. So there's a lot of flexibility"
    },
    {
      "speakerLabel": "spk_1",
      "start": 845.12,
      "end": 849.12,
      "text": " there too. That's why I think it's a good default choice. The cost is generally good as well"
    },
    {
      "speakerLabel": "spk_1",
      "start": 849.12,
      "end": 854.88,
      "text": " compared to the other options. And by default, the baseline is that you get 3000 IOPS and 125"
    },
    {
      "speakerLabel": "spk_1",
      "start": 854.88,
      "end": 858.4,
      "text": " megabytes a second of throughput. So this is different to the older type, which we'll talk"
    },
    {
      "speakerLabel": "spk_1",
      "start": 858.4,
      "end": 862.5600000000001,
      "text": " about in a second, but the fact that you get that baseline, which is pretty good in its own right,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 862.5600000000001,
      "end": 867.52,
      "text": " but then if you need more, you can adjust those levers. That's nice to know. And it's reassuring,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 867.52,
      "end": 873.36,
      "text": " I think the GP2 one was the default for a long time. It uses smaller 16 K I O units,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 873.36,
      "end": 877.52,
      "text": " but the baseline is very variable. It depends on your volume size. So they give you three IOPS per"
    },
    {
      "speakerLabel": "spk_1",
      "start": 877.52,
      "end": 881.6,
      "text": " gigabyte. So it makes it a little bit more difficult to calculate, but the unique thing"
    },
    {
      "speakerLabel": "spk_1",
      "start": 881.6,
      "end": 886.0799999999999,
      "text": " about GP2 is that it also gave you first of all IOPS so that it was pretty good. If you didn't"
    },
    {
      "speakerLabel": "spk_1",
      "start": 886.0799999999999,
      "end": 889.92,
      "text": " know what you were doing, you had something that generally didn't need that much IO, but from time"
    },
    {
      "speakerLabel": "spk_1",
      "start": 889.92,
      "end": 895.28,
      "text": " to time, like even on boot, it would need a burst of IO or for variable workloads. But then again,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 895.28,
      "end": 899.68,
      "text": " you could also exhaust that first of all limits and you needed to be careful to watch out and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 899.68,
      "end": 905.76,
      "text": " monitor for that. I think it's still a good side issue there just to recommend to monitor your IO"
    },
    {
      "speakerLabel": "spk_1",
      "start": 905.76,
      "end": 912.3199999999999,
      "text": " consumption against your allocation for any type. So GP3 is generally cheaper on the order of 20%"
    },
    {
      "speakerLabel": "spk_1",
      "start": 913.04,
      "end": 918,
      "text": " in most cases. So that's why we'd say if you're going for general purpose SSD, go with GP3 and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 918,
      "end": 921.84,
      "text": " you should be pretty safe with that option. And there's a calculator to indicate what savings"
    },
    {
      "speakerLabel": "spk_1",
      "start": 921.84,
      "end": 926.8,
      "text": " you'll get. And we'll give a link to that in the show notes. You can by the way, upgrade GP2 volumes"
    },
    {
      "speakerLabel": "spk_1",
      "start": 926.8,
      "end": 931.6,
      "text": " to GP3 and you don't need to restart the attached instances, which is pretty cool. Now, if you're a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 931.6,
      "end": 936.96,
      "text": " performance hungry workload, then you can go for the provisioned IOPS. So you can imagine that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 936.96,
      "end": 939.9200000000001,
      "text": " you've got something like you're running a database. That's the typical example that you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 939.9200000000001,
      "end": 943.84,
      "text": " get, or you've got something else that's just really read and write heavy in terms of IO. Then"
    },
    {
      "speakerLabel": "spk_1",
      "start": 943.84,
      "end": 949.76,
      "text": " you've got a few options there. They used to be IO1 and IO2. IO1 would give you up to 64,000 IOPS,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 949.76,
      "end": 956.4,
      "text": " which was pretty good. IO2 was available up until the end of last year. And it's actually been"
    },
    {
      "speakerLabel": "spk_1",
      "start": 956.4,
      "end": 962,
      "text": " replaced now by a new one called IO2 Block Express. IO2 is essentially legacy. Now IO2"
    },
    {
      "speakerLabel": "spk_1",
      "start": 962,
      "end": 966.72,
      "text": " Block Express has a whole bunch of additional features, but basically compared to IO1, it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 966.72,
      "end": 972.72,
      "text": " allows you to get up to as many as 256,000 IOPS. Now that'll depend on the instance side, because"
    },
    {
      "speakerLabel": "spk_1",
      "start": 972.72,
      "end": 976.56,
      "text": " that needs specific instance characteristics to support it, but it'll give you four times"
    },
    {
      "speakerLabel": "spk_1",
      "start": 976.56,
      "end": 983.1999999999999,
      "text": " higher throughput than IO1 as well. Other benefits of the IO2 Block Express are higher durability."
    },
    {
      "speakerLabel": "spk_1",
      "start": 983.2,
      "end": 987.5200000000001,
      "text": " So you get five nines instead of three nines, and you get lower latency as well. Again,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 987.5200000000001,
      "end": 993.0400000000001,
      "text": " GP3 is probably your go-to. If you know you need more IO, you can always move to one of the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 993.0400000000001,
      "end": 997.5200000000001,
      "text": " provisioned IOPS options. Worth quickly talking about the HDD types, but these are more niche"
    },
    {
      "speakerLabel": "spk_1",
      "start": 997.5200000000001,
      "end": 1003.5200000000001,
      "text": " these days. Generally much, much slower. The IO size is one megabyte, so it's completely different"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1003.5200000000001,
      "end": 1009.6800000000001,
      "text": " physical architecture. If you need sequential access, people who have used hard disks and SSD"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1009.68,
      "end": 1014.8,
      "text": " disks and physical machines in the past may know that SSD is good for random access, because you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1014.8,
      "end": 1019.76,
      "text": " can read at a consistent speed anywhere on the device, but physical disks that have a robotic arm"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1019.76,
      "end": 1023.5999999999999,
      "text": " need to actually move to the location you're reading from. So they're always much better for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1023.5999999999999,
      "end": 1029.6799999999998,
      "text": " linear sequential access. So that can be workloads like big data, things like MapReduce, Kafka,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1029.6799999999998,
      "end": 1034.6399999999999,
      "text": " where you've got streams that are sequential and logs. You're only going to get 500 megabytes max"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1034.64,
      "end": 1039.92,
      "text": " throughput, even on throughput optimized ones, and 500 IOPS. Now those are one megabyte IOPS,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1039.92,
      "end": 1046,
      "text": " but you won't use it for a lot of individual read or write operations. Cold HDD, the last one we"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1046,
      "end": 1051.1200000000001,
      "text": " have to mention, it's really slow, 250 megabytes a second, but that's something you'd only use for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1051.1200000000001,
      "end": 1055.3600000000001,
      "text": " cold storage. So things you aren't going to read and write option. And that's the cheapest of them"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1055.3600000000001,
      "end": 1060.16,
      "text": " all. Luciano, what do you think? How would you decide?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1060.16,
      "end": 1064.72,
      "text": " Yeah, I think I can give a very high level decision framework. So a bit of a shortcut that doesn't really take into account maybe all the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1064.72,
      "end": 1070.24,
      "text": " intricacies of different workloads, but it might be just a good reference framework if you either"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1070.24,
      "end": 1075.3600000000001,
      "text": " don't want to spend too much time investigating all the possible options, or maybe as a sanity"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1075.3600000000001,
      "end": 1079.52,
      "text": " check just to make sure that your investigation makes sense at the high level. So the idea is that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1079.52,
      "end": 1086.24,
      "text": " if the throughput is more important than IOPS, you should probably go for an SD1 HDD type. If it's a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1086.24,
      "end": 1092.48,
      "text": " really cold storage that you are looking for, then SC1 is the one to go for. Instead,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1092.48,
      "end": 1097.36,
      "text": " if IOPS is more important, and this is in my experience, in most cases, that's what it is,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1097.36,
      "end": 1102,
      "text": " right? You care more about IOPS rather than throughput. In that case, you need an SSD."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1102,
      "end": 1107.28,
      "text": " And if you really need the maximum IO performance possible, you need to go for I02 Block Express."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1107.28,
      "end": 1112.24,
      "text": " Otherwise, choose the best all around, which is GP3. And as we said, it's generally the safest"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1112.24,
      "end": 1117.68,
      "text": " default these days. So again, maybe your decision tree starts with GP3, and then you try to look for"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1117.68,
      "end": 1122.64,
      "text": " reasons not to use GP3, and you can look at the other points we mentioned as a way to steer your"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1122.64,
      "end": 1126.64,
      "text": " decision. Now, I think there are also some other interesting features that we should quickly"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1126.64,
      "end": 1131.28,
      "text": " mention before we wrap up. The first one is that with EBS, you can have multi-attachment."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1131.28,
      "end": 1135.92,
      "text": " That basically means that when you create a volume, that single volume can be attached to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1135.92,
      "end": 1141.76,
      "text": " multiple EC2 instances. And there is a limit, of course, and the limit is 16 EC2 instances,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1141.76,
      "end": 1147.2,
      "text": " which basically means that you can share data in a volume across 16 different machines."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1147.2,
      "end": 1152.8799999999999,
      "text": " Only works with provision IOPS though, so you basically are forced to use IO1 or IO2 if you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1152.8799999999999,
      "end": 1155.76,
      "text": " want to use this particular feature. And of course, it's something that you need to use"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1155.76,
      "end": 1160.96,
      "text": " carefully because you know that reading and writing from different machines in the same disk"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1160.96,
      "end": 1165.76,
      "text": " might create consistency problems. So one way to avoid those consistency problems is to use a file"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1165.76,
      "end": 1170.32,
      "text": " system that is designed for this particular use case, like a cluster or file system. So don't just"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1170.32,
      "end": 1177.04,
      "text": " go for the standard Linux one like ext or XFS because these ones might not guarantee you any"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1177.04,
      "end": 1182.24,
      "text": " consistency. There are of course other options if you want to do something like this. Probably you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1182.24,
      "end": 1189.36,
      "text": " are thinking about NFS or EFS on AWS or maybe FSX, and these are designed for sharing data across"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1189.36,
      "end": 1193.52,
      "text": " many devices. So probably these are more scalable options. Generally speaking, they might be more"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1193.52,
      "end": 1197.28,
      "text": " suitable for this kind of use case, but we thought it was worth mentioning the idea of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1197.28,
      "end": 1201.52,
      "text": " multi-attachment. Maybe for specific use cases, you maybe have a cluster of a few machines,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1201.52,
      "end": 1206.08,
      "text": " it might be an easy way to just be able to share information across these machines. And the last"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1206.08,
      "end": 1211.04,
      "text": " thing that I want to mention is that there is ECS support, which basically means that you can configure"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1211.04,
      "end": 1216.56,
      "text": " your tasks or services to create EBS volumes when they are launched or deployed, but you cannot"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1216.56,
      "end": 1221.04,
      "text": " attach an existing EBS volume. The thing that you could do is that you could do a snapshot and then"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1221.04,
      "end": 1225.44,
      "text": " you can create an EBS volume from a snapshot. So again, in the use case where you might have"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1225.44,
      "end": 1230.24,
      "text": " datasets that you have created before and you want to be able to consume those datasets from"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1230.24,
      "end": 1235.92,
      "text": " an ECS cluster, this could be one way of giving your cluster access to that data. And of course,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1235.92,
      "end": 1240.8,
      "text": " this works in Fargate too, so something to be aware. And this is everything we have on this"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1240.8,
      "end": 1246.72,
      "text": " Jellyfish EBS episode, so hopefully you enjoyed all of that and you find it valuable. But of course,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1246.72,
      "end": 1251.04,
      "text": " don't forget that if you don't clean up your old volumes as snapshots, you are going to get stuck."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1251.04,
      "end": 1262.8,
      "text": " So thank you very much for being with us and we'll see you in the next episode."
    }
  ]
}