{
  "speakers": {
    "spk_0": "Luciano",
    "spk_1": "Eoin"
  },
  "segments": [
    {
      "speakerLabel": "spk_0",
      "start": 0,
      "end": 3.12,
      "text": " A couple of weeks ago, AWS announced a new open source tool,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 3.12,
      "end": 7.44,
      "text": " CloudFront Hosting Toolkit, a new tool that promises to streamline the experience"
    },
    {
      "speakerLabel": "spk_0",
      "start": 7.44,
      "end": 12.96,
      "text": " of deploying front-end applications to AWS while retaining full control of the underlying infrastructure."
    },
    {
      "speakerLabel": "spk_0",
      "start": 12.96,
      "end": 17.44,
      "text": " We are particularly excited about this announcement because it was recognized by some people in the community"
    },
    {
      "speakerLabel": "spk_0",
      "start": 17.44,
      "end": 20.32,
      "text": " as the AWS response to something like Vercel."
    },
    {
      "speakerLabel": "spk_0",
      "start": 20.32,
      "end": 24.560000000000002,
      "text": " We took CloudFront Hosting Toolkit for a spin and we are eager to tell you what we found out."
    },
    {
      "speakerLabel": "spk_0",
      "start": 24.560000000000002,
      "end": 28.16,
      "text": " In this episode, we'll discuss all about CloudFront and Toolkit,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 28.16,
      "end": 33.36,
      "text": " but we will also talk about modern front-ends and what's the expectation for a modern web application these days,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 33.36,
      "end": 36.64,
      "text": " brought from a user perspective, so visiting an application,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 36.64,
      "end": 39.92,
      "text": " but also from a developer perspective, so building that kind of application."
    },
    {
      "speakerLabel": "spk_0",
      "start": 39.92,
      "end": 45.6,
      "text": " We will then discuss CloudFront Hosting Toolkit and see how it stands against this way of seeing modern front-ends."
    },
    {
      "speakerLabel": "spk_0",
      "start": 45.6,
      "end": 50.400000000000006,
      "text": " My name is Luciano and as always, I'm joined by Eoin for another episode of AWS Bites podcast."
    },
    {
      "speakerLabel": "spk_0",
      "start": 58.4,
      "end": 64,
      "text": " AWS Bites is brought to you by fourTheorem, an AWS consulting partner with tons of experience with AWS."
    },
    {
      "speakerLabel": "spk_0",
      "start": 64,
      "end": 68.96,
      "text": " If you need someone to help you with your ambitious AWS projects, check out fourTheorem.com."
    },
    {
      "speakerLabel": "spk_0",
      "start": 68.96,
      "end": 72.16,
      "text": " You can contact us directly using the links in the show notes."
    },
    {
      "speakerLabel": "spk_0",
      "start": 72.16,
      "end": 77.36,
      "text": " So maybe we can start this episode by describing what a modern front-end application looks like"
    },
    {
      "speakerLabel": "spk_0",
      "start": 77.36,
      "end": 82.08,
      "text": " because for many years, the golden standard of front-end application has been single page applications."
    },
    {
      "speakerLabel": "spk_0",
      "start": 82.08,
      "end": 86.32,
      "text": " And if you're not familiar with that definition, a single page application is effectively,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 86.32,
      "end": 91.91999999999999,
      "text": " you can imagine like a single HTML shell that is loaded and that shell only loads some JavaScript."
    },
    {
      "speakerLabel": "spk_0",
      "start": 91.91999999999999,
      "end": 95.75999999999999,
      "text": " And inside that JavaScript, you have all the logic that your application needs."
    },
    {
      "speakerLabel": "spk_0",
      "start": 95.75999999999999,
      "end": 101.36,
      "text": " So that JavaScript will do client-side routing, which basically means that once the application is loaded,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 101.36,
      "end": 107.19999999999999,
      "text": " there is JavaScript logic that will look at the current URL and decide which components need to be mounted"
    },
    {
      "speakerLabel": "spk_0",
      "start": 107.19999999999999,
      "end": 110.47999999999999,
      "text": " or unmounted to effectively refresh the page dynamically."
    },
    {
      "speakerLabel": "spk_0",
      "start": 110.47999999999999,
      "end": 116.24,
      "text": " It will also do client-side HTTP requests, something that has been called originally Ajax requests."
    },
    {
      "speakerLabel": "spk_0",
      "start": 116.24,
      "end": 118.88,
      "text": " In the past, now it's more called fetch requests."
    },
    {
      "speakerLabel": "spk_0",
      "start": 118.88,
      "end": 123.11999999999999,
      "text": " But the idea is that once the application is loaded, it doesn't really have any dynamic data,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 123.11999999999999,
      "end": 125.28,
      "text": " something that you might keep, for instance, in a database."
    },
    {
      "speakerLabel": "spk_0",
      "start": 125.28,
      "end": 130.24,
      "text": " So whenever you need to load dynamic data, you need to do HTTP requests to a backend API,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 130.24,
      "end": 134.16,
      "text": " and that API will give you the dynamic data that then can be displayed in the page."
    },
    {
      "speakerLabel": "spk_0",
      "start": 134.16,
      "end": 138.32,
      "text": " So this basically means that you can also the entire front-end as a static website"
    },
    {
      "speakerLabel": "spk_0",
      "start": 138.32,
      "end": 140.95999999999998,
      "text": " in something like CloudFront, for instance."
    },
    {
      "speakerLabel": "spk_0",
      "start": 140.95999999999998,
      "end": 144.24,
      "text": " And the great part of all of this is that you don't need a backend at all."
    },
    {
      "speakerLabel": "spk_0",
      "start": 144.24,
      "end": 149.12,
      "text": " It's just static files. The browser can load them, and all the business logic needed for your front-end"
    },
    {
      "speakerLabel": "spk_0",
      "start": 149.12,
      "end": 151.84,
      "text": " exists in those JavaScript files loaded by the browser."
    },
    {
      "speakerLabel": "spk_0",
      "start": 151.84,
      "end": 155.60000000000002,
      "text": " And this keeps things very simple, and it can be also very cost efficient,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 155.60000000000002,
      "end": 160.4,
      "text": " because once you host in S3 and CloudFront, that can scale to a massive amount,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 160.4,
      "end": 162,
      "text": " still with very little cost."
    },
    {
      "speakerLabel": "spk_0",
      "start": 162,
      "end": 166.56,
      "text": " The main frameworks that emerged in the last decade that try to cover this kind of use cases"
    },
    {
      "speakerLabel": "spk_0",
      "start": 166.56,
      "end": 168.56,
      "text": " are probably React, Vue, and Angular."
    },
    {
      "speakerLabel": "spk_0",
      "start": 168.56,
      "end": 171.52,
      "text": " There are so many others, and your framework comes out every week."
    },
    {
      "speakerLabel": "spk_0",
      "start": 171.52,
      "end": 175.28,
      "text": " But these are probably the three main ones that you will find in most projects."
    },
    {
      "speakerLabel": "spk_0",
      "start": 175.28,
      "end": 179.12,
      "text": " Now, there are some problems with this approach, this SPA's approach."
    },
    {
      "speakerLabel": "spk_0",
      "start": 179.12,
      "end": 183.60000000000002,
      "text": " One problem is that you have perceived loading times that can be very long."
    },
    {
      "speakerLabel": "spk_0",
      "start": 183.60000000000002,
      "end": 187.92000000000002,
      "text": " And this is because until all the JavaScript is loaded in the page, you basically see an empty page."
    },
    {
      "speakerLabel": "spk_0",
      "start": 187.92000000000002,
      "end": 192.64000000000001,
      "text": " You see just a white screen, and it might look like the website is broken if it takes too long."
    },
    {
      "speakerLabel": "spk_0",
      "start": 192.64000000000001,
      "end": 197.04000000000002,
      "text": " And with some framework, it's actually very easy to forget to do some optimization,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 197.04000000000002,
      "end": 200.88,
      "text": " and you might end up with your JavaScript bundle that can be multiple megabytes."
    },
    {
      "speakerLabel": "spk_0",
      "start": 200.88,
      "end": 205.35999999999999,
      "text": " So really, lots of people might have this risk if they underestimate the effort and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 205.35999999999999,
      "end": 208.24,
      "text": " optimize the JavaScript code that you just deploy your application,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 208.24,
      "end": 212.24,
      "text": " you expect everything works perfectly, but then the user has a very bad experience."
    },
    {
      "speakerLabel": "spk_0",
      "start": 212.24,
      "end": 215.76,
      "text": " We also mentioned that all dynamic data needs to be loaded externally."
    },
    {
      "speakerLabel": "spk_0",
      "start": 215.76,
      "end": 218.96,
      "text": " So that means that for all the kind of stuff, you need to build your own API,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 218.96,
      "end": 224.32,
      "text": " you need to deploy that API independently, and then your UI still needs to fetch all of that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 224.32,
      "end": 228.4,
      "text": " data, which might add to the delay before the user can see something useful."
    },
    {
      "speakerLabel": "spk_0",
      "start": 228.4,
      "end": 233.36,
      "text": " And that also creates some SEO problems because search engines will access your website,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 233.36,
      "end": 238.32,
      "text": " but then everything is happening after JavaScript is loaded, and not every search engine will"
    },
    {
      "speakerLabel": "spk_0",
      "start": 238.32,
      "end": 242.48000000000002,
      "text": " actually wait for that amount of time or even try to run JavaScript."
    },
    {
      "speakerLabel": "spk_0",
      "start": 242.48000000000002,
      "end": 248.88,
      "text": " So your indexing against search engines might be not necessarily the best because it's going to be"
    },
    {
      "speakerLabel": "spk_0",
      "start": 248.88,
      "end": 252.64000000000001,
      "text": " very unpredictable what different engines will be able to see from your website."
    },
    {
      "speakerLabel": "spk_0",
      "start": 252.64000000000001,
      "end": 257.6,
      "text": " So to address all these problems in the last few years, this trend of building UIs has evolved a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 257.6,
      "end": 262,
      "text": " little bit, and it seems like we are going back to server-side rendering. So what we used to do"
    },
    {
      "speakerLabel": "spk_0",
      "start": 262,
      "end": 267.04,
      "text": " in the times of PHP, Ruby or Rails, Django, basically you always have a server that's"
    },
    {
      "speakerLabel": "spk_0",
      "start": 267.04,
      "end": 271.92,
      "text": " generating all the HTML, all the JavaScript, CSS for your websites, and you can generate all of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 271.92,
      "end": 276.08000000000004,
      "text": " that stuff dynamically. So whenever you need to read data from a database, your server will do"
    },
    {
      "speakerLabel": "spk_0",
      "start": 276.08000000000004,
      "end": 280,
      "text": " that, compile the final page for the user, and then send all the assets to that."
    },
    {
      "speakerLabel": "spk_0",
      "start": 280,
      "end": 284.8,
      "text": " So in the JavaScript space, there are some new tools that have emerged to try to satisfy this"
    },
    {
      "speakerLabel": "spk_0",
      "start": 284.8,
      "end": 290.08,
      "text": " need, and probably one of the main ones is Next.js. And Next.js basically allows you to do"
    },
    {
      "speakerLabel": "spk_0",
      "start": 290.08,
      "end": 294.40000000000003,
      "text": " everything still with JavaScript. So you will be able to use, for instance, if you like React,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 294.40000000000003,
      "end": 299.2,
      "text": " you will be able to use React components both on the client-side and the server-side. And Next.js"
    },
    {
      "speakerLabel": "spk_0",
      "start": 299.2,
      "end": 304,
      "text": " gives you an experience, a development experience, where it's easy to perform actions on the server"
    },
    {
      "speakerLabel": "spk_0",
      "start": 304,
      "end": 308.32,
      "text": " and pre-generate content, ship that content directly to the user, so it's going to be loaded"
    },
    {
      "speakerLabel": "spk_0",
      "start": 308.32,
      "end": 313.04,
      "text": " very quickly. And then whenever you need to do something client-side, you can still use all the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 313.04,
      "end": 317.44,
      "text": " tools that you generally use with React and do client-side stuff. So it's kind of an hybrid,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 317.44,
      "end": 321.36,
      "text": " where in the same application, you can define all the backend logic and the frontend logic,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 321.36,
      "end": 326.56,
      "text": " and wherever you need to share components, Next.js makes it very easy. Now, Next.js is an open source"
    },
    {
      "speakerLabel": "spk_0",
      "start": 326.56,
      "end": 330.56,
      "text": " project that is built and maintained by Vercel. And of course, Vercel has an interest in that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 330.56,
      "end": 335.36,
      "text": " project because they have a commercial offering where they make it very, very easy to host Next.js"
    },
    {
      "speakerLabel": "spk_0",
      "start": 335.36,
      "end": 340.08000000000004,
      "text": " projects and more. And we think that their experience is actually very interesting."
    },
    {
      "speakerLabel": "spk_0",
      "start": 340.08,
      "end": 345.2,
      "text": " So maybe we should talk a little bit more about that, just to see how this tool announced by AWS"
    },
    {
      "speakerLabel": "spk_0",
      "start": 345.2,
      "end": 349.12,
      "text": " compares to that kind of experience."
    },
    {
      "speakerLabel": "spk_1",
      "start": 349.12,
      "end": 355.12,
      "text": " The number one thing that you'd think about when you think about Vercel is probably the developer experience. And that involves how easy is it to get up and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 355.12,
      "end": 360.96,
      "text": " running and deploy your first application and keep it running. And the zero-config nature of Vercel"
    },
    {
      "speakerLabel": "spk_1",
      "start": 360.96,
      "end": 364.96,
      "text": " is probably one of its best selling points because it's just very easy to connect your GitHub repo"
    },
    {
      "speakerLabel": "spk_1",
      "start": 364.96,
      "end": 370.32,
      "text": " and have something deployed in a couple of minutes. It doesn't just limit itself to Next.js"
    },
    {
      "speakerLabel": "spk_1",
      "start": 370.32,
      "end": 374.88,
      "text": " as well. It supports many other frameworks out of the box. And when you deploy it, you get the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 374.88,
      "end": 380.47999999999996,
      "text": " automated deployment from your repo, but you also get custom domains and your HTTPS certificates"
    },
    {
      "speakerLabel": "spk_1",
      "start": 380.47999999999996,
      "end": 385.52,
      "text": " are going to be provisioned for you. And then it'll also scale on demand for you. So it's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 385.52,
      "end": 389.28,
      "text": " using other cloud providers under the hood, including AWS, and it's managing all of the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 389.28,
      "end": 395.03999999999996,
      "text": " scalability. But as well as just scaling within regions on cloud providers, it's also edge"
    },
    {
      "speakerLabel": "spk_1",
      "start": 395.03999999999996,
      "end": 400.23999999999995,
      "text": " optimized. So it's doing edge up deployments as well to various CDNs and running a lot of those"
    },
    {
      "speakerLabel": "spk_1",
      "start": 400.23999999999995,
      "end": 405.28,
      "text": " server actions and server component rendering on the edge for low latency. One of the really"
    },
    {
      "speakerLabel": "spk_1",
      "start": 405.28,
      "end": 409.44,
      "text": " cool things is that if you're working with branches, it will give you preview deployments"
    },
    {
      "speakerLabel": "spk_1",
      "start": 409.44,
      "end": 413.52,
      "text": " from your branches. So this means that right away, when you create a feature branch or a fixed branch,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 413.52,
      "end": 417.35999999999996,
      "text": " and you're working on something, you immediately get a preview URL that you can share with"
    },
    {
      "speakerLabel": "spk_1",
      "start": 417.36,
      "end": 422.72,
      "text": " stakeholders. And one of the cool features of that is that your participants can annotate"
    },
    {
      "speakerLabel": "spk_1",
      "start": 422.72,
      "end": 427.52000000000004,
      "text": " and make comments in line in your preview environment. So you can iterate really quickly"
    },
    {
      "speakerLabel": "spk_1",
      "start": 427.52000000000004,
      "end": 432.56,
      "text": " with feedback. It also has a whole set of other integrations with other products like databases,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 432.56,
      "end": 436.32,
      "text": " you can get a Postgres database up and running pretty quickly. You get logs,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 436.32,
      "end": 442.48,
      "text": " they've been putting a lot of investment into AI support recently, CMS integration, and also other"
    },
    {
      "speakerLabel": "spk_1",
      "start": 442.48,
      "end": 447.68,
      "text": " things like analytics and important security aspects as well. So there's a whole lot to love"
    },
    {
      "speakerLabel": "spk_1",
      "start": 447.68,
      "end": 452.48,
      "text": " about Vercel, but they're not a sponsor of this episode. So while we like the developer experience"
    },
    {
      "speakerLabel": "spk_1",
      "start": 452.48,
      "end": 456.72,
      "text": " and the feature set, it's still a software as a service, and you have a build or buy decision,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 456.72,
      "end": 461.52000000000004,
      "text": " and you have to evaluate the vendor on their own merits. If you want some more control autonomy"
    },
    {
      "speakerLabel": "spk_1",
      "start": 461.52000000000004,
      "end": 466.48,
      "text": " around the infrastructure, you might want to deploy it to your own AWS account. And Vercel"
    },
    {
      "speakerLabel": "spk_1",
      "start": 466.48,
      "end": 470.64000000000004,
      "text": " isn't something that will allow you to do that. So if you use Vercel, you don't have a lot of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 470.64,
      "end": 475.76,
      "text": " visibility into how your code is deployed and where it's going under the hood. And especially"
    },
    {
      "speakerLabel": "spk_1",
      "start": 475.76,
      "end": 480.24,
      "text": " in the context of working with enterprise organizations, there are a lot of good reasons"
    },
    {
      "speakerLabel": "spk_1",
      "start": 480.24,
      "end": 486.32,
      "text": " to avoid Vercel and to host front end applications yourself directly on AWS. So where do we start?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 486.32,
      "end": 490.15999999999997,
      "text": " If we want to host a front end on AWS, this is something that we've talked about a lot. It's a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 490.15999999999997,
      "end": 495.68,
      "text": " bit of a bugbear of ours, I suppose, just trying to find the right most optimal way to host static"
    },
    {
      "speakerLabel": "spk_1",
      "start": 495.68,
      "end": 500.15999999999997,
      "text": " websites. We covered it in one of the very first episodes, episode three, how do you deploy a static"
    },
    {
      "speakerLabel": "spk_1",
      "start": 500.16,
      "end": 505.36,
      "text": " website on AWS? And then back in episode 80, we were talking specifically about private static"
    },
    {
      "speakerLabel": "spk_1",
      "start": 505.36,
      "end": 510.32000000000005,
      "text": " websites for enterprises. And there was always, it's always a trade off, no clear winner there."
    },
    {
      "speakerLabel": "spk_1",
      "start": 510.32000000000005,
      "end": 515.28,
      "text": " But now AWS has announced a new open source tool to help you tackle this problem. And this is the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 515.28,
      "end": 520,
      "text": " CloudFront hosting toolkit. So this certainly got a lot of people's attention, a lot of people"
    },
    {
      "speakerLabel": "spk_1",
      "start": 520,
      "end": 525.0400000000001,
      "text": " talking because just you only have to mention Vercel competitor to get people's ears pricked"
    },
    {
      "speakerLabel": "spk_1",
      "start": 525.04,
      "end": 531.52,
      "text": " up. And Luciano, you've been good enough to take a good look at this for us. So maybe your best"
    },
    {
      "speakerLabel": "spk_1",
      "start": 531.52,
      "end": 537.04,
      "text": " place to give us an introduction, what is this CloudFront hosting toolkit and what can we do"
    },
    {
      "speakerLabel": "spk_1",
      "start": 537.04,
      "end": 541.04,
      "text": " with it?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 541.04,
      "end": 546.56,
      "text": " Yeah, if you look at the announcement blog post, we will have a link in the show notes, they describe this tool as an open source command line interface to help you deploy fast and secure"
    },
    {
      "speakerLabel": "spk_0",
      "start": 546.56,
      "end": 551.4399999999999,
      "text": " front ends in the cloud. So that kind of tells you what is the ambition of the tool. And the idea is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 551.44,
      "end": 555.0400000000001,
      "text": " to try to remove as much as possible the complexity of setting up everything you need"
    },
    {
      "speakerLabel": "spk_0",
      "start": 555.0400000000001,
      "end": 561.2800000000001,
      "text": " to run your own front end on AWS. So you have a CLI, you run the CLI, it can, once you install it"
    },
    {
      "speakerLabel": "spk_0",
      "start": 561.2800000000001,
      "end": 564.6400000000001,
      "text": " and run it against your particular repository where you are building your own front end,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 564.6400000000001,
      "end": 569.6,
      "text": " it can detect the framework of choice. For instance, Next.js is one of the supported ones."
    },
    {
      "speakerLabel": "spk_0",
      "start": 569.6,
      "end": 573.5200000000001,
      "text": " And at that point, it can start to generate configuration for you, for instance, recognizing"
    },
    {
      "speakerLabel": "spk_0",
      "start": 573.5200000000001,
      "end": 578.72,
      "text": " how do you build for this particular front end. It integrates with your repository. Right now,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 578.72,
      "end": 584,
      "text": " it supports GitHub. And basically what it does, the CLI will allow you to connect your GitHub"
    },
    {
      "speakerLabel": "spk_0",
      "start": 584,
      "end": 588.5600000000001,
      "text": " with a build pipeline hosted in AWS. And also at that point, it can create all the necessary"
    },
    {
      "speakerLabel": "spk_0",
      "start": 588.5600000000001,
      "end": 593.36,
      "text": " resources. So for instance, what do you need to host a front end? You would need an S3 bucket,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 593.36,
      "end": 598,
      "text": " you would need the CloudFront distribution, DNS record, TLS certificates, and more. It will create"
    },
    {
      "speakerLabel": "spk_0",
      "start": 598,
      "end": 602.1600000000001,
      "text": " all of that stuff for you using infrastructure as code. So you don't really need to worry about"
    },
    {
      "speakerLabel": "spk_0",
      "start": 602.1600000000001,
      "end": 606.5600000000001,
      "text": " basically coding all these things or figuring out where to find all of the examples to put all these"
    },
    {
      "speakerLabel": "spk_0",
      "start": 606.56,
      "end": 610.88,
      "text": " things together. So that removes a lot of the friction of self-hosting your own front ends."
    },
    {
      "speakerLabel": "spk_0",
      "start": 610.88,
      "end": 615.4399999999999,
      "text": " And everything that it does, as I said, is done through infrastructure as code, and it's made very"
    },
    {
      "speakerLabel": "spk_0",
      "start": 615.4399999999999,
      "end": 619.76,
      "text": " accessible. It's still deploying through CloudFormation so you can see exactly what's"
    },
    {
      "speakerLabel": "spk_0",
      "start": 619.76,
      "end": 624.0799999999999,
      "text": " being deployed. You have configuration files that gets generated for you. So you have also"
    },
    {
      "speakerLabel": "spk_0",
      "start": 624.0799999999999,
      "end": 628.88,
      "text": " opportunities to still sticking with the same process that is given to you by the CLI. You can"
    },
    {
      "speakerLabel": "spk_0",
      "start": 628.88,
      "end": 633.1999999999999,
      "text": " tweak and configure certain things to your liking. And then even if at the end of the day, you still"
    },
    {
      "speakerLabel": "spk_0",
      "start": 633.2,
      "end": 636.96,
      "text": " want to change more, all the infrastructure is there, all the CloudFormation is there."
    },
    {
      "speakerLabel": "spk_0",
      "start": 636.96,
      "end": 641.6,
      "text": " So you can take that and do further customization if you need to. And somewhere else, I think in the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 641.6,
      "end": 647.2,
      "text": " repository, they say something that to me represents the ambition of this project. And it reads us,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 647.2,
      "end": 651.76,
      "text": " gives you the convenience of a managed service while putting you in full control of the hosting"
    },
    {
      "speakerLabel": "spk_0",
      "start": 651.76,
      "end": 657.0400000000001,
      "text": " infrastructure and deployment pipelines to make it your own. So that's a good marketing phrase to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 657.0400000000001,
      "end": 661.36,
      "text": " say, yes, we want to make it easy for you, but at the end of the day, this is your own infrastructure."
    },
    {
      "speakerLabel": "spk_0",
      "start": 661.76,
      "end": 664.48,
      "text": " You'll have access to it and you'll be able to change everything you need."
    },
    {
      "speakerLabel": "spk_0",
      "start": 664.48,
      "end": 666.4,
      "text": " You can have your cake and eat it."
    },
    {
      "speakerLabel": "spk_0",
      "start": 666.4,
      "end": 671.12,
      "text": " Something like that, yes. But now we get to the more painful notes, I guess, because yeah,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 671.12,
      "end": 676.72,
      "text": " just to be real, we need to say that the current state is still a version 1.0 and it's still very,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 676.72,
      "end": 681.6,
      "text": " very early. Well, it was announced only a few weeks ago and it's fair to say that it's still"
    },
    {
      "speakerLabel": "spk_0",
      "start": 681.6,
      "end": 686,
      "text": " very early days. So if our feedback is going to look a little bit harsh in some parts,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 686,
      "end": 690.08,
      "text": " at the same time, you have to think that this is an evolving project. It's only early stages,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 690.08,
      "end": 694.8000000000001,
      "text": " so it can only get better. So let's be fair in that sense. So if you look at the supported"
    },
    {
      "speakerLabel": "spk_0",
      "start": 694.8000000000001,
      "end": 700.4000000000001,
      "text": " feature, right now it supports everything that you need to host an SPA that is statically generated."
    },
    {
      "speakerLabel": "spk_0",
      "start": 700.4000000000001,
      "end": 704.88,
      "text": " And that is a very important note because it means that right now you cannot do any server"
    },
    {
      "speakerLabel": "spk_0",
      "start": 704.88,
      "end": 708.96,
      "text": " side rendering. By default, it doesn't support any of that. So in a way, it's still a little"
    },
    {
      "speakerLabel": "spk_0",
      "start": 708.96,
      "end": 714.48,
      "text": " bit behind the current trends. And if you use, for instance, Next.js, Next.js allows you to do"
    },
    {
      "speakerLabel": "spk_0",
      "start": 714.48,
      "end": 720.64,
      "text": " websites that are only static generated with some tweaking in the configuration and just by not"
    },
    {
      "speakerLabel": "spk_0",
      "start": 720.64,
      "end": 725.36,
      "text": " using certain specific features, you can do that. But you need to be aware that this is an existing"
    },
    {
      "speakerLabel": "spk_0",
      "start": 725.36,
      "end": 729.44,
      "text": " limitation. If you want to use this tool with Next.js, you can only use the features that are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 729.44,
      "end": 735.84,
      "text": " supported with the pre-rendered static version of the website. The other feature is that, as we said,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 735.84,
      "end": 740.72,
      "text": " integrates really well with GitHub for version control. It's going to do for you atomic and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 740.72,
      "end": 745.84,
      "text": " immutable Eastern deploys on CloudFront. We'll talk a little bit more about that later. It's a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 745.84,
      "end": 750.1600000000001,
      "text": " pretty cool implementation. So I think it's worth spending some time on how all of that works."
    },
    {
      "speakerLabel": "spk_0",
      "start": 750.1600000000001,
      "end": 756.08,
      "text": " It's a CLI tool, so very easy to install with NPM, very easy to run it in any new project. It takes"
    },
    {
      "speakerLabel": "spk_0",
      "start": 756.08,
      "end": 760.88,
      "text": " literally a few seconds just to get started. And also it does security and caching best practices."
    },
    {
      "speakerLabel": "spk_0",
      "start": 760.88,
      "end": 764.88,
      "text": " So all of these things are already incorporated in the generated infrastructure. So one less"
    },
    {
      "speakerLabel": "spk_0",
      "start": 764.88,
      "end": 769.12,
      "text": " thing to worry about because if you were doing all of this yourself, maybe you get something working"
    },
    {
      "speakerLabel": "spk_0",
      "start": 769.12,
      "end": 773.84,
      "text": " after a few hours of investigation and trainings, but then at the end of the day, you might still be"
    },
    {
      "speakerLabel": "spk_0",
      "start": 773.84,
      "end": 777.84,
      "text": " unsure on whether that's something that can be production ready or not. This tool removes a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 777.84,
      "end": 782.16,
      "text": " little bit of that concern because it's already following tons of best practices that have been"
    },
    {
      "speakerLabel": "spk_0",
      "start": 782.16,
      "end": 786.8,
      "text": " established in the AWS landscape for the last few years. And then it allows you to use custom"
    },
    {
      "speakerLabel": "spk_0",
      "start": 786.8,
      "end": 792.64,
      "text": " domains. So if you want to host your own front end in your own custom domain, all of that process"
    },
    {
      "speakerLabel": "spk_0",
      "start": 792.64,
      "end": 798.08,
      "text": " is streamlined. It's going to integrate with Route 53 and generate the necessary records,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 798.08,
      "end": 802.88,
      "text": " generate the TLS certificates for you, and make sure everything is integrated properly. If you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 802.88,
      "end": 807.12,
      "text": " don't have a custom domain, it's going to use a CloudFront domain for you. And finally, there is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 807.12,
      "end": 812.64,
      "text": " also a CDK level three construct for the toolkit that can be used as an alternative for the CLI."
    },
    {
      "speakerLabel": "spk_0",
      "start": 812.64,
      "end": 817.12,
      "text": " So that's maybe another option if you prefer to go more with something that is integrated with your"
    },
    {
      "speakerLabel": "spk_0",
      "start": 817.12,
      "end": 822.96,
      "text": " own CDK rather than using the CLI. But I mentioned atomic and immutable instant deploys, which is a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 822.96,
      "end": 827.36,
      "text": " little bit of a mouthful. So do we want to try to explain what that really is and how it is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 827.36,
      "end": 832.5600000000001,
      "text": " implemented? Yeah, it's pretty neat."
    },
    {
      "speakerLabel": "spk_1",
      "start": 832.5600000000001,
      "end": 837.52,
      "text": " It uses CloudFront functions and CloudFront key value store, which you may not have come across. Let's go through these fundamental pieces of CloudFront"
    },
    {
      "speakerLabel": "spk_1",
      "start": 837.52,
      "end": 843.12,
      "text": " first. So CloudFront functions are a little bit like CloudFlare workers, I guess, or other edge"
    },
    {
      "speakerLabel": "spk_1",
      "start": 843.12,
      "end": 847.52,
      "text": " functions that you might've come across. They're like a much simpler version of Lambda because you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 847.52,
      "end": 853.12,
      "text": " also have Lambda at the edge, but Lambda at the edge is more like a fully fledged Lambda,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 853.12,
      "end": 858.96,
      "text": " although not quite. CloudFront functions are just more like lightweight JavaScript isolated"
    },
    {
      "speakerLabel": "spk_1",
      "start": 858.96,
      "end": 864.96,
      "text": " contexts that are much more efficient, but also restricted in terms of what packages you can use"
    },
    {
      "speakerLabel": "spk_1",
      "start": 864.96,
      "end": 869.84,
      "text": " and that sort of thing. So you could use CloudFront functions for writing lightweight functions for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 870.4,
      "end": 877.92,
      "text": " high-scale latency-sensitive CDN customizations like redirects or request response modification,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 878.4,
      "end": 883.5999999999999,
      "text": " URL rewrites, that sort of thing. And then you have CloudFront key value store. And this is a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 883.5999999999999,
      "end": 888.8,
      "text": " bit like a simplified version of DynamoDB that runs on the edge. And we've seen this kind of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 888.8,
      "end": 896,
      "text": " service from CloudFront, sorry, from CloudFlare as well. It's a global low latency key value store,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 896,
      "end": 901.76,
      "text": " and it allows you to read from CloudFront functions. And by having that state in your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 901.76,
      "end": 907.28,
      "text": " key value store, you can do more customizable logic at the edge functions. So when you have"
    },
    {
      "speakerLabel": "spk_1",
      "start": 907.36,
      "end": 913.1999999999999,
      "text": " CloudFront key value store, you can make updates to function code and updates to the data associated"
    },
    {
      "speakerLabel": "spk_1",
      "start": 913.1999999999999,
      "end": 918.16,
      "text": " with the function independently of each other. This kind of separation will simplify your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 918.16,
      "end": 922.16,
      "text": " functions code and makes it easy to update data without the need to deploy code changes."
    },
    {
      "speakerLabel": "spk_1",
      "start": 923.04,
      "end": 927.52,
      "text": " Now, when it comes back to this CloudFront hosting toolkit, the basic idea is that every time you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 927.52,
      "end": 932.8,
      "text": " want to deploy a new version of your front end, rather than replacing the entire content of the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 932.8,
      "end": 938,
      "text": " S3 bucket hosting your assets or overwriting, you'll create a new unique deployment ID and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 938,
      "end": 943.12,
      "text": " host all the files for a deployment version in a dedicated prefix, like a subfolder. So let's say"
    },
    {
      "speakerLabel": "spk_1",
      "start": 943.12,
      "end": 947.28,
      "text": " your first deployment ID is version one, then it'll create a prefix like slash version one."
    },
    {
      "speakerLabel": "spk_1",
      "start": 947.28,
      "end": 953.8399999999999,
      "text": " And then within that, you'll have your index.html and your bundled JavaScript. And then with your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 953.8399999999999,
      "end": 958.24,
      "text": " second deployment, it would be version two under a slash version two prefix. So when a user will"
    },
    {
      "speakerLabel": "spk_1",
      "start": 958.24,
      "end": 965.6,
      "text": " try to access a page by doing get index.html, this request goes to CloudFront first and the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 965.6,
      "end": 970.32,
      "text": " CloudFront function is the first bit of logic that gets evaluated. It can go to the CloudFront"
    },
    {
      "speakerLabel": "spk_1",
      "start": 970.32,
      "end": 974.48,
      "text": " key value store to read the ID of the latest deployed version. And the function will then"
    },
    {
      "speakerLabel": "spk_1",
      "start": 974.48,
      "end": 980.08,
      "text": " rewrite the URL to point to the specific assets in the S3 origin for that current version."
    },
    {
      "speakerLabel": "spk_1",
      "start": 980.08,
      "end": 985.84,
      "text": " So if you're going, making a request to get slash about that would become get slash version two"
    },
    {
      "speakerLabel": "spk_1",
      "start": 986.1600000000001,
      "end": 991.6800000000001,
      "text": " slash about dot html, for example. So then it'll load that specific asset from S3 or cache and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 991.6800000000001,
      "end": 995.44,
      "text": " return it to the user. And then when you have a new deployment, it'll just create a new prefix"
    },
    {
      "speakerLabel": "spk_1",
      "start": 995.44,
      "end": 1000,
      "text": " in S3 to host all those assets. When all is done, the new version ID is stored in that key value"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1000,
      "end": 1003.84,
      "text": " store. And the next time somebody is accessing the website, they'll get the latest version. Now,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1003.84,
      "end": 1007.9200000000001,
      "text": " there's a few nice things about this approach. It's an immutable deployment approach, which means"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1007.9200000000001,
      "end": 1012.88,
      "text": " that every deployment is clean and new, and you can troubleshoot it in its own space. But you also"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1012.96,
      "end": 1017.92,
      "text": " retain older versions, which would make it easy to do rollbacks if you have to do that. There is"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1017.92,
      "end": 1021.84,
      "text": " little risk then that a user will receive assets from different versions, which is a common problem"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1021.84,
      "end": 1027.44,
      "text": " if you're just kind of overwriting into a single prefix in S3 or if they're accessing the website"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1027.44,
      "end": 1033.12,
      "text": " during an update. The other nice thing about this is that it could easily support preview"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1033.12,
      "end": 1037.44,
      "text": " environments. But we haven't seen anything showing that this is supported yet in CloudFront hosting"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1037.44,
      "end": 1042.56,
      "text": " toolkit, but it seems like this kind of architecture would certainly enable it. So"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1042.56,
      "end": 1047.92,
      "text": " maybe let's talk about your real world practice. You've taken it for a good test drive CloudFront"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1047.92,
      "end": 1052.16,
      "text": " hosting toolkit, and you've had some successes and some bumps in the road Luciano."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1054.8,
      "end": 1061.52,
      "text": " So I'm going to try to describe the steps that I performed to try to test this tool and the different things that I found out."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1061.52,
      "end": 1065.68,
      "text": " And hopefully that can give you an idea of how the tool works, the kind of developer experience"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1065.76,
      "end": 1071.2,
      "text": " you get and what gets created for you behind the scenes. So I started with a plain vanilla Next.js"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1071.2,
      "end": 1076.96,
      "text": " project. There is one CLI command that you can find in the Next.js documentation that basically"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1076.96,
      "end": 1082.96,
      "text": " uses a starter kit. And that starter kit is just a simple repo where you have a one Next.js page"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1082.96,
      "end": 1088.5600000000002,
      "text": " that points you to the documentation, to the about page and a few other simple things. So effectively"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1088.5600000000002,
      "end": 1093.52,
      "text": " it's like one page application, and it's like a static, statically renderable application because"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1093.52,
      "end": 1098,
      "text": " it doesn't really do any server side action or anything like that. So you run this first command,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1098,
      "end": 1102.72,
      "text": " this command will do all the scaffolding for you. At that point, you can do npm install to install"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1102.72,
      "end": 1107.36,
      "text": " the dependencies. And if you want to run your frontend locally, just to see it running and play"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1107.36,
      "end": 1112.6399999999999,
      "text": " around with it, you can just say npm run dev, and that will give you locally an environment that you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1112.6399999999999,
      "end": 1116.8799999999999,
      "text": " can use to tweak things around. Then at some point you are maybe happy with it and you want to try to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1116.8799999999999,
      "end": 1121.44,
      "text": " deploy it using this CloudFront hosting toolkit. The first thing you need to do is install the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1121.44,
      "end": 1126.64,
      "text": " toolkit itself. We said it's a CLN application, it's built with Node.js. So of course Node.js"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1126.64,
      "end": 1132.8,
      "text": " becomes a requirement at that point. But once you do that, you can easily install with MPX or just"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1132.8,
      "end": 1139.6000000000001,
      "text": " by doing an npm install global of the art AWS slash CloudFront dash hosting dash toolkit. And"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1139.6000000000001,
      "end": 1144.24,
      "text": " that will basically pull the latest version of the toolkit for you in your local development"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1144.24,
      "end": 1148.16,
      "text": " environment. Now the idea is that you need to use it against an existing repository. So this is why"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1148.16,
      "end": 1154,
      "text": " I created an XJS project first. Once I did all of that and I was happy with the outcome, then you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1154,
      "end": 1159.76,
      "text": " can start the tool. And the way you start the tool, you go with your CLI into the specific folder where"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1159.76,
      "end": 1164.88,
      "text": " you have your frontend application and you just run CloudFront dash hosting dash toolkit space"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1164.88,
      "end": 1170.16,
      "text": " init. That's literally the one command you need to run. And at that point, you have a guided process"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1170.16,
      "end": 1175.1200000000001,
      "text": " that will effectively ask you some questions to try to understand how to deploy this project for"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1175.12,
      "end": 1179.28,
      "text": " you. And the first question that it's going to ask is what is your repository? And of course,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1179.28,
      "end": 1184.4799999999998,
      "text": " it's going to be able to auto detect it from the current working folder. If you have already"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1184.4799999999998,
      "end": 1188.8,
      "text": " initialized that as a Git repository and it's hosted on GitHub, it's going to automatically"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1188.8,
      "end": 1192.8799999999999,
      "text": " complete that particular question. But you can change it if you have different requirements,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1192.8799999999999,
      "end": 1197.4399999999998,
      "text": " or maybe if you haven't set up the repo yet locally, you can still point it to a repo that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1197.4399999999998,
      "end": 1202.1599999999999,
      "text": " you have set up already remotely on GitHub. The next step is going to ask you the name of the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1202.16,
      "end": 1207.8400000000001,
      "text": " branch for deployments. It defaults to main, but I think you can use this if you want to change that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1207.8400000000001,
      "end": 1212.5600000000002,
      "text": " to something else. Maybe you want to have a branch called deployment or deploy that you specifically,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1212.5600000000002,
      "end": 1216.4,
      "text": " when you want to trigger a deploy, you can decide which branch is actually going to trigger the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1216.4,
      "end": 1221.44,
      "text": " deployments that way. The next question is what is your framework of choice? And here, you have a few"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1221.44,
      "end": 1227.2,
      "text": " frameworks that are supported. AngularJS, Next.js, React, Vue.js. There is another one which is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1227.2,
      "end": 1231.68,
      "text": " no build required, which basically means everything that is in the main folder is going to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1231.68,
      "end": 1237.04,
      "text": " be deployed. And I think this is for static websites that don't require a build process. Maybe"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1237.04,
      "end": 1241.8400000000001,
      "text": " you just created a few simple HTML, CSS, and JavaScript files. You have them there and you just"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1241.8400000000001,
      "end": 1246.0800000000002,
      "text": " want to deploy them. The cool thing here is that it was able to automatically detect that I was"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1246.0800000000002,
      "end": 1251.68,
      "text": " using Next.js. So that option was already selected for me. I just needed to hit enter and proceed."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1251.68,
      "end": 1256.64,
      "text": " But of course, you can change that if maybe it's not able to detect your framework, or maybe you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1256.64,
      "end": 1260.96,
      "text": " are actually using something else and it didn't really detect it correctly. The next step is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1261.6000000000001,
      "end": 1267.2,
      "text": " asking you if you want to use a specific domain name, or if you want to use the default CloudFront"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1267.2,
      "end": 1271.92,
      "text": " domains. In this particular case, I didn't have a domain, so I just went with the CloudFront one,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1271.92,
      "end": 1276.4,
      "text": " which maybe is a little bit of a simpler path. I'd be curious to try it again with a custom domain,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1276.4,
      "end": 1281.1200000000001,
      "text": " just to see all the extra resources that it needs to create to support that. But I haven't done that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1281.1200000000001,
      "end": 1285.2800000000002,
      "text": " yet. Once you've done all of this, this is basically the initial setup. So it's basically"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1285.28,
      "end": 1290.24,
      "text": " making sure that it understands your project and the configuration of your project. But at that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1290.24,
      "end": 1294.16,
      "text": " point, it can start to generate things for you. And it's interesting to see that it generates a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1294.16,
      "end": 1299.44,
      "text": " folder called the CloudFront-hosting-toolkit. And in this folder, it will generate three files for"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1299.44,
      "end": 1304.16,
      "text": " you. The first file is a code build job configuration. So it's basically the YAML file"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1304.16,
      "end": 1308.32,
      "text": " that contains all of that configuration. And this is awesome because that means that if you want to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1308.32,
      "end": 1312.8,
      "text": " change anything in the pre-generated build step, because it's kind of assuming, okay, this is a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1312.8,
      "end": 1317.9199999999998,
      "text": " Next.js project. I know how to build a Next.js project, but maybe you have additional requirements."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1317.9199999999998,
      "end": 1322,
      "text": " Maybe you want to do additional things that are not the standard way of building an Next.js website."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1322,
      "end": 1327.28,
      "text": " You can easily change all the steps and customize it to your liking without having to change the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1327.28,
      "end": 1331.76,
      "text": " toolkit or having to change anything else in the infrastructure as code. So it's just this one file"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1331.76,
      "end": 1336.56,
      "text": " allows you to change things. It also generates in this folder the CloudFront function that is used"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1336.56,
      "end": 1341.84,
      "text": " for URL rewriting, the one you described before, Eoin. And you can see all the JavaScript code that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1341.84,
      "end": 1346.6399999999999,
      "text": " is being generated. So also there, you have an opportunity to change things around. Maybe you can,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1346.6399999999999,
      "end": 1351.04,
      "text": " I don't know, add some extra logic to check if there is a query string parameter that says"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1351.04,
      "end": 1356,
      "text": " version equals something. Maybe you can actually enable that feature preview that way and by"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1356,
      "end": 1359.6,
      "text": " yourself, assuming that it's not supported yet. But basically, this is just to tell you that you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1359.6,
      "end": 1363.84,
      "text": " have one file with all the logic that are visible. It's easy to change. And if you change it, this is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1363.84,
      "end": 1368.56,
      "text": " what's going to get deployed for you. And then finally, there is a generic JSON file that contains"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1368.56,
      "end": 1374.24,
      "text": " all the options that were requested to you in the initial init phase. So if you change your mind,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1374.24,
      "end": 1378,
      "text": " maybe you don't want to deploy from main anymore, you want to deploy from another branch, you can"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1378,
      "end": 1382.8799999999999,
      "text": " easily change that JSON file to get your base configuration updated. At that point, what you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1382.8799999999999,
      "end": 1389.2,
      "text": " can do is that you can effectively deploy. At this point, you haven't deployed anything. You just"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1389.2,
      "end": 1393.36,
      "text": " generated these three configuration files, but those three configuration files are enough for"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1393.36,
      "end": 1398.08,
      "text": " you to start the deployment. So you can run another command called cloudfront-osting-toolkit"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1398.08,
      "end": 1402,
      "text": " space deploy. And what it's going to do is basically going to take all these three generated"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1402,
      "end": 1407.04,
      "text": " files as an input, and it's going to create all the necessary cloud formation templates to deploy"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1407.04,
      "end": 1411.76,
      "text": " everything else that we described before. So it's three buckets, cloud front, the distributions,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1411.76,
      "end": 1416.4799999999998,
      "text": " the cloud front function, the cloud front key value storage, and there is a lot more. You can"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1416.4799999999998,
      "end": 1421.1999999999998,
      "text": " check out, there is a diagram in the announcement page and in the repository showing exactly all the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1421.2,
      "end": 1425.28,
      "text": " resources that get created and how they are related to each other. And this is also going"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1425.28,
      "end": 1429.8400000000001,
      "text": " to do a few other things. So initially it's going to bootstrap your AWS account, which I think it"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1429.8400000000001,
      "end": 1434.32,
      "text": " means it's going to create a dedicated street bucket for the deployments. It's going to create"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1434.32,
      "end": 1438.48,
      "text": " the repository, the CodeStar integration. And actually the CodeStar integration is really"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1438.48,
      "end": 1442.96,
      "text": " interesting because what it does the first time you need to manually confirm that connection"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1442.96,
      "end": 1447.6000000000001,
      "text": " between your GitHub account and AWS. And it's something that you have to do in a browser where"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1447.6,
      "end": 1452.1599999999999,
      "text": " you are effectively authenticated on both sides. So what it's going to do is going to generate"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1452.1599999999999,
      "end": 1456.8,
      "text": " the request for you. Then it's going to redirect you to the AWS console and in the AWS console,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1456.8,
      "end": 1461.76,
      "text": " you can click to basically connect your own GitHub account. To be honest, this was amazing to see on"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1461.76,
      "end": 1465.6799999999998,
      "text": " one side, but on the other side, in my case, it was a little bit annoying because I use,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1465.6799999999998,
      "end": 1470.48,
      "text": " when I access to AWS, I generally use anonymous sessions because I might have sessions for"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1470.48,
      "end": 1474.32,
      "text": " different AWS accounts. So when I was trying to connect to GitHub, it didn't have my own"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1474.3999999999999,
      "end": 1479.84,
      "text": " credentials. And it took me a while to connect into that anonymous environment with GitHub,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1479.84,
      "end": 1485.36,
      "text": " asking you MFA and confirmation by email, just because they see that it's a different session"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1485.36,
      "end": 1489.9199999999998,
      "text": " that you haven't used before. But eventually I managed to get it working. And then all the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1489.9199999999998,
      "end": 1496.24,
      "text": " local setup was done. The remote setup was done on AWS. And you just need to click enter to say"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1496.24,
      "end": 1501.9199999999998,
      "text": " that you successfully connected GitHub with AWS. And then at that point it's going to proceed with"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1501.92,
      "end": 1506.8000000000002,
      "text": " the cloud formation deployment. Now, at this point, I had a problem because once everything"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1506.8000000000002,
      "end": 1511.92,
      "text": " is deployed for you, it's also going to try to run the code build for the first time and try to do a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1511.92,
      "end": 1516,
      "text": " first deployment of your front-end application. Like if you were doing your first commit,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1516,
      "end": 1521.44,
      "text": " basically. And that one actually failed because there is an issue with the version of Next.js"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1521.44,
      "end": 1526.48,
      "text": " that I'm using. I'm using the very latest version and that latest version doesn't support Next"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1526.48,
      "end": 1532.4,
      "text": " export, which is what the default build pipeline is using to create the static version of the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1532.4,
      "end": 1537.3600000000001,
      "text": " website. Now, this is something you can easily fix. You just need to create a Next config.js file,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1537.3600000000001,
      "end": 1541.52,
      "text": " do the modern way of saying that you want to produce a static website, which is just like"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1541.52,
      "end": 1545.84,
      "text": " one option, I think it's export static or something like that. Commit that into your own"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1545.84,
      "end": 1551.04,
      "text": " repository. And of course you also need to update the code build pipeline, not to use Next export"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1551.04,
      "end": 1555.68,
      "text": " anymore, because at that point, when you do Next build, it's already creating the final version of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1555.68,
      "end": 1559.92,
      "text": " your website for deployment. And this is basically where I stopped, but I could see that everything"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1559.92,
      "end": 1564.3200000000002,
      "text": " was generated correctly. I could see that if I was doing another commit, the build pipeline would"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1564.3200000000002,
      "end": 1568.96,
      "text": " trigger automatically and do all of the deployment we described. So I think even though there are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1568.96,
      "end": 1573.68,
      "text": " some steps that might be a little bit annoying, overall, that experience was quite pleasant."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1573.68,
      "end": 1578.0800000000002,
      "text": " I don't know what you think so far, and if you have any final consideration on your end."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1578.1599999999999,
      "end": 1582.8799999999999,
      "text": " You know, we talked about this kind of stuff when we were talking about CDK in previous episodes."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1582.8799999999999,
      "end": 1588.8799999999999,
      "text": " I personally have a bias against code, sorry, against tools that generate code that introduce"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1588.8799999999999,
      "end": 1593.12,
      "text": " another level of abstraction, mainly because it's just another, you have to understand kind of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1593.12,
      "end": 1597.6,
      "text": " what's going on under the hood, and then also what's happening in this abstraction layer. And"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1597.6,
      "end": 1601.28,
      "text": " if, especially with a tool like this that might not be perfectly stable yet, you might wonder,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1601.28,
      "end": 1606,
      "text": " will it suddenly generate a completely different set of infrastructure that might make it difficult"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1606,
      "end": 1611.2,
      "text": " to do seamless upgrades? And I'd much prefer to spend the time to provision all of the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1611.2,
      "end": 1616.72,
      "text": " infrastructure myself and really understand it more often than not. But I can certainly see"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1616.72,
      "end": 1621.28,
      "text": " the value in it, because I have been in a case recently where I've been trying to deploy a static"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1621.28,
      "end": 1626.4,
      "text": " version, like a SPA version of an XJS app, with only client-side rendering, with static export"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1626.4,
      "end": 1631.92,
      "text": " to CloudFront, and it's definitely not a trivial thing. So I think there's, I definitely commend"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1631.92,
      "end": 1637.52,
      "text": " the effort here to get all of this stuff working. It's not an easy thing to do, and it does provide"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1637.52,
      "end": 1643.2,
      "text": " like a good blueprint for people to get started with it. So while my bias isn't necessarily drawn"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1643.2,
      "end": 1648.24,
      "text": " to a tool like this, I think it is pretty promising. I think there's some really good"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1648.24,
      "end": 1652.16,
      "text": " ideas in here, like the immutable deployments, and it seems to be simple enough to use. There's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1652.16,
      "end": 1656,
      "text": " obviously some rough edges that need to be polished. The fact that it doesn't support"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1656,
      "end": 1660.0800000000002,
      "text": " server-side rendering may be a bit of a blocker for a lot of people at this point. Let's hope"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1660.08,
      "end": 1666.08,
      "text": " we'll see a bit of evolution there. I mean, I kind of think back to one of the previous"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1666.08,
      "end": 1670.8799999999999,
      "text": " releases from AWS we covered, which was the integration testing toolkit, the IITK,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1670.8799999999999,
      "end": 1675.84,
      "text": " and it was also a similar kind of review, like a lot of promising stuff, but needs more work."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1675.84,
      "end": 1680.1599999999999,
      "text": " And when I went back to look at that recently, because I did use it in a side project,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1681.04,
      "end": 1686.6399999999999,
      "text": " it doesn't seem to have actually evolved that much. So I know, we know that AWS likes to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1686.64,
      "end": 1691.1200000000001,
      "text": " release things early and get feedback from the user base, but let's hope that this one"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1691.1200000000001,
      "end": 1694.48,
      "text": " sees the love and attention that we need. What's your take?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1694.48,
      "end": 1698.8000000000002,
      "text": " Yeah, I absolutely agree with everything you said."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1698.8000000000002,
      "end": 1704.88,
      "text": " A few things that I can mention in addition to that is that I was able to fix an initial issue that I had with the CLI not"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1704.88,
      "end": 1710.48,
      "text": " installing properly. So I just submitted a PR and I was impressed to see how quickly I got a review."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1710.48,
      "end": 1717.2,
      "text": " The PR was properly commented and released and very quickly all happened in the span of an hour."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1717.2,
      "end": 1722,
      "text": " And the problem was fixed immediately. The maintainer was extremely welcoming. So that's"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1722,
      "end": 1726.96,
      "text": " definitely a good thing to see. And I think that creates a big opportunity for everyone that wants"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1726.96,
      "end": 1731.52,
      "text": " to contribute to this kind of project to be able to do that. It seems really like a very welcoming"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1731.52,
      "end": 1736.08,
      "text": " environment for people to contribute. So maybe if the tool doesn't have all the things you need"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1736.08,
      "end": 1740.16,
      "text": " and you are willing to invest a little bit on it, definitely think about contributing and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1740.16,
      "end": 1744.16,
      "text": " giving back and working with the maintainer to get to the point where this tool is actually"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1744.16,
      "end": 1749.44,
      "text": " going to be helpful for you and for other people. So that's absolutely a plus one for the tool and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1749.44,
      "end": 1754.48,
      "text": " the current maintaining team. Another thing that I think is worth mentioning is that there is another"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1754.48,
      "end": 1759.2,
      "text": " walkthrough by our friend Sandro Volpicella. We will have the link in the show notes. He has also"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1759.2,
      "end": 1764.0800000000002,
      "text": " done a similar kind of test ride of the tool and wrote a blog post detailing all the things that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1764.0800000000002,
      "end": 1768.0800000000002,
      "text": " he found out. I think there is even a few more things that he explains. Like for instance,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1768.08,
      "end": 1771.9199999999998,
      "text": " there is a step function that is used for updating the versions and he also goes through on"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1771.9199999999998,
      "end": 1776.24,
      "text": " how that works and why it needs to be there and maybe how it can be improved. So if you want to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1776.24,
      "end": 1780.1599999999999,
      "text": " do an additional deep dive on the technology and get another perspective on the tool,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1780.1599999999999,
      "end": 1784.3999999999999,
      "text": " definitely recommend to read that blog post. And then finally, I think it's worth mentioning a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1784.3999999999999,
      "end": 1788.8,
      "text": " few potential alternatives because we are effectively working with a customer that might"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1788.8,
      "end": 1793.12,
      "text": " need this kind of stuff. So we are doing lots of research on what are the possible options there."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1793.12,
      "end": 1797.28,
      "text": " And it's also a topic we are really passionate about. As you can see, we keep talking about this."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1798.08,
      "end": 1802.1599999999999,
      "text": " So other things that we think are going to be suitable, for instance, you can more or less"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1802.1599999999999,
      "end": 1806.6399999999999,
      "text": " relatively easy, you should be able to create a container and then run that container with a Next"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1806.6399999999999,
      "end": 1811.4399999999998,
      "text": " JS application with full server-side rendering either on a Prunner or Fargate. But then of course,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1811.4399999999998,
      "end": 1815.52,
      "text": " you have something that is running 24 seven. So maybe not necessarily what you want to do if you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1815.52,
      "end": 1819.6799999999998,
      "text": " want a more serverless approach. And in that front, there is another project that seems very"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1819.6799999999998,
      "end": 1825.12,
      "text": " promising that is called OpenNext, which we haven't tried yet, but in the docs, it says that it also"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1825.12,
      "end": 1830.7199999999998,
      "text": " supports server-side rendering on Lambda. So that seems maybe a closer re-implementation of what"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1830.7199999999998,
      "end": 1835.52,
      "text": " Vercel does for you, but that you can deploy on your own on AWS. It's definitely worth a look."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1835.52,
      "end": 1840.1599999999999,
      "text": " And hopefully we will have time to try it out and maybe give you an overview of what that looks like."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1840.1599999999999,
      "end": 1844.32,
      "text": " Similarly, there is another project called Coolify, which is a little bit more generic."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1844.9599999999998,
      "end": 1850.6399999999999,
      "text": " It's probably a modern take on Heroku. So it allows you to host your own bus and it does that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1850.64,
      "end": 1856.24,
      "text": " in a serverless way. But as such, you should be able to host a container that you can run with"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1856.24,
      "end": 1860.5600000000002,
      "text": " everything you need to run an Next JS project. So another thing that we really like to try,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1860.5600000000002,
      "end": 1865.2,
      "text": " we haven't had the time yet, but if we do try it, we'll let you know our findings. And finally,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1865.2,
      "end": 1870.24,
      "text": " there is Amplify, which always gets mentioned every time that people talk about Vercel versus"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1870.24,
      "end": 1874.88,
      "text": " AWS. I don't personally have an opinion on that one because I haven't really used Amplify much."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1874.88,
      "end": 1878.5600000000002,
      "text": " So, oh, and I'll leave it to you to mention something about Amplify if you want."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1878.6399999999999,
      "end": 1881.84,
      "text": " I've looked at, you know, I don't have a huge amount of experience either."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1881.84,
      "end": 1887.9199999999998,
      "text": " I've used the Amplify CLI and the client SDK a lot. The managed side of Amplify is a whole other set of features."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1887.9199999999998,
      "end": 1894.72,
      "text": " Like they allow you to easily provision storage and hosting and all sorts of other stuff. I know"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1894.72,
      "end": 1900.32,
      "text": " that they've introduced a new generation two, and I'd love to do an episode on that in the future."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1900.8799999999999,
      "end": 1905.52,
      "text": " But from what I can see with the new generation two Amplify, it's also solving the same sort of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1905.52,
      "end": 1910.56,
      "text": " problem in a much more managed service kind of way. So it seems a little bit more like an AWS"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1910.56,
      "end": 1916.96,
      "text": " managed Vercel alternative. And I think from what I've seen so far, a lot of work has gone into"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1916.96,
      "end": 1920.48,
      "text": " that. I haven't tried it, so I don't know exactly what the experience is like. Let us know if you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1920.48,
      "end": 1926.24,
      "text": " have, because I'd love to know. I have seen some online discussion. Actually Yan Shui was"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1927.2,
      "end": 1933.04,
      "text": " mentioning the release of the CloudFront hosting toolkit. And one of the principal essays at AWS"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1933.04,
      "end": 1936.8,
      "text": " was answering the question, well, why did you actually create this tool when you already have"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1936.8,
      "end": 1941.68,
      "text": " Amplify? And it seems like they explained pretty clearly that strategically they're basically"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1941.68,
      "end": 1945.2,
      "text": " saying, if you want to manage service, use Amplify. But if you want a little bit more"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1945.2,
      "end": 1948.96,
      "text": " control over the infrastructure and you're really just looking for something to generate that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1948.96,
      "end": 1954.8799999999999,
      "text": " blueprint infrastructure, then that's what the CloudFront hosting toolkit is aimed to solve for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1954.8799999999999,
      "end": 1959.2,
      "text": " you. So at least that gives you the right kind of context for deciding which approach you might like"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1959.2,
      "end": 1962.96,
      "text": " to take. Awesome. And I think that covers everything we wanted to cover for today."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1963.52,
      "end": 1968.24,
      "text": " Let us know if you had a chance to try the tool yourself and what is your opinion, or if you've"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1968.24,
      "end": 1972.6399999999999,
      "text": " used any other alternative tool, what do you use and whether you like it or not. I think this is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1972.6399999999999,
      "end": 1977.44,
      "text": " still a topic that deserves a lot of attention. I don't think there is a final solution that is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1977.44,
      "end": 1983.2,
      "text": " going to fit all the use cases. So I'm really good to see... Well, unless you use PHP and become a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1983.2,
      "end": 1989.12,
      "text": " millionaire that way. But yeah, let us know what are you using today. And I'm curious to see how"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1989.12,
      "end": 1992.32,
      "text": " this space is going to evolve in the next few years, because I think there is still a lot of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1992.32,
      "end": 1996.6399999999999,
      "text": " innovation that needs to happen in this space to fit all the different use cases that people"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1996.6399999999999,
      "end": 2005.6799999999998,
      "text": " have today. So thank you very much, and we'll see you in the next episode."
    }
  ]
}