{
  "speakers": {
    "spk_0": "spk_0",
    "spk_1": "spk_1"
  },
  "segments": [
    {
      "speakerLabel": "spk_0",
      "start": 0,
      "end": 6.24,
      "text": " It's Friday at 4.58pm. Marketing pings. Can we ship a new landing page for Monday with a hero,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 6.42,
      "end": 11.58,
      "text": " a gallery, and a testimonial slider? The site is hardcoded. Every change request lands on your"
    },
    {
      "speakerLabel": "spk_0",
      "start": 11.58,
      "end": 17.06,
      "text": " plate. If you're lucky, there is a Figma file, but more often than not, it's a grab bag of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 17.06,
      "end": 22.1,
      "text": " screenshots and Word documents. So you roll up your sleeves, open your editor, and unstitch that new"
    },
    {
      "speakerLabel": "spk_0",
      "start": 22.1,
      "end": 28.32,
      "text": " landing page into pure HTML. And there goes your weekend. Yes, we have done that enough times to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 28.32,
      "end": 33.980000000000004,
      "text": " know it's not fun, and we know you can relate. Now, what is the alternative? Maybe we can ship a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 33.980000000000004,
      "end": 38.9,
      "text": " WordPress site and let marketing manage everything themselves. They can pick templates, configure"
    },
    {
      "speakerLabel": "spk_0",
      "start": 38.9,
      "end": 44.1,
      "text": " plugins, and publish all the content. We have also done that enough times to know how quickly"
    },
    {
      "speakerLabel": "spk_0",
      "start": 44.1,
      "end": 50,
      "text": " hosting and securing this kind of setup becomes a nightmare. Plus, we prefer static sites over"
    },
    {
      "speakerLabel": "spk_0",
      "start": 50,
      "end": 56.900000000000006,
      "text": " dynamic ones, so that approach rarely excites us. There has to be a better way, right? What if there"
    },
    {
      "speakerLabel": "spk_0",
      "start": 56.9,
      "end": 63.32,
      "text": " were a way to keep content separate from how you fetch and render it? Marketed leaves in the CMS,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 63.68,
      "end": 68.25999999999999,
      "text": " shaping pages and publishing changes without tapping on your shoulder. Then you pick the tools"
    },
    {
      "speakerLabel": "spk_0",
      "start": 68.25999999999999,
      "end": 74.32,
      "text": " you love, like Astro, Next.js, SvelteKit, or even a custom Lambda power backend, and you render everything"
    },
    {
      "speakerLabel": "spk_0",
      "start": 74.32,
      "end": 81,
      "text": " exactly the way your design system expects. You can also choose how update flows. For instance, you can run"
    },
    {
      "speakerLabel": "spk_0",
      "start": 81,
      "end": 87.68,
      "text": " a dynamic backend that always pulls the later content at request time, or you can keep the website totally"
    },
    {
      "speakerLabel": "spk_0",
      "start": 87.68,
      "end": 93.76,
      "text": " static and wired up using something like a web book. When marketing eats publish, that triggers a CI build."
    },
    {
      "speakerLabel": "spk_0",
      "start": 93.76,
      "end": 100.62,
      "text": " Everything is rebuilt and published almost on the fly. On one of our recent projects, we did exactly that,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 100.62,
      "end": 106.26,
      "text": " using a tool called Strapi, which is an open source headless CMS written in Node.js. And today, we'll cover what"
    },
    {
      "speakerLabel": "spk_0",
      "start": 106.26,
      "end": 113.02000000000001,
      "text": " Strapi is, what works for us, things like components, dynamic tone, the blocks editor. We also discuss the rough edges"
    },
    {
      "speakerLabel": "spk_0",
      "start": 113.02000000000001,
      "end": 119.28,
      "text": " with how to run it well on AWS, and also some tips and tricks that we learned to have some kind of local"
    },
    {
      "speakerLabel": "spk_0",
      "start": 119.28,
      "end": 125,
      "text": " workflow, and then publish the content remotely when needed. We will also mention Strapi Cloud, but full"
    },
    {
      "speakerLabel": "spk_0",
      "start": 125,
      "end": 131.32,
      "text": " disclaimer, this episode is not sponsored by Strapi, so this is just our own unfiltered opinion. My name is Luciano,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 131.32,
      "end": 138.07999999999998,
      "text": " and I'm here with Eoin for another episode of AWS Bites."
    },
    {
      "speakerLabel": "spk_0",
      "start": 138.07999999999998,
      "end": 146.79999999999998,
      "text": " This episode is brought to you by Forteorem. We'll mention a little bit more about Forteorem on the end, so stay tuned."
    },
    {
      "speakerLabel": "spk_0",
      "start": 146.79999999999998,
      "end": 153.07999999999998,
      "text": " Okay, I admit I overdramatized the intro. I hope you enjoyed it. That's probably just one of the many"
    },
    {
      "speakerLabel": "spk_0",
      "start": 153.08,
      "end": 158.16000000000003,
      "text": " many use cases that something like Strapi can help you with. So, Eoin, what do you think are other very"
    },
    {
      "speakerLabel": "spk_0",
      "start": 158.16000000000003,
      "end": 161.64000000000001,
      "text": " relevant use cases for this kind of product, and what is the landscape right now?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 168.60000000000002,
      "end": 174.84,
      "text": " I think I'd put it in the general space of building CRUD applications, and if you're in the software game for a few years, you might find yourself building applications that do CRUD against the database,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 174.84,
      "end": 180.20000000000002,
      "text": " and a lot of the time you feel like every application you build, you're building some sort of a CMS with some"
    },
    {
      "speakerLabel": "spk_1",
      "start": 180.20000000000002,
      "end": 186.4,
      "text": " extra features, and you don't often foresee that you need the complexity of a CMS or the flexibility"
    },
    {
      "speakerLabel": "spk_1",
      "start": 186.4,
      "end": 191.18,
      "text": " of a CMS, but there's always this trade-off between, you know, can I use something general"
    },
    {
      "speakerLabel": "spk_1",
      "start": 191.18,
      "end": 194.76,
      "text": " purpose, or do I really need to build something that's really fine-tuned to our needs, but that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 194.76,
      "end": 200.82,
      "text": " we have to spend a lot of time building and maintaining? So, whether you're in, you know, a SaaS company"
    },
    {
      "speakerLabel": "spk_1",
      "start": 200.82,
      "end": 205.5,
      "text": " building a SaaS application, which always needs plenty of CRUD, you know, you've got relational"
    },
    {
      "speakerLabel": "spk_1",
      "start": 205.5,
      "end": 210.06,
      "text": " model or some sort of NoSQL storage, an API in front of it, and a front-end in front of that,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 210.06,
      "end": 215.06,
      "text": " but equally, it could be like a line of business application in an enterprise when, you know,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 215.06,
      "end": 220.29999999999998,
      "text": " you've got some business user who needs to be able to enter data, retrieve data, and update data"
    },
    {
      "speakerLabel": "spk_1",
      "start": 220.29999999999998,
      "end": 226.07999999999998,
      "text": " from a web app, mobile app, whatever it is. It's a good idea, I think, every so often to look at what's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 226.07999999999998,
      "end": 230.18,
      "text": " out there that maybe could save you tons and tons of work and stop you from having to reinvent"
    },
    {
      "speakerLabel": "spk_1",
      "start": 230.18,
      "end": 235.72,
      "text": " that wheel yet again. And there's a lot of providers in the space with a lot of different"
    },
    {
      "speakerLabel": "spk_1",
      "start": 235.72,
      "end": 240.08,
      "text": " trade-offs. So, there's Contentful, which has been around for a good amount of time. I remember using"
    },
    {
      "speakerLabel": "spk_1",
      "start": 240.08,
      "end": 247.3,
      "text": " it like seven or eight years ago, I think. Storyblock is another one. Sanity CMS is one called"
    },
    {
      "speakerLabel": "spk_1",
      "start": 247.3,
      "end": 253.16,
      "text": " HighGraph, which used to be called Graph CMS, I believe. And we see a lot of these come and go."
    },
    {
      "speakerLabel": "spk_1",
      "start": 253.3,
      "end": 258.38,
      "text": " Byline CMS is another one. Now, that's fully open source, but very new. So, it's very much work"
    },
    {
      "speakerLabel": "spk_1",
      "start": 258.38,
      "end": 261.86,
      "text": " in progress. And then there's the one that we'll get to talk about a little bit more today,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 261.86,
      "end": 269.24,
      "text": " which is Strapi. Luciano, do you want to give us the 10,000-foot overview of what Strapi is?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 269.68,
      "end": 275.14,
      "text": " I'll try my best. So, yeah, the way that Strapi described itself is a headless CMS. And this is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 275.14,
      "end": 279.9,
      "text": " the entire category you described. So, probably worth explaining a little bit more what that means."
    },
    {
      "speakerLabel": "spk_0",
      "start": 280.56,
      "end": 284.78,
      "text": " So, the idea is that more typically, like we mentioned at the beginning, the example of WordPress."
    },
    {
      "speakerLabel": "spk_0",
      "start": 284.78,
      "end": 290.71999999999997,
      "text": " So, these kind of tools, they try to handle the entire workflow of managing content and then"
    },
    {
      "speakerLabel": "spk_0",
      "start": 290.71999999999997,
      "end": 297.15999999999997,
      "text": " publishing the entire site, rendering that content in a certain way. Where headless CMS are a little"
    },
    {
      "speakerLabel": "spk_0",
      "start": 297.15999999999997,
      "end": 302.2,
      "text": " bit different is where it's basically they don't try to care too much about how you actually use the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 302.2,
      "end": 307.85999999999996,
      "text": " data and where you actually render it. They just provide effectively like an admin interface to model"
    },
    {
      "speakerLabel": "spk_0",
      "start": 307.85999999999996,
      "end": 313.91999999999996,
      "text": " your data and then insert it. So, they are more, I guess, geared towards trying to separate the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 313.92,
      "end": 319.06,
      "text": " responsibility for whoever manages the content versus whoever needs to use that content programmatically,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 319.54,
      "end": 324.36,
      "text": " either to render a static website or even as kind of application model data."
    },
    {
      "speakerLabel": "spk_0",
      "start": 325.58000000000004,
      "end": 331,
      "text": " And, yeah, Strapi is one of the very few open source ones and it offers a few interesting features"
    },
    {
      "speakerLabel": "spk_0",
      "start": 331,
      "end": 336.66,
      "text": " that I really like. So, the first one is that the way you fetch the data, it's over a nice REST API."
    },
    {
      "speakerLabel": "spk_0",
      "start": 337.1,
      "end": 340.74,
      "text": " But if you prefer to use something like GraphQL, which I think is really convenient with this kind of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 340.74,
      "end": 346.76,
      "text": " data models that where generally you need to kind of combine different pieces of data and depending"
    },
    {
      "speakerLabel": "spk_0",
      "start": 346.76,
      "end": 350.94,
      "text": " on the pages you are trying to render, you might need to, you could express everything as like as a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 350.94,
      "end": 355.58,
      "text": " one query that gets you all the data you need. In that case, you can also use GraphQL. It's not"
    },
    {
      "speakerLabel": "spk_0",
      "start": 355.58,
      "end": 360.88,
      "text": " enabled by default, but you can easily install a plugin to make that available and it works quite well."
    },
    {
      "speakerLabel": "spk_0",
      "start": 360.88,
      "end": 370.18,
      "text": " And the other thing that I really like is that there is kind of a visual content type builder. So,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 370.18,
      "end": 375.46,
      "text": " you can run, you can download Strapi and there is even a CLI utility that makes it easy to bootstrap a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 375.46,
      "end": 381.38,
      "text": " project. And at that point, you can run a local version of Strapi that uses SQLite. So, you don't"
    },
    {
      "speakerLabel": "spk_0",
      "start": 381.38,
      "end": 386.68,
      "text": " even need to have a database server running locally. So, it's just literally a Node.js server that starts"
    },
    {
      "speakerLabel": "spk_0",
      "start": 386.68,
      "end": 393.26,
      "text": " locally very easily. And at that point, you can see an admin interface. And in that admin interface,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 393.26,
      "end": 399.28000000000003,
      "text": " you have effectively an editor that helps you to model your data model. And you can also start to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 399.28000000000003,
      "end": 404.72,
      "text": " configure all things like roles and permissions, translations, web books. You have a media library"
    },
    {
      "speakerLabel": "spk_0",
      "start": 404.72,
      "end": 410.28000000000003,
      "text": " where you can upload files and manage them. And there is even an entire growing ecosystem of plugins."
    },
    {
      "speakerLabel": "spk_0",
      "start": 410.52,
      "end": 414.82,
      "text": " So, if you need additional features, chances are that there is a plugin providing this kind of feature."
    },
    {
      "speakerLabel": "spk_0",
      "start": 414.82,
      "end": 418.92,
      "text": " There is also a commercial option, as we mentioned in the intro, that is called Strapi Cloud,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 419.58,
      "end": 425.78,
      "text": " where basically, if you eventually need to publish your Strapi instance somewhere to make it usable"
    },
    {
      "speakerLabel": "spk_0",
      "start": 425.78,
      "end": 430.82,
      "text": " inside your company or with the customers you're working with, if you don't want the trouble of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 430.82,
      "end": 434.7,
      "text": " hosting that, you can just pick the option of using Strapi Cloud and they will take care of all"
    },
    {
      "speakerLabel": "spk_0",
      "start": 434.7,
      "end": 440.24,
      "text": " the hosting. So, effectively, it's a SaaS service that the company that develops Strapi offers you."
    },
    {
      "speakerLabel": "spk_0",
      "start": 440.24,
      "end": 446.16,
      "text": " So, one thing we know that is using it, because this is what we have been using in our latest project,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 446.6,
      "end": 451.72,
      "text": " is that it looks like, if you just look at the logs, whenever you create a new Strapi instance,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 452.06,
      "end": 456.62,
      "text": " it looks like they are actually bootstrapping a new virtual machine in DigitalOcean for every instance"
    },
    {
      "speakerLabel": "spk_0",
      "start": 456.62,
      "end": 462.28000000000003,
      "text": " you create. And also, every time you upload assets, it looks like they are using some kind of CDN to make"
    },
    {
      "speakerLabel": "spk_0",
      "start": 462.28,
      "end": 468.91999999999996,
      "text": " those assets easily available and easy to distribute worldwide. So, this is just an inside thing we"
    },
    {
      "speakerLabel": "spk_0",
      "start": 468.91999999999996,
      "end": 472.79999999999995,
      "text": " noticed, which is interesting, just to understand a little bit more what Strapi Cloud is actually"
    },
    {
      "speakerLabel": "spk_0",
      "start": 472.79999999999995,
      "end": 478.73999999999995,
      "text": " offering you when you use that kind of service. Now, Eoin, I'll let you discuss what are some of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 478.73999999999995,
      "end": 481.23999999999995,
      "text": " the other things we really liked about using Strapi."
    },
    {
      "speakerLabel": "spk_1",
      "start": 486.76,
      "end": 491.48,
      "text": " Well, I think using a headless approach, like having that decoupled content from how you render it, is great, because even if a developer or development team is going to say, okay, we're happy"
    },
    {
      "speakerLabel": "spk_1",
      "start": 491.48,
      "end": 497.56,
      "text": " to offload all the CRUD to another provider, it's probably too much to expect that there's going to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 497.56,
      "end": 502.36,
      "text": " be a frontend that will meet your needs as well. So, it's great that it separates those two things."
    },
    {
      "speakerLabel": "spk_1",
      "start": 503.48,
      "end": 510.18,
      "text": " The modeling that maps to modern frontends is quite nice. So, there's a content type builder,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 510.44,
      "end": 515.76,
      "text": " and it supports collection types and single types. And it also has things called components and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 515.76,
      "end": 521.18,
      "text": " dynamic zones. And essentially, this is giving you like Lego-like ways to build pages. And then"
    },
    {
      "speakerLabel": "spk_1",
      "start": 521.18,
      "end": 526.92,
      "text": " developers can wire components to React or Astro or view components with typed properties."
    },
    {
      "speakerLabel": "spk_1",
      "start": 528.26,
      "end": 534.52,
      "text": " It has a blocks editor as well. So, if you're imagining rich content, often even in a line of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 534.52,
      "end": 540.06,
      "text": " business application, you might also want some web page-like content, like blog article type"
    },
    {
      "speakerLabel": "spk_1",
      "start": 540.06,
      "end": 546.9799999999999,
      "text": " content. And the blocks field allows you to structure these things, but stores content as a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 546.9799999999999,
      "end": 551.42,
      "text": " JSON tree rather than raw HTML. So, that gives you a lot more flexibility in how you render it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 552.8199999999999,
      "end": 558.2199999999999,
      "text": " It also has APIs that fit different stacks. So, it's got REST out of the box. You can use GraphQL"
    },
    {
      "speakerLabel": "spk_1",
      "start": 558.2199999999999,
      "end": 564.1999999999999,
      "text": " via a plugin. Both are very powerful for population and filtering. So, it's handy when you want static"
    },
    {
      "speakerLabel": "spk_1",
      "start": 564.2,
      "end": 570.7800000000001,
      "text": " builds at CI time or on-demand revalidation at runtime. I'd say it's static site friendly as well."
    },
    {
      "speakerLabel": "spk_1",
      "start": 570.98,
      "end": 575.4200000000001,
      "text": " So, you can fetch data at build time, publish your assets, and use strappy webhooks to trigger rebuilds"
    },
    {
      "speakerLabel": "spk_1",
      "start": 575.4200000000001,
      "end": 580.0200000000001,
      "text": " when editors hit publish. Your production site doesn't have to talk to the CMS at request time."
    },
    {
      "speakerLabel": "spk_1",
      "start": 580.4200000000001,
      "end": 584.58,
      "text": " That's really good for cost, performance, and security, SEO as well, if that matters to you."
    },
    {
      "speakerLabel": "spk_1",
      "start": 585.1,
      "end": 590.32,
      "text": " And then there's a media library with S3. So, it has built-in media management with an official"
    },
    {
      "speakerLabel": "spk_1",
      "start": 590.32,
      "end": 597.34,
      "text": " AWS Upload Provider, which is a plugin, and easy CloudFront integration if you want a CDN as well."
    },
    {
      "speakerLabel": "spk_1",
      "start": 598.0400000000001,
      "end": 602.1,
      "text": " We'll link to that provider in the show notes if anybody wants to leverage that."
    },
    {
      "speakerLabel": "spk_1",
      "start": 602.62,
      "end": 609.0400000000001,
      "text": " Now, Luciana, you've been using this in anger a lot, and I'm pretty impressed with what you've"
    },
    {
      "speakerLabel": "spk_1",
      "start": 609.0400000000001,
      "end": 613.98,
      "text": " been able to do with it, to be honest. What are some of the things that you really liked and got"
    },
    {
      "speakerLabel": "spk_1",
      "start": 613.98,
      "end": 614.6400000000001,
      "text": " into in a big way?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 619.5,
      "end": 623.96,
      "text": " Yeah, I think I'm going to repeat some of the things you said, but maybe I'm going to try to go a little bit more in detail. For instance, the blocks editor is one of the things that I really enjoyed using,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 624.44,
      "end": 632.28,
      "text": " because in the past, every time I was dealing with some kind of rich content type of widget or editor,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 633.02,
      "end": 639.18,
      "text": " you always end up with a bunch of HTML. And then the best thing you can do is just take that HTML"
    },
    {
      "speakerLabel": "spk_0",
      "start": 639.18,
      "end": 644.1,
      "text": " block and slap it somewhere in a web page, but then you have very limited flexibility in terms of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 644.1,
      "end": 648.56,
      "text": " customizing it, in terms of look and feel, or even just making parts of it more dynamic."
    },
    {
      "speakerLabel": "spk_0",
      "start": 648.56,
      "end": 653.06,
      "text": " Imagine, I don't know, there's a picture and you might want to provide an on-click handler that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 653.06,
      "end": 657.54,
      "text": " make you zoom the picture, like in a model window, something like that, which could be very common"
    },
    {
      "speakerLabel": "spk_0",
      "start": 657.54,
      "end": 663.76,
      "text": " for many websites. Well, that's kind of very limiting, but also has been the dominating approach"
    },
    {
      "speakerLabel": "spk_0",
      "start": 663.76,
      "end": 668.54,
      "text": " for a long time. And I think the blocks editor tries to change that approach in a very smart way."
    },
    {
      "speakerLabel": "spk_0",
      "start": 668.92,
      "end": 674.9599999999999,
      "text": " So the idea is, again, another abstraction layer. So rather than giving you the fully rendered content that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 674.96,
      "end": 682.7,
      "text": " was effectively created through this WYSIWYG type of editor, the editor itself is storing all the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 682.7,
      "end": 688.14,
      "text": " different things that you are laying out in your content as effectively like a JSON abstract syntax"
    },
    {
      "speakerLabel": "spk_0",
      "start": 688.14,
      "end": 694.02,
      "text": " tree. So everything is a block. Every block has a type, and that type can be a paragraph, a heading,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 694.1800000000001,
      "end": 701.32,
      "text": " a image, a quote, a table, and more. There are so many different types. And of course, every block can"
    },
    {
      "speakerLabel": "spk_0",
      "start": 701.32,
      "end": 706,
      "text": " also have children. So this is effectively how you structure the entire content. And then in the end,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 706.08,
      "end": 711.98,
      "text": " what you get out of it is literally this blob of JSON. And at this point, it's up to you to decide how"
    },
    {
      "speakerLabel": "spk_0",
      "start": 711.98,
      "end": 716.7800000000001,
      "text": " to render it. And of course, that comes with some complexity as well, because effectively, you have"
    },
    {
      "speakerLabel": "spk_0",
      "start": 716.7800000000001,
      "end": 721.7800000000001,
      "text": " to deal with a tree-like structure. So you need to figure out, okay, how do I traverse the structure?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 721.78,
      "end": 727.78,
      "text": " And how do I render all the different types? So there might be a lot of work involved in just rendering a basic"
    },
    {
      "speakerLabel": "spk_0",
      "start": 727.78,
      "end": 735.72,
      "text": " piece of text. So thankfully, Strapi offers some built-in renderers. For instance, if you use React, there is one"
    },
    {
      "speakerLabel": "spk_0",
      "start": 735.72,
      "end": 742.4,
      "text": " called blocks React Renderer, we'll have the link in the show notes, which gives you effectively a component that knows how to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 742.4,
      "end": 750.62,
      "text": " render the abstract syntax tree with very clear defaults, and allows you also to override some of these defaults. For example, if you want to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 750.62,
      "end": 757.22,
      "text": " customize the image block, then you can say, okay, I'm going to provide my own image component. And only when in the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 757.22,
      "end": 762.78,
      "text": " abstract syntax tree, there is an image that is going to be rendered, then your component is going to be injected, and you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 762.78,
      "end": 768.92,
      "text": " have full control on how to render images. You don't need to specify all the other blocks kind if you are okay with the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 768.92,
      "end": 775.36,
      "text": " defaults at that point. So this is pretty cool, because it kind of does all the heavy lifting for you. And it gives you a very easy"
    },
    {
      "speakerLabel": "spk_0",
      "start": 775.36,
      "end": 781.96,
      "text": " interface in case you want to customize something. So yeah, that's an experience that I think is really enjoyable, because"
    },
    {
      "speakerLabel": "spk_0",
      "start": 781.96,
      "end": 803.96,
      "text": " it unlocks another level of customization. And you can even end up creating your own custom components, which is something that I also enjoyed. So this is outside the block renderer. So you can imagine the block renderer as a field in your data model, where you can say, every time I need rich content, I'm just going to put it in a field, maybe you call that, I don't know, content, or blog body, or whatever that is."
    },
    {
      "speakerLabel": "spk_0",
      "start": 803.96,
      "end": 833.94,
      "text": " But sometimes you want to do something even more flexible, maybe you have a design system where you have things like a hero or a slider, or maybe, I don't know, a preview of a product with a buy button, you have all these kind of widgets that have been taught together with a team of designers, maybe you have an entire design system, you can actually start to map all the components in your design system and make them available in the CMS as well, using this abstraction called components. And effectively, what a component is, is another data model, which is a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 833.94,
      "end": 845.94,
      "text": " model that you can use and put it inside your other data models. And it maps the props that you have in your own, let's say you're using React, so you might have a bunch of React components, you can map one to one all the props of every component."
    },
    {
      "speakerLabel": "spk_0",
      "start": 845.94,
      "end": 867.94,
      "text": " of every component in React with the components in Strapi. So what that allows is that then whenever a content editor is working on a page, for example, they could say, okay, here, I want to show a hero. So I'm going to just drag and drop the hero component. And then that hero component is going to start to display all the fields that needs to be populated, which effectively are all the props that are available in your hero component."
    },
    {
      "speakerLabel": "spk_0",
      "start": 867.94,
      "end": 897.9200000000001,
      "text": " And the way that you map content with components is through dynamic zones. So dynamic zones is kind of the glue between the two worlds. So effectively, every time you are modeling, let's say, I don't know, let's make the example of a landing page, right? Maybe you have the concept of a landing page as a data model in your CMS. In your landing page, you might just use a dynamic zone to say, in this area of the landing page, the editors are free to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 897.92,
      "end": 918.92,
      "text": " pick between all of these components and order them in whichever way they like. So dynamic zone are effectively a way to say which components will be available in which part of the page. And then the marketing team or the content team is totally free to pick among those components, shuffle them in whichever way makes sense and provide all the properties."
    },
    {
      "speakerLabel": "spk_0",
      "start": 918.92,
      "end": 939.92,
      "text": " So those three things I think I really like them. And I think they really unlock that full control in the sense that you still keep everything fully decoupled. But then you can get to the point, like if you are really clever, really put the time to configure things properly, to almost build like your own, I don't know, template builder entirely in Strapi."
    },
    {
      "speakerLabel": "spk_0",
      "start": 939.92,
      "end": 952.92,
      "text": " So the marketing team or the content team will have total freedom to change things around very quickly. And you don't have to always work with a designer just to maybe swap, I don't know, a certain type of header with another one."
    },
    {
      "speakerLabel": "spk_0",
      "start": 952.92,
      "end": 976.4,
      "text": " That sounds great. It seems like you've got the capability there to have entities. If you wanted to do a CRUD application, you can have those specific, you can have that data model there. But if you want to have richer content, like blog articles or other types of content, that's maybe SEO friendly in your application, then things like components and dynamic zones really are there to support that."
    },
    {
      "speakerLabel": "spk_1",
      "start": 976.4,
      "end": 1003.64,
      "text": " I'm curious about the data side of things. So if you have, I presume that it's got its own schema under the hood, right? In its relational database. How do you manage data migration, maybe even working locally, working with sample data, synchronizing it between environments? Because this is always a question, no matter what kind of data, what kind of project it is, it always comes up. How do you manage data synchronization across environments?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1003.64,
      "end": 1033.56,
      "text": " Yeah, I think there are different kinds of workflows that you can put in place. The one that I've personally used, and I think it works decently well, is kind of a local first approach. So effectively, you start a local Strapi instance by using the CLI that creates a project and you can see all the source code, you can install dependencies through NPM. And then at some point, when you're ready, you can just start the instance locally and access the local admin."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1033.56,
      "end": 1063.56,
      "text": " In the local admin, what you can do is that you have a panel where you can design your data model. And that's effectively like a totally visual experience where you can specify things like what is the name of this data model? Is it a collection? Is it a single type? What are all the fields for every field? What is the type of that field? You can specify is it mandatory or is it optional? Are there other validation rules? Like I don't know, strings, you can check on length, that kind of stuff. Or maybe when it's a string, you can decide is it like a single line input? Or it's like a larger text input?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1063.56,
      "end": 1093.56,
      "text": " You can choose a file picker. Or you can choose a file picker, all these kind of things that I think are very standard for most CMS. But the nice thing is that you're doing all of this stuff locally. And once you do it visually from the admin, actually, if you check your Git history, well, you just do it like a Git status, I mean, then you can see that it's actually changing files. So it's not really storing all this information in a database, but it's actually building schema files for you. In a schema language that's actually very similar to JSON schema."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1093.56,
      "end": 1123.3,
      "text": " And everything you do, then eventually you can just commit to Git and keep the entire history. Every time you are starting Strapi, Strapi checks effectively that history against the state of the database and is able to effectively do like a soft migration where it's going to restore the new status. And if there are new fields, it's going to create them or if fields have been removed, it's going to remove them. And you can also insert data locally, which I think is very useful for testing reasons."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1123.3,
      "end": 1151.08,
      "text": " But then sometimes you end up creating lots of the basic data you need. Like for instance, I've seen in my use case that it's very common to start with like SEO type of data. So you might have a single component with fields like what is the title of the website? What is the SEO description? What is the fav icon? What is the, I don't know. Yeah, all this kind of information that is more something you initially populate because you need it for testing and to start building the pages."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1151.08,
      "end": 1163.1799999999998,
      "text": " And then you realize, well, I've put all these efforts into populating this data locally. There must be an easy way to propagate this data to the actual remote production instance, rather than having to manually do all the work again."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1163.8799999999999,
      "end": 1177.82,
      "text": " And thankfully the CLI that Strapi offer has a feature called transfer. And the way it works is that you can kind of synchronize in both direction. So you can even go from remote to local or from local to remote."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1177.82,
      "end": 1186.82,
      "text": " And I think both are useful for instance, the case I'm describing is useful. Like you created a bunch of basic data. You want to push it to the remote. So you are not starting to scratch."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1186.82,
      "end": 1197.82,
      "text": " But then sometimes a content editor is working on the site and they do changes and they tell you, okay, there is some kind of weird bug. An easy way to reproduce that bug locally is that you can pull all the remote data locally."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1197.82,
      "end": 1209.82,
      "text": " So it's also interesting that this transfer can work in both direction. And the way it works is that you can create a token in the admin UI, either the local one or the remote one."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1209.82,
      "end": 1214.82,
      "text": " And then you have this kind of source token and destination token, and you can decide how to push the data."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1214.82,
      "end": 1221.82,
      "text": " And it's gonna, it could be a little bit dangerous because effectively it's going to wipe everything and then copy the data from source to destination."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1221.82,
      "end": 1229.82,
      "text": " I'm not sure there is a way that you just do like incremental changes, but yeah, just check the docs and make sure you use it properly."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1229.82,
      "end": 1238.82,
      "text": " But it's cool that they offer this feature where you can use it synchronize data. And by the way, you can also use this as a breach to copy data between two remote instances of Strapi."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1238.82,
      "end": 1250.82,
      "text": " So for instance, if you are migrating, I don't know, your Strapi instance from a VM to another, or maybe you're just changing the database from a SQLite to, I don't know, maybe a Postgres."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1250.82,
      "end": 1258.82,
      "text": " You can actually do this migration where you copy everything locally from a source and then locally you copy it to a destination."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1258.82,
      "end": 1265.82,
      "text": " So we have also done that because in our current project, we are managing multiple instances of Strapi for different brands, but there is a lot of common data."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1265.82,
      "end": 1267.82,
      "text": " So it was just easy to do it that way."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1267.82,
      "end": 1273.82,
      "text": " So what is the bad news? What did we not like about Strapi?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1273.82,
      "end": 1282.82,
      "text": " Yeah, I think there isn't like a huge amount that we didn't like. I think in general, it's like I really like the structure and the principles."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1282.82,
      "end": 1290.82,
      "text": " And I think there is lots of potential. One thing is that it's, it feels still a little bit immature, although Strapi has been around for a while."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1290.82,
      "end": 1296.82,
      "text": " It seems like a lot of like, it's really moving very fast and a lot of things are not properly polished."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1296.82,
      "end": 1311.82,
      "text": " For instance, that it's very common to find the small bugs that can be annoying. Like sometimes one silly thing that I noticed just to give an example is that if you copy a snippet of code from somewhere into the block editor, the block editor also supports the code type."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1311.82,
      "end": 1327.82,
      "text": " It messes up all the lines and it actually ends up creating a block for each line. And then you have to kind of compact them all together manually, which can be very annoying if you're actually getting, I don't know, like a tech block where you might, where you might have lots of articles with code samples."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1327.82,
      "end": 1338.82,
      "text": " Then I think it wouldn't be like the best experience. Now, this is just one example I've seen probably a dozens of this kind of small bugs. And I've also seen to be fair that they get resolved fairly quickly."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1338.82,
      "end": 1350.82,
      "text": " So there is actually a very big active community where people are constantly reporting these bugs. You can see releases, I think weekly, if not more than one release a week and every release has bunch of bug fixes."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1350.82,
      "end": 1361.82,
      "text": " So hopefully this is going to make the product much more stable in the coming months or years. Also, the documentation can be improved. It can be sometimes misleading."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1361.82,
      "end": 1375.82,
      "text": " Like for instance, there was a big re-architecture between Strapi 4 to 5, if I remember the version correctly. 5, I think is the latest. So lots of the documentation is still giving you tips for Strapi 4. And sometimes it's not clear when that is the case."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1375.82,
      "end": 1382.82,
      "text": " So you might end up trying to do something and then it doesn't really work the way you would expect just because the documentation is not fully up to date."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1382.82,
      "end": 1391.82,
      "text": " So again, I totally expect those things will be fixed over time, especially because there is also a company behind and they are trying to market a product which is Strapi Cloud."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1391.82,
      "end": 1398.82,
      "text": " So I think it's in their best interest to make the product as polished as possible and to give the best possible user experience."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1398.82,
      "end": 1412.82,
      "text": " Okay. And given that we said the cloud offering maybe isn't as mature as we might expect, what's the best way we recommend people self-hosting this on AWS?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1412.82,
      "end": 1423.82,
      "text": " Yeah. And I think I wouldn't say that the cloud isn't mature. I think it's probably a bit simple at this stage, but that's the job for most cases."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1423.82,
      "end": 1429.82,
      "text": " There might be other reasons why you might want to self-host. Maybe you have, I don't know, data constraints."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1429.82,
      "end": 1437.82,
      "text": " Like you don't want to publish your data in Strapi. You want to keep it in whatever local deployment you have or even in your own data center. I don't know."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1437.82,
      "end": 1438.82,
      "text": " What's the problem for you to do?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1438.82,
      "end": 1439.82,
      "text": " You want to have to be a problem for you to do?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1439.82,
      "end": 1442.82,
      "text": " Or within your VPC, for instance, if you are in AWS, that could be one reason."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1442.82,
      "end": 1446.82,
      "text": " Another reason might be maybe you're hosting lots of instances for whatever is your use case."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1446.82,
      "end": 1461.82,
      "text": " And I think at some point, there might be a level where putting the effort into managing the deployment and hosting yourself might be more cost convenient than having dozens of instances in Strapi Cloud."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1461.82,
      "end": 1471.82,
      "text": " So, of course, you need to do the maths and see where that point is, but it might be a valid story where it might be more convenient to host it yourself rather than using Strapi Cloud."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1471.82,
      "end": 1478.82,
      "text": " And especially if you use some of the more enterprise features, like if you need SSO sign up, I think this is one of the more expensive ones."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1478.82,
      "end": 1485.82,
      "text": " So, if you need it for every single site, I think then you might be better off just hosting it yourself and doing the SSO layer yourself."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1485.82,
      "end": 1492.82,
      "text": " So, given all of that, I guess the question might be, how do you go about hosting it, for instance, on AWS, right?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1492.82,
      "end": 1495.82,
      "text": " If you're listening to this podcast, that's what you want to know."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1495.82,
      "end": 1506.82,
      "text": " And full disclaimer, I haven't tried to do this fully, but I think I understand enough of Strapi now to give kind of an informed potential architecture that you might want to use for hosting Strapi."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1506.82,
      "end": 1516.82,
      "text": " And just talking about the compute, Strapi is a traditional Node.js server, so you can easily containerize it and run it on Fargate or AppRunner."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1516.82,
      "end": 1521.82,
      "text": " Or if you have already an EKS cluster, you might even run it on EKS."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1521.82,
      "end": 1530.82,
      "text": " You can also use it in EC2, of course, but you will need, as always, if you manage bare-bone virtual machines, there is a lot more that you need to manage."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1530.82,
      "end": 1535.82,
      "text": " So, this is totally up to you to decide if it makes sense or not."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1535.82,
      "end": 1542.82,
      "text": " Yeah, I think I would prefer personally containers just because it gets a little bit easier and you have less to manage yourself."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1542.82,
      "end": 1548.82,
      "text": " Then the database, you can use SQLite, we mentioned, and this is the default when you run it locally."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1548.82,
      "end": 1554.82,
      "text": " But of course, when you start to run it in the cloud, it doesn't make too much sense because you might want to use multiple instances of compute."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1554.82,
      "end": 1556.82,
      "text": " And at that point, you need a shared database."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1556.82,
      "end": 1560.82,
      "text": " So, the other options are Postgres, MySQL, or MariaDB."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1560.82,
      "end": 1567.82,
      "text": " So, you can easily spin up, for instance, an RDS and then connect your instances to that RDS instance."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1567.82,
      "end": 1576.82,
      "text": " And whichever flavor you like, Postgres or MySQL, I think Strapi uses some kind of ORM in between where it doesn't really make a difference."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1576.82,
      "end": 1581.82,
      "text": " One thing that they say, though, in the docs, I found this snippet somewhere where they say they don't..."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1581.82,
      "end": 1588.82,
      "text": " They say something a little bit weird because they say, we don't support NoSQL, which makes sense because I think they have a relational model by default."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1588.82,
      "end": 1592.82,
      "text": " And then the next line is like, we also don't support Aurora."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1592.82,
      "end": 1596.82,
      "text": " And then I found blog posts of people actually using Aurora."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1596.82,
      "end": 1601.82,
      "text": " So, I think it's more that they might have seen some bugs, some slight differences."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1601.82,
      "end": 1604.82,
      "text": " They just don't test it. Maybe it's not in their test coverage."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1604.82,
      "end": 1613.82,
      "text": " Exactly. So, they basically say, it's up to you if you want to try that at your own risk, but we don't basically take any responsibility if it doesn't work."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1613.82,
      "end": 1618.82,
      "text": " So, I think Aurora is still a decent choice, but yeah, just be aware of the disclaimer."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1618.82,
      "end": 1627.82,
      "text": " Then in terms of assets, as we mentioned, there is a plugin that allows you to publish all the assets that you upload into Strapi directly into S3."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1627.82,
      "end": 1632.82,
      "text": " So, then you can easily create, for instance, a CDN distribution with CloudFront."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1632.82,
      "end": 1635.82,
      "text": " So, that could be another great option for public websites."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1635.82,
      "end": 1637.82,
      "text": " Secrets and configurations."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1637.82,
      "end": 1640.82,
      "text": " So, Strapi needs a few secret parameters."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1640.82,
      "end": 1648.82,
      "text": " For instance, it creates API tokens, JWT, and also some secrets that then are used internally for encryption."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1648.82,
      "end": 1655.82,
      "text": " All this stuff is something you can store in Secrets Manager, and then you need to pass it as an environment variable when the container starts,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1655.82,
      "end": 1658.82,
      "text": " or whenever your process, if you're using EC2, starts."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1658.82,
      "end": 1666.82,
      "text": " For builds, you can probably use whatever you want, and effectively, it's the same process you would use locally."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1666.82,
      "end": 1676.82,
      "text": " So, you have a script that you can launch with NPM, Yarn, or PMPM, whatever you prefer to use, that builds a production version of the backend."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1676.82,
      "end": 1682.82,
      "text": " And then you have a folder where you can take that backend and execute it in a production-ready way."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1682.82,
      "end": 1692.82,
      "text": " Because, by default, if you run it in development mode, of course, it's much slower, but also gives you more, I guess, debug messages that can be useful in development mode."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1692.82,
      "end": 1698.82,
      "text": " So, it's important, I guess, to distinguish whenever you are building for production and then whenever you're just running it locally."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1698.82,
      "end": 1704.82,
      "text": " So, those are two different processes and make sure to set up your CI to use the production process."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1704.82,
      "end": 1712.82,
      "text": " And finally, if you want to do some security, this really depends because, of course, you have an admin to manage content,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1712.82,
      "end": 1715.82,
      "text": " and somebody needs to be able to access that admin, right?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1715.82,
      "end": 1722.82,
      "text": " I'm sure you're going to be working with content editors, or even if you are the content editor yourself, it's not like you want to keep that very open."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1722.82,
      "end": 1727.82,
      "text": " By default, Strapik gives you a username and password type of access."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1727.82,
      "end": 1731.82,
      "text": " You can use plugins to do things that are a little bit more advanced, like SSO."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1731.82,
      "end": 1734.82,
      "text": " You can even have IP allow lists."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1734.82,
      "end": 1736.82,
      "text": " You also have ORBAC, for instance."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1736.82,
      "end": 1742.82,
      "text": " You can create different profiles with different roles and give those roles different permission in terms of editing,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1742.82,
      "end": 1745.82,
      "text": " or even reading different kinds of data models."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1745.82,
      "end": 1749.82,
      "text": " So, all this stuff is actually quite well done, and you have lots of freedom."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1749.82,
      "end": 1754.82,
      "text": " One thing that I would like to explore more is maybe if you are using, if you're doing like a static site,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1754.82,
      "end": 1760.82,
      "text": " and you want to secure as much as possible your admin UI, you might put it in a private VPC on AWS,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1760.82,
      "end": 1767.82,
      "text": " then give like a VPN access to your content editors, and then your CI is the only thing that can access as well."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1767.82,
      "end": 1772.82,
      "text": " And then effectively, whenever you are building, you read all the necessary content, render on the pages statically,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1772.82,
      "end": 1777.82,
      "text": " and then you have just a bunch of HTML, CSS, JavaScript that you need to publish in a CDN."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1777.82,
      "end": 1785.82,
      "text": " I think that would be a pretty secure setup at that point, and not too complex to do as well."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1785.82,
      "end": 1786.82,
      "text": " Interesting."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1786.82,
      "end": 1790.82,
      "text": " Yeah, I guess another thing you might consider if you really want to lock down,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1790.82,
      "end": 1797.82,
      "text": " but keep that admin page visible to administrators, is you could use a separate load balancer listener,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1797.82,
      "end": 1800.82,
      "text": " and only allow the paths through that."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1800.82,
      "end": 1806.82,
      "text": " And then you can put an authorizer on that load balancer like integrated with SSO, which is quite easy to do,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1806.82,
      "end": 1807.82,
      "text": " at least at a basic level."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1807.82,
      "end": 1814.82,
      "text": " Application load balancer allows you to do that, so it might be a cheap way of getting that much sought after enterprise SSO stuff."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1814.82,
      "end": 1819.82,
      "text": " Absolutely, which would be probably the most expensive plan just to unlock that."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1819.82,
      "end": 1827.82,
      "text": " So I think if you're doing that a lot, it might get to a price point where doing what you just described makes more sense."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1827.82,
      "end": 1830.82,
      "text": " Yeah, maybe that's a topic for another episode."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1830.82,
      "end": 1837.82,
      "text": " So it sounds like the people are wondering like where would I use this and where it would fit best."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1837.82,
      "end": 1841.82,
      "text": " The sweet spot is you kind of want full control over your data models."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1841.82,
      "end": 1846.82,
      "text": " You probably want self hosting, and you want something which is a headless CMS."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1846.82,
      "end": 1853.82,
      "text": " You know, it gives you the storage and the API, and it plays nicely then with your serverless applications or your static builds."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1853.82,
      "end": 1857.82,
      "text": " If all of that ticks, all the boxes get ticked, Strapi is a fairly solid choice."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1857.82,
      "end": 1861.82,
      "text": " But if you prefer something fully managed, there's a lot of other options out there,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1861.82,
      "end": 1863.82,
      "text": " and Strapi Cloud is just one of those options."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1863.82,
      "end": 1865.82,
      "text": " And again, we're not sponsored."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1865.82,
      "end": 1871.82,
      "text": " This is just, you know, it's great to be able to promote an open source project that remains open source, of course."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1871.82,
      "end": 1874.82,
      "text": " But there are a lot of options out there, so we mentioned some of them at the start."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1874.82,
      "end": 1879.82,
      "text": " Even there's a lot of applications in the kind of enterprise low code space, which are much more expensive,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1879.82,
      "end": 1882.82,
      "text": " and also kind of fit into this category to a certain degree."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1882.82,
      "end": 1887.82,
      "text": " But it seems like Strapi Cloud is a decent option as well."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1889.82,
      "end": 1893.82,
      "text": " Yeah, I totally agree with this take, and I think that brings us to the end of this episode."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1893.82,
      "end": 1900.82,
      "text": " So just to summarize our take, I think we really like Strapi, the content modeling, the dynamic zones, and the block editor."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1900.82,
      "end": 1902.82,
      "text": " Also, the workflow is generally pretty nice."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1902.82,
      "end": 1909.82,
      "text": " So work locally, create the data model, you can also create data, move things around to production when needed."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1909.82,
      "end": 1917.82,
      "text": " With the transfer CLI, I think, yeah, there is a quite good productivity boost in doing things this way, of course,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1917.82,
      "end": 1920.82,
      "text": " rather than building your own CMS from scratch."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1920.82,
      "end": 1931.82,
      "text": " And you can even have a quite pleasant experience if you know how to avoid certain small bugs, but I'm sure that those bugs will be fixed as we go in the next few months, years."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1931.82,
      "end": 1936.82,
      "text": " So I think Strapi can be a valid, very valid option going forward for sure."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1936.82,
      "end": 1942.82,
      "text": " So again, thank you to Forteorem for sponsoring another episode of AWS Bites."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1942.82,
      "end": 1946.82,
      "text": " And Forteorem is a consulting company specialized on AWS."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1946.82,
      "end": 1951.82,
      "text": " So if you want help designing an AWS architecture that's simple, scalable, and cost effective,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1951.82,
      "end": 1955.82,
      "text": " make sure to visit Forteorem.com and reach out to us if you need more information."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1955.82,
      "end": 1957.82,
      "text": " Now we'll leave you with a final question."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1957.82,
      "end": 1959.82,
      "text": " Have you shipped something with Strapi?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1959.82,
      "end": 1962.82,
      "text": " If you did, I'm curious to know, did you like it?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1962.82,
      "end": 1969.82,
      "text": " Was working end to end or there was some unexpected hiccup or also another question, how did you host it?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1969.82,
      "end": 1972.82,
      "text": " Did you go with the cloud option or did you host it yourself?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1972.82,
      "end": 1977.82,
      "text": " And if you hosted it yourself in AWS, please share your architecture because this is definitely something we're talking about."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1977.82,
      "end": 1980.82,
      "text": " And we are sure we might be learn a thing or two from you."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1980.82,
      "end": 1989.82,
      "text": " And if you ever use any other CMS, Adless CMS like Strapi, I think it would be also nice to hear your opinion, which ones did you like or not."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1989.82,
      "end": 1994.82,
      "text": " So let us know in the comments or ping us on socials and we'd love to talk to you."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1994.82,
      "end": 1998.82,
      "text": " And thank you so much again, and we'll see you in the next episode."
    }
  ]
}