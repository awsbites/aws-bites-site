{
  "speakers": {
    "spk_0": "spk_0",
    "spk_1": "spk_1"
  },
  "segments": [
    {
      "speakerLabel": "spk_0",
      "start": 0,
      "end": 9.36,
      "text": " Hello and welcome to AWS Bites, the weekly show with bite-sized episodes where we answer"
    },
    {
      "speakerLabel": "spk_0",
      "start": 9.36,
      "end": 11.64,
      "text": " your questions about AWS."
    },
    {
      "speakerLabel": "spk_0",
      "start": 11.64,
      "end": 14.52,
      "text": " My name is Eoin and I'm joined by Luciano."
    },
    {
      "speakerLabel": "spk_0",
      "start": 14.52,
      "end": 17.76,
      "text": " Before we get started, make sure you give us a follow and subscribe so you can be notified"
    },
    {
      "speakerLabel": "spk_0",
      "start": 17.76,
      "end": 20.32,
      "text": " when the next episode goes live."
    },
    {
      "speakerLabel": "spk_0",
      "start": 20.32,
      "end": 24.12,
      "text": " Today's question is, what are the pros and cons of CDK?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 24.12,
      "end": 28.6,
      "text": " And as always, let's start off by talking about definitions."
    },
    {
      "speakerLabel": "spk_0",
      "start": 28.6,
      "end": 30.16,
      "text": " What is CDK?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 38.28,
      "end": 44.36,
      "text": " Yeah, CDK is a relatively new tool slash service from AWS, which the name actually means Cloud Development Kit and is essentially another way of writing infrastructure as code."
    },
    {
      "speakerLabel": "spk_1",
      "start": 44.36,
      "end": 51.02,
      "text": " But this time, rather than using a declarative language like JSON or YAML or something similar,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 51.02,
      "end": 56.36,
      "text": " you can actually use real imperative programming languages and many of them are supported,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 56.36,
      "end": 59.64,
      "text": " for instance, TypeScript, Java, C-sharp, Python."
    },
    {
      "speakerLabel": "spk_1",
      "start": 59.64,
      "end": 62.6,
      "text": " I actually don't know if even Go is supported."
    },
    {
      "speakerLabel": "spk_1",
      "start": 62.6,
      "end": 67.66,
      "text": " Maybe it's in beta, but yeah, the idea is that you can use probably a language that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 67.66,
      "end": 71.36,
      "text": " you are already comfortable with when you're writing code."
    },
    {
      "speakerLabel": "spk_1",
      "start": 71.36,
      "end": 72.64,
      "text": " Yeah."
    },
    {
      "speakerLabel": "spk_1",
      "start": 72.64,
      "end": 75.84,
      "text": " Do you want to tell us how it works?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 75.84,
      "end": 77.34,
      "text": " Yeah."
    },
    {
      "speakerLabel": "spk_0",
      "start": 77.34,
      "end": 80.76,
      "text": " There's a lot of complexity under the hood and a lot of magic actually at supporting"
    },
    {
      "speakerLabel": "spk_0",
      "start": 80.76,
      "end": 81.76,
      "text": " all those languages."
    },
    {
      "speakerLabel": "spk_0",
      "start": 81.76,
      "end": 87.12,
      "text": " I know that they've got this project called JSII, which allows, I think they write basically,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 87.12,
      "end": 92.32000000000001,
      "text": " write it in TypeScript and then it gets all these other languages get generated."
    },
    {
      "speakerLabel": "spk_0",
      "start": 92.32000000000001,
      "end": 94.84,
      "text": " But yeah, so it's generating cloud formation, as we said."
    },
    {
      "speakerLabel": "spk_0",
      "start": 94.84,
      "end": 99.04,
      "text": " We talked a lot about cloud formation in the past and how important cloud formation is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 99.04,
      "end": 102.04,
      "text": " as a service if you're using AWS."
    },
    {
      "speakerLabel": "spk_0",
      "start": 102.04,
      "end": 105.76,
      "text": " But CDK gives you layers of abstraction on top of it."
    },
    {
      "speakerLabel": "spk_0",
      "start": 105.76,
      "end": 111.72,
      "text": " So the question becomes how much of an abstraction do you want to have on top of your cloud formation?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 111.72,
      "end": 112.72,
      "text": " Good resources."
    },
    {
      "speakerLabel": "spk_0",
      "start": 112.72,
      "end": 117.72,
      "text": " Because cloud formation can be very verbose, but it's also very clear and declarative in"
    },
    {
      "speakerLabel": "spk_0",
      "start": 117.72,
      "end": 119.28,
      "text": " some ways."
    },
    {
      "speakerLabel": "spk_0",
      "start": 119.28,
      "end": 123.84,
      "text": " When you're reading a JSON or YAML file, you can get very comfortable with that and it's"
    },
    {
      "speakerLabel": "spk_0",
      "start": 123.84,
      "end": 126.4,
      "text": " very easy to see what you're about to deploy."
    },
    {
      "speakerLabel": "spk_0",
      "start": 126.4,
      "end": 128.16,
      "text": " Cloud formation will give you a number of levels."
    },
    {
      "speakerLabel": "spk_0",
      "start": 128.16,
      "end": 132.56,
      "text": " So there's these concept of L1 and L2 constructs."
    },
    {
      "speakerLabel": "spk_0",
      "start": 132.56,
      "end": 139.88,
      "text": " So an L1 or level one construct is basically a programmatic object oriented wrapper around"
    },
    {
      "speakerLabel": "spk_0",
      "start": 139.88,
      "end": 141.4,
      "text": " all of these cloud formation resources."
    },
    {
      "speakerLabel": "spk_0",
      "start": 141.4,
      "end": 146.52,
      "text": " So you have these classes that would provide that begin with CFN."
    },
    {
      "speakerLabel": "spk_0",
      "start": 146.52,
      "end": 153.48000000000002,
      "text": " And those are really just a typed layer on top of the resources you're going to generate."
    },
    {
      "speakerLabel": "spk_0",
      "start": 153.48000000000002,
      "end": 158.04000000000002,
      "text": " Then you've got these L2 patterns, which are higher levels of abstraction."
    },
    {
      "speakerLabel": "spk_0",
      "start": 158.04000000000002,
      "end": 163.72,
      "text": " And those are like CDK classes that will give you same defaults for a lot of use cases."
    },
    {
      "speakerLabel": "spk_0",
      "start": 163.72,
      "end": 167.52,
      "text": " So you can create an SQS queue, but you don't have to declare all of the properties."
    },
    {
      "speakerLabel": "spk_0",
      "start": 167.52,
      "end": 170.72,
      "text": " It will give you some sensible defaults."
    },
    {
      "speakerLabel": "spk_0",
      "start": 170.72,
      "end": 177.68,
      "text": " And then beyond that, you've got higher level patterns and constructs that can be whole"
    },
    {
      "speakerLabel": "spk_0",
      "start": 177.68,
      "end": 179.68,
      "text": " applications even."
    },
    {
      "speakerLabel": "spk_0",
      "start": 179.68,
      "end": 185.84,
      "text": " They're groups of cloud formation resources with lots of defaults, some configurability,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 185.84,
      "end": 191.24,
      "text": " but the idea about those is that they're kind of patterns that allows you to deploy a lot"
    },
    {
      "speakerLabel": "spk_0",
      "start": 191.24,
      "end": 195.24,
      "text": " of resources with a couple of lines of code."
    },
    {
      "speakerLabel": "spk_0",
      "start": 195.24,
      "end": 201.20000000000002,
      "text": " And that'll lead us into, I guess, some of the advantages and disadvantages of CDK because"
    },
    {
      "speakerLabel": "spk_0",
      "start": 201.20000000000002,
      "end": 206.20000000000002,
      "text": " people who are experienced with lots of abstractions in various different programming paradigms"
    },
    {
      "speakerLabel": "spk_0",
      "start": 206.20000000000002,
      "end": 211.68,
      "text": " over numbers of decades will understand that abstractions don't always come for free."
    },
    {
      "speakerLabel": "spk_0",
      "start": 211.68,
      "end": 213.20000000000002,
      "text": " So let's go through the pros and cons."
    },
    {
      "speakerLabel": "spk_0",
      "start": 213.20000000000002,
      "end": 214.82000000000002,
      "text": " That's what we're here to talk about."
    },
    {
      "speakerLabel": "spk_0",
      "start": 214.82000000000002,
      "end": 218.60000000000002,
      "text": " What do you think are some of the advantages with CDK Luciano?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 218.60000000000002,
      "end": 224.88,
      "text": " I suppose the most obvious ones, you're probably getting that already, are that if you are"
    },
    {
      "speakerLabel": "spk_1",
      "start": 224.88,
      "end": 229.92,
      "text": " already comfortable with a programming language because you are mostly writing code most of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 229.92,
      "end": 232.88,
      "text": " your time, you are already in a way good to go."
    },
    {
      "speakerLabel": "spk_1",
      "start": 232.88,
      "end": 235.76,
      "text": " You don't need to learn anything new."
    },
    {
      "speakerLabel": "spk_1",
      "start": 235.76,
      "end": 239.4,
      "text": " Of course, you need to learn what are the classes that you need to use to build different"
    },
    {
      "speakerLabel": "spk_1",
      "start": 239.4,
      "end": 240.4,
      "text": " things."
    },
    {
      "speakerLabel": "spk_1",
      "start": 240.4,
      "end": 243.68,
      "text": " The different levels that you described are not so obvious at first."
    },
    {
      "speakerLabel": "spk_1",
      "start": 243.68,
      "end": 247.68,
      "text": " So there is still, of course, a learning curve, but at least you don't have to learn an entirely"
    },
    {
      "speakerLabel": "spk_1",
      "start": 247.68,
      "end": 248.68,
      "text": " new language."
    },
    {
      "speakerLabel": "spk_1",
      "start": 248.68,
      "end": 253.66,
      "text": " Like for instance, when I started doing Terraform, I needed to learn all the syntax and the nitty"
    },
    {
      "speakerLabel": "spk_1",
      "start": 253.66,
      "end": 258.88,
      "text": " gritty details of HCL, the AshuCorp language."
    },
    {
      "speakerLabel": "spk_1",
      "start": 258.88,
      "end": 265.71999999999997,
      "text": " And that sometimes is a little bit of a barrier that you can avoid with something like CDK."
    },
    {
      "speakerLabel": "spk_1",
      "start": 265.71999999999997,
      "end": 271.68,
      "text": " Also we mentioned that there are all the different levels and these levels exist for what you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 271.68,
      "end": 274.28,
      "text": " get out of the box from AWS."
    },
    {
      "speakerLabel": "spk_1",
      "start": 274.28,
      "end": 280.96,
      "text": " Like if you start to use CDK, but there are also third party patterns that you can just"
    },
    {
      "speakerLabel": "spk_1",
      "start": 280.96,
      "end": 285.21999999999997,
      "text": " use, you can search your line and you can download the ones that you think they make"
    },
    {
      "speakerLabel": "spk_1",
      "start": 285.21999999999997,
      "end": 287.02,
      "text": " the most sense for you."
    },
    {
      "speakerLabel": "spk_1",
      "start": 287.02,
      "end": 291.2,
      "text": " And you can even avail of work that other people are doing, just bringing it into your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 291.2,
      "end": 294.88,
      "text": " project and you are more or less, let's say, good to go."
    },
    {
      "speakerLabel": "spk_1",
      "start": 294.88,
      "end": 298.7,
      "text": " Probably we'll spend a little few words later on that."
    },
    {
      "speakerLabel": "spk_1",
      "start": 303.79999999999995,
      "end": 307.17999999999995,
      "text": " And I suppose another great thing is that because you are using all the languages that are supported are typed languages."
    },
    {
      "speakerLabel": "spk_1",
      "start": 307.18,
      "end": 312.58,
      "text": " And because of that, you get a very good level of auto-completion and type checking."
    },
    {
      "speakerLabel": "spk_1",
      "start": 312.58,
      "end": 319.14,
      "text": " So for instance, if you are writing, let's say a low level construct, like a CFN one,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 319.14,
      "end": 322.3,
      "text": " when you start to initialize the classes, you're going to get good auto-complete."
    },
    {
      "speakerLabel": "spk_1",
      "start": 322.3,
      "end": 324.2,
      "text": " You can immediately see all the properties."
    },
    {
      "speakerLabel": "spk_1",
      "start": 324.2,
      "end": 326.56,
      "text": " You can see documentation in line."
    },
    {
      "speakerLabel": "spk_1",
      "start": 326.56,
      "end": 332.8,
      "text": " So I feel that that flow that I used to have when I was doing a cloud formation or Terraform"
    },
    {
      "speakerLabel": "spk_1",
      "start": 332.8,
      "end": 337.84000000000003,
      "text": " where you always have on one page of the documentation, on the other page, your editor, or maybe two"
    },
    {
      "speakerLabel": "spk_1",
      "start": 337.84000000000003,
      "end": 341.72,
      "text": " different screens and you're always looking at two different places to try to reconcile"
    },
    {
      "speakerLabel": "spk_1",
      "start": 341.72,
      "end": 342.72,
      "text": " them."
    },
    {
      "speakerLabel": "spk_1",
      "start": 342.72,
      "end": 347.04,
      "text": " Now it's a little bit more streamlined, like in one window, you are going to have everything"
    },
    {
      "speakerLabel": "spk_1",
      "start": 347.04,
      "end": 353.26,
      "text": " you need to figure out like what kind of properties you need to set and where."
    },
    {
      "speakerLabel": "spk_0",
      "start": 353.26,
      "end": 358.6,
      "text": " When I started using CDK, when it first came out and it was in beta and I opened up, I"
    },
    {
      "speakerLabel": "spk_0",
      "start": 358.6,
      "end": 363.16,
      "text": " think VS code and started writing TypeScript and I got all this auto-completion and type"
    },
    {
      "speakerLabel": "spk_0",
      "start": 363.16,
      "end": 366.64000000000004,
      "text": " checking and immediate error feedback on what properties were missing."
    },
    {
      "speakerLabel": "spk_0",
      "start": 366.64000000000004,
      "end": 371.20000000000005,
      "text": " It was like, you know, it's something we're used to for developing code, but with cloud"
    },
    {
      "speakerLabel": "spk_0",
      "start": 371.20000000000005,
      "end": 374.76000000000005,
      "text": " formation, even then, I don't know if CFN lint was available."
    },
    {
      "speakerLabel": "spk_0",
      "start": 374.76000000000005,
      "end": 378.56,
      "text": " It's deploying, getting feedback on cloud formation was typically, you know, something"
    },
    {
      "speakerLabel": "spk_0",
      "start": 378.56,
      "end": 384.76000000000005,
      "text": " you needed to deploy in order to get, and this, that was a big productivity win."
    },
    {
      "speakerLabel": "spk_0",
      "start": 384.76000000000005,
      "end": 386.92,
      "text": " So it just, yeah, that was really good for me."
    },
    {
      "speakerLabel": "spk_0",
      "start": 386.92,
      "end": 392.6,
      "text": " And then other things as well, like IAM policy generation, have you found that like with"
    },
    {
      "speakerLabel": "spk_0",
      "start": 392.6,
      "end": 399.6,
      "text": " CDK, you spend much less time hand crafting and tuning policies and figuring out why you're"
    },
    {
      "speakerLabel": "spk_0",
      "start": 399.6,
      "end": 406.52000000000004,
      "text": " getting malformed, you policy document legacy particles failed, these kinds of errors."
    },
    {
      "speakerLabel": "spk_0",
      "start": 406.52000000000004,
      "end": 407.52000000000004,
      "text": " Yeah."
    },
    {
      "speakerLabel": "spk_1",
      "start": 407.52000000000004,
      "end": 412.40000000000003,
      "text": " And I really like, actually, this is a really good point because basically what you can"
    },
    {
      "speakerLabel": "spk_1",
      "start": 412.40000000000003,
      "end": 415.12,
      "text": " do, I'm going to give a practical example."
    },
    {
      "speakerLabel": "spk_1",
      "start": 415.12,
      "end": 419.92,
      "text": " For instance, you define an S3 bucket and then you want to allow a particular EC2 instance"
    },
    {
      "speakerLabel": "spk_1",
      "start": 419.92,
      "end": 424.56,
      "text": " to be able to read and write in that particular S3 bucket."
    },
    {
      "speakerLabel": "spk_1",
      "start": 424.56,
      "end": 429.88,
      "text": " What you will typically do with cloud formation, you create three distinct resources, the bucket,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 429.88,
      "end": 434.72,
      "text": " the EC2 instance, and then you craft your own policy that ties the two together, giving"
    },
    {
      "speakerLabel": "spk_1",
      "start": 434.72,
      "end": 436.08,
      "text": " the right permission."
    },
    {
      "speakerLabel": "spk_1",
      "start": 436.08,
      "end": 440.8,
      "text": " With CDK, because you have this idea of kind of an object oriented approach, what you could"
    },
    {
      "speakerLabel": "spk_1",
      "start": 440.8,
      "end": 446.68,
      "text": " say is you use the object that in your code describes the S3 bucket and you just say dot"
    },
    {
      "speakerLabel": "spk_1",
      "start": 446.68,
      "end": 452,
      "text": " grant read and write to and pass a particular instance reference."
    },
    {
      "speakerLabel": "spk_1",
      "start": 452,
      "end": 454.44,
      "text": " And that will automatically generate a policy for you."
    },
    {
      "speakerLabel": "spk_1",
      "start": 454.44,
      "end": 459.08000000000004,
      "text": " So it's a little bit of abstraction, but I think it feels a lot more readable and it's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 459.08000000000004,
      "end": 464.32,
      "text": " easier to get the link between the two resources right because you don't really have to manually"
    },
    {
      "speakerLabel": "spk_1",
      "start": 464.32,
      "end": 465.32,
      "text": " reference things."
    },
    {
      "speakerLabel": "spk_1",
      "start": 465.32,
      "end": 470.48,
      "text": " You just essentially let the autocomplete guide you and it will most likely do the right"
    },
    {
      "speakerLabel": "spk_1",
      "start": 470.48,
      "end": 471.6,
      "text": " thing for you."
    },
    {
      "speakerLabel": "spk_1",
      "start": 471.6,
      "end": 476.40000000000003,
      "text": " So that's something I really liked and I think even when I gave that code to somebody else"
    },
    {
      "speakerLabel": "spk_1",
      "start": 476.40000000000003,
      "end": 482.24,
      "text": " that wasn't familiar with either cloud formation or CDK, they immediately realized, okay, you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 482.24,
      "end": 487.46000000000004,
      "text": " are creating this instance, you are creating this bucket, and then you are granting permissions"
    },
    {
      "speakerLabel": "spk_1",
      "start": 487.46000000000004,
      "end": 490.70000000000005,
      "text": " for the instance to read and write in that bucket."
    },
    {
      "speakerLabel": "spk_1",
      "start": 490.70000000000005,
      "end": 494.68,
      "text": " So I think that's another very clear advantage."
    },
    {
      "speakerLabel": "spk_0",
      "start": 502.16,
      "end": 506.68,
      "text": " There is one thing I like as well, which is that with cloud formation, you have the concept of change sets and it has a lot of features like change sets and stack sets, but change"
    },
    {
      "speakerLabel": "spk_0",
      "start": 506.68,
      "end": 511.72,
      "text": " sets allow you to kind of make a plan for what you're about to deploy, inspect that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 511.72,
      "end": 514.4,
      "text": " plan and then apply it in separate steps."
    },
    {
      "speakerLabel": "spk_0",
      "start": 514.4,
      "end": 519.08,
      "text": " And Terraform also has this concept with Terraform plans."
    },
    {
      "speakerLabel": "spk_0",
      "start": 519.08,
      "end": 522.96,
      "text": " But change sets don't tend to be used very commonly."
    },
    {
      "speakerLabel": "spk_0",
      "start": 522.96,
      "end": 526.88,
      "text": " I think I heard somewhere recently saying that some ridiculously high percentage of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 526.88,
      "end": 532.9200000000001,
      "text": " cloud formation in the world is deployed using serverless framework, like 80 or 90%."
    },
    {
      "speakerLabel": "spk_0",
      "start": 532.9200000000001,
      "end": 537.08,
      "text": " And serverless framework doesn't use change sets by default."
    },
    {
      "speakerLabel": "spk_0",
      "start": 537.08,
      "end": 539.9200000000001,
      "text": " I think it's a plugin for it, but it tends not to get used."
    },
    {
      "speakerLabel": "spk_0",
      "start": 539.9200000000001,
      "end": 543.2,
      "text": " So people tend to just deploy."
    },
    {
      "speakerLabel": "spk_0",
      "start": 543.2,
      "end": 545.2,
      "text": " But CDK is very much built around change sets."
    },
    {
      "speakerLabel": "spk_0",
      "start": 545.2,
      "end": 549.48,
      "text": " So you create a change set, it allows you to inspect and verify."
    },
    {
      "speakerLabel": "spk_0",
      "start": 549.48,
      "end": 553.36,
      "text": " So it has this synthesis process, which allows you to see the template."
    },
    {
      "speakerLabel": "spk_0",
      "start": 553.36,
      "end": 558.72,
      "text": " Then when you're deploying, you can see the change set and you can verify the change set,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 558.72,
      "end": 561.2,
      "text": " particularly the security changes before you deploy."
    },
    {
      "speakerLabel": "spk_0",
      "start": 561.2,
      "end": 563.08,
      "text": " So this is nice."
    },
    {
      "speakerLabel": "spk_0",
      "start": 563.08,
      "end": 567.6,
      "text": " It's allowing you to follow best practices by default rather than having to add that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 567.6,
      "end": 568.6,
      "text": " in yourself."
    },
    {
      "speakerLabel": "spk_1",
      "start": 573.96,
      "end": 578.52,
      "text": " Yeah, this is something I used to do a lot with Terraform where I was prototyping something and even before deploying, I would do like a Terraform diff, which is pretty much the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 578.52,
      "end": 579.92,
      "text": " same thing we are describing."
    },
    {
      "speakerLabel": "spk_1",
      "start": 579.92,
      "end": 583.04,
      "text": " And you will get a list of, okay, this is what is going to change if you actually want"
    },
    {
      "speakerLabel": "spk_1",
      "start": 583.04,
      "end": 584.76,
      "text": " to deploy right now."
    },
    {
      "speakerLabel": "spk_1",
      "start": 584.76,
      "end": 590.16,
      "text": " Maybe I didn't want to deploy, it was just a good sanity check to see, okay, I'm really"
    },
    {
      "speakerLabel": "spk_1",
      "start": 590.16,
      "end": 595.24,
      "text": " going in the right direction where I am describing the changes that I want to happen in the infrastructure."
    },
    {
      "speakerLabel": "spk_1",
      "start": 595.24,
      "end": 600.36,
      "text": " And now with CDK, you can just do CDK diff, I think is the command, and it will give you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 600.36,
      "end": 605.8,
      "text": " like a list of, okay, at this stage, if you apply this, this is what's going to change"
    },
    {
      "speakerLabel": "spk_1",
      "start": 605.8,
      "end": 608.76,
      "text": " compared to your current infrastructure."
    },
    {
      "speakerLabel": "spk_1",
      "start": 608.76,
      "end": 612.9599999999999,
      "text": " And I think that that's really powerful and really useful, especially if you are starting"
    },
    {
      "speakerLabel": "spk_1",
      "start": 612.9599999999999,
      "end": 617.88,
      "text": " to use infrastructure as code, it will give you a lot more confidence when you are writing"
    },
    {
      "speakerLabel": "spk_1",
      "start": 617.88,
      "end": 622,
      "text": " for the first time that you are going in the right direction."
    },
    {
      "speakerLabel": "spk_1",
      "start": 622,
      "end": 624,
      "text": " Yeah, yeah."
    },
    {
      "speakerLabel": "spk_0",
      "start": 624,
      "end": 629.9,
      "text": " One of the other things that is kind of really rising to the fore with CDK is how easy it"
    },
    {
      "speakerLabel": "spk_0",
      "start": 629.9,
      "end": 631.8399999999999,
      "text": " can make to do pipelines."
    },
    {
      "speakerLabel": "spk_0",
      "start": 631.8399999999999,
      "end": 635.14,
      "text": " How easy it can make doing pipelines."
    },
    {
      "speakerLabel": "spk_0",
      "start": 635.14,
      "end": 640.16,
      "text": " So if you use CodePipeline and CodeBuild, CodeDeploy, all these services, creating pipelines"
    },
    {
      "speakerLabel": "spk_0",
      "start": 640.16,
      "end": 645.88,
      "text": " for them with CloudFormation is hard work and maintaining those pipelines is really"
    },
    {
      "speakerLabel": "spk_0",
      "start": 645.88,
      "end": 647.08,
      "text": " hard work."
    },
    {
      "speakerLabel": "spk_0",
      "start": 647.08,
      "end": 652.96,
      "text": " And I think pipelines are the first, building CI-CD stacks, this is one of the first things"
    },
    {
      "speakerLabel": "spk_0",
      "start": 652.96,
      "end": 654.68,
      "text": " I ever used CDK for."
    },
    {
      "speakerLabel": "spk_0",
      "start": 654.68,
      "end": 659.16,
      "text": " And I still use it very commonly because it just makes that process much easier when you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 659.16,
      "end": 662.36,
      "text": " have particularly dynamic behavior in your pipelines."
    },
    {
      "speakerLabel": "spk_0",
      "start": 662.36,
      "end": 666.98,
      "text": " You know, the stacks you are deploying change, the number of steps in your pipeline change,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 666.98,
      "end": 672.78,
      "text": " you want to be able to replicate a deployment pipeline for a dev environment or for a new"
    },
    {
      "speakerLabel": "spk_0",
      "start": 672.78,
      "end": 676.24,
      "text": " set of accounts, CDK really facilitates that."
    },
    {
      "speakerLabel": "spk_0",
      "start": 676.24,
      "end": 681.48,
      "text": " And beyond that, if you are really going all in on CDK and you are using L2 constructs"
    },
    {
      "speakerLabel": "spk_0",
      "start": 681.48,
      "end": 687.08,
      "text": " for creating Lambda functions and all of your resources for each service in your application"
    },
    {
      "speakerLabel": "spk_0",
      "start": 687.08,
      "end": 695.08,
      "text": " and multiple stacks within your application, it has a pattern of, a pattern, so it's kind"
    },
    {
      "speakerLabel": "spk_0",
      "start": 695.08,
      "end": 698.98,
      "text": " of level three constructs for CDK pipelines."
    },
    {
      "speakerLabel": "spk_0",
      "start": 698.98,
      "end": 705.0400000000001,
      "text": " And this will basically create pipelines out of the box with very good defaults that would"
    },
    {
      "speakerLabel": "spk_0",
      "start": 705.0400000000001,
      "end": 708.8000000000001,
      "text": " deploy all of the stacks in your application."
    },
    {
      "speakerLabel": "spk_0",
      "start": 708.8000000000001,
      "end": 710.7,
      "text": " And so this is really good."
    },
    {
      "speakerLabel": "spk_0",
      "start": 710.7,
      "end": 712.34,
      "text": " It means you have to go all in on CDK."
    },
    {
      "speakerLabel": "spk_0",
      "start": 712.34,
      "end": 715.96,
      "text": " That's the only thing, but it is a really nice advantage."
    },
    {
      "speakerLabel": "spk_0",
      "start": 715.96,
      "end": 720.48,
      "text": " And CDK pipelines then are also self-mutating."
    },
    {
      "speakerLabel": "spk_0",
      "start": 720.48,
      "end": 725.32,
      "text": " So if you have got the pipeline code in the same repo as all of your application stacks,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 725.32,
      "end": 730.7,
      "text": " then you commit to a branch or trigger a release, then when the pipeline runs, it will first"
    },
    {
      "speakerLabel": "spk_0",
      "start": 730.7,
      "end": 734.08,
      "text": " make sure that the pipeline itself is running the latest version of that code, and then"
    },
    {
      "speakerLabel": "spk_0",
      "start": 734.08,
      "end": 735.8000000000001,
      "text": " it will deploy everything else."
    },
    {
      "speakerLabel": "spk_0",
      "start": 735.8000000000001,
      "end": 738.1600000000001,
      "text": " So it's really nice from a change management point of view."
    },
    {
      "speakerLabel": "spk_0",
      "start": 738.1600000000001,
      "end": 742.6800000000001,
      "text": " You can imagine a PR that introduces a new service into your application and it includes"
    },
    {
      "speakerLabel": "spk_0",
      "start": 742.6800000000001,
      "end": 744.9000000000001,
      "text": " the pipeline changes as well."
    },
    {
      "speakerLabel": "spk_0",
      "start": 744.9,
      "end": 750,
      "text": " So it makes it really easy from a code review, collaboration point of view."
    },
    {
      "speakerLabel": "spk_1",
      "start": 750,
      "end": 751.5799999999999,
      "text": " So that's really nice."
    },
    {
      "speakerLabel": "spk_1",
      "start": 751.5799999999999,
      "end": 756.98,
      "text": " Another thing that is probably relevant to what you just said is the concept of assets"
    },
    {
      "speakerLabel": "spk_1",
      "start": 756.98,
      "end": 762.72,
      "text": " that exist in CDK, which I think is really clever and can simplify a little bit your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 762.72,
      "end": 764.72,
      "text": " life in many use cases."
    },
    {
      "speakerLabel": "spk_1",
      "start": 764.72,
      "end": 770.1999999999999,
      "text": " For instance, if you use, I don't know, something like Terraform, every time you need to, let's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 770.2,
      "end": 775.36,
      "text": " say, deploy a Lambda or a container in ECS, you need to, of course, to specify, okay,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 775.36,
      "end": 777.44,
      "text": " where is the source code for that?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 777.44,
      "end": 781.2800000000001,
      "text": " And generally that means, okay, I need to create an artifact, publish it to S3 or to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 781.2800000000001,
      "end": 785.8000000000001,
      "text": " a container registry, and then I can reference that particular artifact in my infrastructure"
    },
    {
      "speakerLabel": "spk_1",
      "start": 785.8000000000001,
      "end": 786.8000000000001,
      "text": " as code."
    },
    {
      "speakerLabel": "spk_1",
      "start": 786.8000000000001,
      "end": 793.2800000000001,
      "text": " With CDK, there is a way that you can abstract all that work, and if you have the code collocated"
    },
    {
      "speakerLabel": "spk_1",
      "start": 793.2800000000001,
      "end": 798.5200000000001,
      "text": " with your infrastructure as code, you can just reference assets in the same project."
    },
    {
      "speakerLabel": "spk_1",
      "start": 798.52,
      "end": 803.48,
      "text": " And then behind the scene, that asset abstraction will, for instance, deploy the source code"
    },
    {
      "speakerLabel": "spk_1",
      "start": 803.48,
      "end": 808.72,
      "text": " of a Lambda in S3 or use a container registry to deploy the source code for a container."
    },
    {
      "speakerLabel": "spk_1",
      "start": 808.72,
      "end": 814.4399999999999,
      "text": " And they would even do the build phase within the context of CDK."
    },
    {
      "speakerLabel": "spk_1",
      "start": 814.4399999999999,
      "end": 818.38,
      "text": " So it's a little bit more streamlined process where you don't end up using different tools"
    },
    {
      "speakerLabel": "spk_1",
      "start": 818.38,
      "end": 824.24,
      "text": " and different steps of a pipeline to just deploy your changes, which can be nice."
    },
    {
      "speakerLabel": "spk_1",
      "start": 824.24,
      "end": 827.88,
      "text": " I guess there are pros and cons, but it can be nice, especially if you're working on a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 827.88,
      "end": 832.56,
      "text": " small project because it makes your life easier."
    },
    {
      "speakerLabel": "spk_1",
      "start": 832.56,
      "end": 837,
      "text": " But now that we've talked a lot about the goods, what do we have to say about that?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 837,
      "end": 840.76,
      "text": " Do you want to mention something on that one?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 840.76,
      "end": 847.24,
      "text": " Yeah, there's quite a lot to cover here."
    },
    {
      "speakerLabel": "spk_0",
      "start": 847.24,
      "end": 850.6,
      "text": " In my own experience, one of the big things is that there hasn't been a lot of consistency"
    },
    {
      "speakerLabel": "spk_0",
      "start": 850.6,
      "end": 856.6,
      "text": " in it, especially when you're talking about some of the L2 constructs."
    },
    {
      "speakerLabel": "spk_0",
      "start": 856.6,
      "end": 859.74,
      "text": " Not every service in AWS has L2 constructs."
    },
    {
      "speakerLabel": "spk_0",
      "start": 859.74,
      "end": 866.84,
      "text": " So I remember trying to deploy batch and you had to use the L1 constructs."
    },
    {
      "speakerLabel": "spk_0",
      "start": 866.84,
      "end": 873.8000000000001,
      "text": " So sometimes it falls a little bit behind the CloudFormation and it takes time for those"
    },
    {
      "speakerLabel": "spk_0",
      "start": 873.8000000000001,
      "end": 875.9200000000001,
      "text": " L2 constructs to emerge."
    },
    {
      "speakerLabel": "spk_0",
      "start": 875.9200000000001,
      "end": 881.88,
      "text": " But I suppose one of the main things, if we're looking at disadvantages of CDK and approaches"
    },
    {
      "speakerLabel": "spk_0",
      "start": 881.88,
      "end": 888.2,
      "text": " like that, is that this is an abstraction layer and abstractions should always be treated"
    },
    {
      "speakerLabel": "spk_0",
      "start": 888.2,
      "end": 891,
      "text": " with a decent amount of caution."
    },
    {
      "speakerLabel": "spk_0",
      "start": 891,
      "end": 896.16,
      "text": " If you look at object relational mapping as an example of that, there's always a price"
    },
    {
      "speakerLabel": "spk_0",
      "start": 896.16,
      "end": 899.12,
      "text": " to pay for abstractions."
    },
    {
      "speakerLabel": "spk_0",
      "start": 899.12,
      "end": 902.92,
      "text": " One of the things then is if you don't understand the details of what is being generated, this"
    },
    {
      "speakerLabel": "spk_0",
      "start": 902.92,
      "end": 904.64,
      "text": " is a dangerous thing."
    },
    {
      "speakerLabel": "spk_0",
      "start": 904.64,
      "end": 911.36,
      "text": " So if you've got a client-side application that's making decisions for you about the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 911.36,
      "end": 915.16,
      "text": " resources that would be deployed on your cloud."
    },
    {
      "speakerLabel": "spk_0",
      "start": 915.16,
      "end": 922.86,
      "text": " And if you're using this as a way of escaping, getting the understanding of what you're deploying"
    },
    {
      "speakerLabel": "spk_0",
      "start": 922.86,
      "end": 925,
      "text": " in the cloud, that's a dangerous thing, right?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 925,
      "end": 932.44,
      "text": " Because you can really end up having performance or cost or other unexpected behaviors emerging"
    },
    {
      "speakerLabel": "spk_0",
      "start": 932.44,
      "end": 933.44,
      "text": " from what you're deploying."
    },
    {
      "speakerLabel": "spk_0",
      "start": 933.44,
      "end": 939.3000000000001,
      "text": " So there's a couple of cases where CDK is really good, but I wouldn't say it's good"
    },
    {
      "speakerLabel": "spk_0",
      "start": 939.3,
      "end": 944.8,
      "text": " if you're just coming at it from a beginner and using it to completely skip having a good"
    },
    {
      "speakerLabel": "spk_0",
      "start": 944.8,
      "end": 947.88,
      "text": " understanding of what CloudFormation does and what it's doing for you."
    },
    {
      "speakerLabel": "spk_0",
      "start": 947.88,
      "end": 952.1999999999999,
      "text": " I think going back to the episode where we talked about our favorite service, we mentioned"
    },
    {
      "speakerLabel": "spk_0",
      "start": 952.1999999999999,
      "end": 954.92,
      "text": " it as one of our top service."
    },
    {
      "speakerLabel": "spk_0",
      "start": 954.92,
      "end": 957.8599999999999,
      "text": " I think it might've been on my number one spot."
    },
    {
      "speakerLabel": "spk_0",
      "start": 957.8599999999999,
      "end": 958.8599999999999,
      "text": " There's a reason for that, right?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 958.8599999999999,
      "end": 963.06,
      "text": " It's just critical to everything you do and having a predictable deterministic deployments"
    },
    {
      "speakerLabel": "spk_0",
      "start": 963.06,
      "end": 964.06,
      "text": " is really important."
    },
    {
      "speakerLabel": "spk_0",
      "start": 964.06,
      "end": 967.52,
      "text": " If you don't understand what's being generated, you might lose that."
    },
    {
      "speakerLabel": "spk_0",
      "start": 967.52,
      "end": 968.52,
      "text": " Absolutely."
    },
    {
      "speakerLabel": "spk_0",
      "start": 968.52,
      "end": 972.4399999999999,
      "text": " So yeah, I can't emphasize that enough, right?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 972.4399999999999,
      "end": 975.8,
      "text": " So it's important to go in with your eyes open."
    },
    {
      "speakerLabel": "spk_0",
      "start": 975.8,
      "end": 979.24,
      "text": " So we have seen a lot of change as well."
    },
    {
      "speakerLabel": "spk_0",
      "start": 979.24,
      "end": 983.4,
      "text": " I started using it in the beta phase and as you would expect when it went to general release,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 983.4,
      "end": 988.28,
      "text": " there were some breaking changes, but you also have a lot of style changes since then,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 988.28,
      "end": 993.8,
      "text": " even across the version one series and deprecation of methods of doing things."
    },
    {
      "speakerLabel": "spk_0",
      "start": 993.8,
      "end": 998.5999999999999,
      "text": " And recently the last couple of weeks we've had version two come out and I've already"
    },
    {
      "speakerLabel": "spk_0",
      "start": 998.5999999999999,
      "end": 1002.68,
      "text": " seen a lot of people complain about breaking changes and how it's not ready for general"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1002.68,
      "end": 1005.7199999999999,
      "text": " release and how they have to start redesigning their stacks."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1005.7199999999999,
      "end": 1009.5999999999999,
      "text": " So this is something that's important to clarify."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1009.5999999999999,
      "end": 1014.3599999999999,
      "text": " There's always a trade off with these levels of abstraction."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1014.3599999999999,
      "end": 1022.3199999999999,
      "text": " The other thing that can be quite confusing to new users is that you begin deploying a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1022.32,
      "end": 1026.24,
      "text": " CDK application by executing this bootstrap phase."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1026.24,
      "end": 1032.16,
      "text": " And it's not immediately obvious what this is for or why you would do it, but you need"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1032.16,
      "end": 1039.6200000000001,
      "text": " to start, I suppose, with a bucket and some things that CDK can use to deploy its resources."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1039.6200000000001,
      "end": 1044.8400000000001,
      "text": " So it needs to prepare sometimes a bucket for assets and it actually now generates an"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1044.8400000000001,
      "end": 1051,
      "text": " ECR repository for container images and it'll generate some policies for deployment across"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1051,
      "end": 1052,
      "text": " account policies."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1052,
      "end": 1056.4,
      "text": " And these are all useful things, but when you're deploying your own application stack,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1056.4,
      "end": 1059.72,
      "text": " sometimes it's a surprise to see that you need to deploy another stack first in order"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1059.72,
      "end": 1063.78,
      "text": " to just deploy the stack you're actually targeting."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1063.78,
      "end": 1068.42,
      "text": " So that's a bit of complexity and something that's not universally understood."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1068.42,
      "end": 1071.56,
      "text": " So I put that down as a disadvantage."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1071.56,
      "end": 1075.72,
      "text": " Yeah, actually I'm not sure I understood that so well until now."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1075.72,
      "end": 1078.4,
      "text": " So thank you for explaining that to me as well."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1078.4,
      "end": 1082.68,
      "text": " I always done the bootstrap phase, but I was a little bit like, okay, whatever, I guess"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1082.68,
      "end": 1088.48,
      "text": " I have to do this, but it's good to know what actually happens behind the scene, I think."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1088.48,
      "end": 1093.8400000000001,
      "text": " I have another one, which is something that has been beaten me quite a few times actually."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1093.8400000000001,
      "end": 1099.3600000000001,
      "text": " And that's basically you think about CDK as, okay, this is just code."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1099.3600000000001,
      "end": 1101.4,
      "text": " I can do whatever I want."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1101.4,
      "end": 1107.72,
      "text": " You can write all sorts of business logic in there, loops and if statements and do things"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1107.72,
      "end": 1112.28,
      "text": " as you would do in any other regular programming language, but sometimes you don't get the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1112.28,
      "end": 1113.82,
      "text": " behavior you would expect."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1113.82,
      "end": 1118.64,
      "text": " And this is because in reality, what CDK is doing is managing an entire life cycle and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1118.64,
      "end": 1123.3600000000001,
      "text": " you are defining resources that will need to be provisioned at certain points."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1123.3600000000001,
      "end": 1128.2,
      "text": " Sometimes you reference resources that might or might not exist at that particular moment"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1128.2,
      "end": 1132.92,
      "text": " in time and CDK will try to figure out that when you actually try to deploy."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1132.92,
      "end": 1137.16,
      "text": " So for instance, one thing that happened to me a few times is that I was trying to read"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1137.16,
      "end": 1141.76,
      "text": " the content of an SSM variable and decide like a piece of business logic."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1141.76,
      "end": 1145.72,
      "text": " If this is the content I'm going to, I don't know, maybe want to provision something else"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1145.72,
      "end": 1153.98,
      "text": " or I don't know, whatever business logic trying to make the type of resources that I wanted"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1153.98,
      "end": 1158.14,
      "text": " to provision determined by the value in an SSM parameter."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1158.14,
      "end": 1159.3200000000002,
      "text": " And that doesn't always work."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1159.3200000000002,
      "end": 1162.8000000000002,
      "text": " I mean, you need to do different things to make it work."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1162.8000000000002,
      "end": 1166,
      "text": " So that was an interesting one."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1166,
      "end": 1168.52,
      "text": " And it might be confusing why that happened."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1168.52,
      "end": 1175.52,
      "text": " So that's a quirk, I would say, of CDK."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1175.52,
      "end": 1176.52,
      "text": " There's another thing."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1176.52,
      "end": 1183.96,
      "text": " I mean, I think there's a lot of debate in the community and on public discourse around"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1183.96,
      "end": 1189.46,
      "text": " CDK benefits versus disadvantages."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1189.46,
      "end": 1195,
      "text": " And one of the things that's cited quite often is, you know, it's not a deterministic deployment"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1195,
      "end": 1200.8,
      "text": " path because if your client code that's generating your cloud formation code changes, that the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1200.8,
      "end": 1204.24,
      "text": " cloud formation template can change without you having changed any of the inputs."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1204.24,
      "end": 1206,
      "text": " So it's not really a deterministic path."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1206,
      "end": 1211.1,
      "text": " We kind of talked about that when we're dealing with the disadvantage of abstraction."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1211.1,
      "end": 1216.22,
      "text": " Another kind of disadvantage that I've seen referred to are the kind of cultural barriers"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1216.22,
      "end": 1221.86,
      "text": " that it can bring about in an organization or that it fails to deal with."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1221.86,
      "end": 1226.26,
      "text": " And if you look at how things have gone over the past few years in cloud and the emergence"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1226.26,
      "end": 1233.08,
      "text": " of a DevOps culture, what you're trying to do is break down barriers and walls between"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1233.08,
      "end": 1235.1,
      "text": " operations and developers."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1235.1,
      "end": 1239.3,
      "text": " And if you want to be able to create these cross-functional teams that can build it and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1239.3,
      "end": 1247.58,
      "text": " run it, I think there's a danger that using programmatic constructs and using imperative"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1247.58,
      "end": 1253,
      "text": " languages can actually rebuild some of those walls because if you look at people who have"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1253,
      "end": 1261.1799999999998,
      "text": " great expertise and experience in SysOps and are coming maybe from a background of using"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1261.1799999999998,
      "end": 1266.06,
      "text": " change management tools like Ansible and Chef and Puppet and lots of other tools and even"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1266.06,
      "end": 1272.8999999999999,
      "text": " Terraform, if you start coming along and saying, well, this is better because it uses imperative"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1272.8999999999999,
      "end": 1276.4399999999998,
      "text": " languages and imperative languages are real programmatic languages and they're better"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1276.44,
      "end": 1281.18,
      "text": " because they allow you to do all of this great object-oriented stuff."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1281.18,
      "end": 1287.8,
      "text": " I don't think that's a really genuine or helpful argument."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1287.8,
      "end": 1290.22,
      "text": " These languages aren't inherently better at all."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1290.22,
      "end": 1297.5,
      "text": " They're just more familiar to people who are used to writing software with business logic."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1297.5,
      "end": 1299.8600000000001,
      "text": " It doesn't necessarily mean that they're a better tool for this job."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1299.8600000000001,
      "end": 1304.2,
      "text": " In fact, there are plenty of arguments to say that infrastructure should always be declarative."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1304.2,
      "end": 1309.42,
      "text": " So I think organizations kind of need to think about this before just going all in because"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1309.42,
      "end": 1314.04,
      "text": " sometimes what you can actually do is end up isolating people with really good skills"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1314.04,
      "end": 1319.8600000000001,
      "text": " and SysOps experience in your organization by essentially potentially gatekeeping by"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1319.8600000000001,
      "end": 1325.3400000000001,
      "text": " saying you now need to have this set of skills in order to be able to do infrastructure in"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1325.3400000000001,
      "end": 1327.18,
      "text": " a modern software application."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1327.18,
      "end": 1328.82,
      "text": " And I don't think that's the case."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1328.82,
      "end": 1334.78,
      "text": " I think we should be able to have cross-functional teams where we meet people where they are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1334.78,
      "end": 1340.86,
      "text": " and understand that sometimes for infrastructure, imposing your set of tools on top of them"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1340.86,
      "end": 1342.7,
      "text": " isn't necessarily the best thing."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1342.7,
      "end": 1347.22,
      "text": " I think that's really important disadvantage that can emerge and something that should"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1347.22,
      "end": 1350.54,
      "text": " kind of slow people down from just adopting it just for the sake of it because it seems"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1350.54,
      "end": 1352.7,
      "text": " easier to get started."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1352.7,
      "end": 1355.54,
      "text": " Yeah, that's an amazing point."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1355.54,
      "end": 1358.5,
      "text": " I totally agree on that."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1358.5,
      "end": 1363.38,
      "text": " And it's interesting to see what the industry is going to decide, I suppose, in a few years"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1363.38,
      "end": 1368.58,
      "text": " if tools like CDK are going to be more mainstream or if eventually we are going to go back to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1368.58,
      "end": 1374.54,
      "text": " more declarative approaches maybe, I don't know, with different tools or different languages."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1374.54,
      "end": 1381.04,
      "text": " So how do you think people should get started then if they're, I guess, people are going"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1381.04,
      "end": 1382.22,
      "text": " to come at it from different angles."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1382.22,
      "end": 1385.18,
      "text": " Maybe people are using CloudFormation already or using something else."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1385.18,
      "end": 1387.26,
      "text": " What's the best place to get started with CDK?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1393.54,
      "end": 1398.64,
      "text": " Yeah, I think I would like to suggest a little bit of a backward approach because what we say is that the main advantage of CDK is that it's a level of abstraction and you can deploy"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1398.64,
      "end": 1404.5,
      "text": " things probably quicker than you will do with just writing CloudFormation from scratch."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1404.5,
      "end": 1408.14,
      "text": " But at the same time, we say that there is a danger that if you do that, you're not going"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1408.14,
      "end": 1413.46,
      "text": " to really know what's going on really at the stack level, like what kind of resources are"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1413.46,
      "end": 1415.46,
      "text": " you going to end up deploying."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1415.46,
      "end": 1418.78,
      "text": " So what I would like to suggest, and maybe this is a little bit of an experiment, so"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1418.78,
      "end": 1424.14,
      "text": " please let us know if you do that, what do you think about this experiment, is try to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1424.14,
      "end": 1427.92,
      "text": " start maybe using CDK almost like CloudFormation."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1427.92,
      "end": 1431.96,
      "text": " And by that I mean, use just level one constructs."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1431.96,
      "end": 1436.56,
      "text": " So you are literally just writing CloudFormation but in something like TypeScript."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1436.56,
      "end": 1440.54,
      "text": " And that will give you a good approach, in my opinion, to the tooling around it and to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1440.54,
      "end": 1443.22,
      "text": " like what's really happening in the different phases."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1443.22,
      "end": 1446.5,
      "text": " And then from that point on, you can start to avail from the different abstraction."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1446.5,
      "end": 1454.06,
      "text": " You can use level one constructs or you can use level two constructs or third party constructs"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1454.06,
      "end": 1459.88,
      "text": " to use that more level of abstraction where maybe, I don't know, you just want to create"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1459.88,
      "end": 1462.3600000000001,
      "text": " a VPC and you are okay with some of the defaults."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1462.3600000000001,
      "end": 1466.74,
      "text": " But at that point, you should be comfortable enough knowing where to check to see what's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1466.74,
      "end": 1468.8,
      "text": " actually going on behind the scene."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1468.8,
      "end": 1470.2,
      "text": " So this is what I'm suggesting."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1470.2,
      "end": 1474.98,
      "text": " Start from actually the lowest level and then add abstraction as you feel more and more"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1474.98,
      "end": 1479.26,
      "text": " comfortable and as you feel you understand what those abstraction are really doing for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1479.26,
      "end": 1480.5800000000002,
      "text": " you."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1480.5800000000002,
      "end": 1483.94,
      "text": " So maybe that will give you less surprises, I would say."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1483.94,
      "end": 1490.26,
      "text": " Maybe a little bit more painful to reap the benefits of CDK, but also probably a safer"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1490.26,
      "end": 1493.1200000000001,
      "text": " approach and less surprises at the end of the day."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1493.1200000000001,
      "end": 1494.1200000000001,
      "text": " I think that's good."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1494.1200000000001,
      "end": 1496.1200000000001,
      "text": " Yeah, yeah, yeah."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1496.12,
      "end": 1501.12,
      "text": " It's good to not jump into these things feed first and go into these high levels of abstraction."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1501.12,
      "end": 1502.12,
      "text": " So that makes sense."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1502.12,
      "end": 1506.1799999999998,
      "text": " And sometimes I've actually used CDK just to generate cloud formation so I can see what"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1506.1799999999998,
      "end": 1509.34,
      "text": " syntax I should be writing manually and then I just create the template."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1509.34,
      "end": 1513.52,
      "text": " So you can always use it in that mode of operation as well."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1513.52,
      "end": 1515.3799999999999,
      "text": " Maybe that's the best of both worlds."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1515.3799999999999,
      "end": 1520.04,
      "text": " Okay, so I think given that we've finished up on how to get started and we've covered"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1520.04,
      "end": 1524.34,
      "text": " all the disadvantages and advantages we can think of, it's time to finish up and maybe"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1524.34,
      "end": 1529.28,
      "text": " ask for your feedback to anybody who's listening to let us know what you think in the comments,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1529.28,
      "end": 1533.6999999999998,
      "text": " to share it with your colleagues and friends and let us know how you get on with CDK."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1533.6999999999998,
      "end": 1538.02,
      "text": " And if you've enjoyed the episode, give us a thumbs up as well and follow and subscribe."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1538.02,
      "end": 1539.58,
      "text": " So we're going to see you in the next episode."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1539.58,
      "end": 1555.4199999999998,
      "text": " Thanks very much for listening and goodbye."
    }
  ]
}