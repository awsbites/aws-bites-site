{
  "speakers": {
    "spk_0": "spk_0",
    "spk_1": "spk_1"
  },
  "segments": [
    {
      "speakerLabel": "spk_0",
      "start": 0,
      "end": 6.4,
      "text": " Hello, today we're going to answer the question, is serverless developer experience still immature?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 7.12,
      "end": 12,
      "text": " And with that question, we are going to cover topics like what the local development looks"
    },
    {
      "speakerLabel": "spk_0",
      "start": 12,
      "end": 16.8,
      "text": " like, what are the best tools that you can use for developing serverless applications,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 16.8,
      "end": 20.56,
      "text": " what is the serverless ecosystem, and how it can be improved."
    },
    {
      "speakerLabel": "spk_0",
      "start": 20.56,
      "end": 29.839999999999996,
      "text": " My name is Luciano and today I'm joined by Eoin and this is AWS Bites podcast."
    },
    {
      "speakerLabel": "spk_0",
      "start": 34.08,
      "end": 38.4,
      "text": " So before we get started, I want to thank you, Project O'Brien, for suggesting us this topic"
    },
    {
      "speakerLabel": "spk_0",
      "start": 38.4,
      "end": 44,
      "text": " today and we remind you that we are very open to accept suggestions, so feel free to send us your"
    },
    {
      "speakerLabel": "spk_0",
      "start": 44,
      "end": 50,
      "text": " questions. But let's start by clarifying what is the context for today. We are talking about when"
    },
    {
      "speakerLabel": "spk_0",
      "start": 50,
      "end": 54.96,
      "text": " we mention serverless, we're talking about building applications not just with Lambda,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 54.96,
      "end": 61.44,
      "text": " but the entire ecosystem like DynamoDB, SQS, Cognito, Kinesis, EventBridge. So in general,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 62,
      "end": 69.92,
      "text": " that large variety that you get of managed services in AWS. So maybe we can start by"
    },
    {
      "speakerLabel": "spk_0",
      "start": 69.92,
      "end": 76.72,
      "text": " discussing how does the serverless experience compares with more traditional ways of building"
    },
    {
      "speakerLabel": "spk_0",
      "start": 76.72,
      "end": 79.52,
      "text": " applications in the cloud. What do you think, Eoin?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 81.92,
      "end": 86.4,
      "text": " Yeah, I guess it depends where you're coming from."
    },
    {
      "speakerLabel": "spk_1",
      "start": 86.4,
      "end": 91.44,
      "text": " I remember when we were building monolithic applications and you essentially had one process that would run all of the various different"
    },
    {
      "speakerLabel": "spk_1",
      "start": 91.44,
      "end": 96.88,
      "text": " capabilities of your application, maybe talking to a database. Sometimes you could run all of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 96.88,
      "end": 101.68,
      "text": " the code for the application in an IDE with a click of one button. Then I guess a lot of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 101.68,
      "end": 106.24,
      "text": " people moved into microservices development where things were a little bit more fragmented"
    },
    {
      "speakerLabel": "spk_1",
      "start": 106.24,
      "end": 113.36,
      "text": " and you had containers for different pieces of functionality. And from a development perspective,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 113.36,
      "end": 117.83999999999999,
      "text": " things started to change around that time because you needed to run multiple containers,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 117.83999999999999,
      "end": 122.72,
      "text": " but it was still doable. And I guess one of the things you're talking about when you're looking"
    },
    {
      "speakerLabel": "spk_1",
      "start": 122.72,
      "end": 127.6,
      "text": " at developer experience for serverless, a lot of people will compare it to containers and Docker"
    },
    {
      "speakerLabel": "spk_1",
      "start": 127.6,
      "end": 133.2,
      "text": " and Kubernetes and what it's like to run containers locally. One of the things containers do really,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 133.2,
      "end": 140.39999999999998,
      "text": " really well, I think, is making sure that you've got a developer environment that performs very"
    },
    {
      "speakerLabel": "spk_1",
      "start": 140.39999999999998,
      "end": 145.04,
      "text": " closely to what your production environment is going to do. Like you've got an immutable"
    },
    {
      "speakerLabel": "spk_1",
      "start": 145.76,
      "end": 150.95999999999998,
      "text": " container that's going to run in the same way pretty much locally and in production."
    },
    {
      "speakerLabel": "spk_1",
      "start": 150.95999999999998,
      "end": 154.23999999999998,
      "text": " With serverless, it's a lot more complex, right? It's not as simple."
    },
    {
      "speakerLabel": "spk_1",
      "start": 155.35999999999999,
      "end": 162.39999999999998,
      "text": " Yeah."
    },
    {
      "speakerLabel": "spk_0",
      "start": 162.4,
      "end": 168,
      "text": " And I know for instance, even with things like Kubernetes, which it is a very complex piece of machinery when you run it in the cloud, you still have very good tooling to simulate all"
    },
    {
      "speakerLabel": "spk_0",
      "start": 168,
      "end": 173.12,
      "text": " that ecosystem in one machine as you are developing. So that's an interesting thing to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 173.12,
      "end": 179.28,
      "text": " start with. So yeah, we're trying to compare the serverless experience with monoliths,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 179.28,
      "end": 185.76,
      "text": " more traditional way and microservices using containers. I think that the first thing that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 185.76,
      "end": 191.68,
      "text": " comes to mind when thinking about what is the main difference between serverless and this kind of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 191.68,
      "end": 198.8,
      "text": " architecture is that the unit, that the level of granularity is much smaller with serverless"
    },
    {
      "speakerLabel": "spk_0",
      "start": 198.8,
      "end": 205.6,
      "text": " because you are generally thinking in terms of functions rather than services. Even though,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 205.6,
      "end": 210.48000000000002,
      "text": " yeah, you might argue that a set of function logically create a service, but when you are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 210.48000000000002,
      "end": 214.96,
      "text": " developing a specific capability, you are writing one particular function at the time."
    },
    {
      "speakerLabel": "spk_0",
      "start": 214.96,
      "end": 220.16,
      "text": " So the level of granularity is like it's immediately smaller and it's forcing you to think"
    },
    {
      "speakerLabel": "spk_0",
      "start": 220.16,
      "end": 226.32,
      "text": " differently about how to build that particular capability. And it's something you can see,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 226.32,
      "end": 230.4,
      "text": " for instance, even in terms of security, right? You are going to be able to write"
    },
    {
      "speakerLabel": "spk_0",
      "start": 230.4,
      "end": 236.96,
      "text": " one particular policy for a particular function that is extremely locked down only to the things"
    },
    {
      "speakerLabel": "spk_0",
      "start": 236.96,
      "end": 242,
      "text": " that that function is supposed to do, which is very hard to achieve in a bigger, more"
    },
    {
      "speakerLabel": "spk_0",
      "start": 242,
      "end": 248.72,
      "text": " monolithic application or even a microservice. Absolutely."
    },
    {
      "speakerLabel": "spk_1",
      "start": 248.72,
      "end": 253.35999999999999,
      "text": " It's a huge benefit and we might talk about that in more detail in a while, but it also brings a set of challenges then because"
    },
    {
      "speakerLabel": "spk_1",
      "start": 254,
      "end": 259.04,
      "text": " suddenly you have the kind of responsibility now to make sure that you've got minimal privilege"
    },
    {
      "speakerLabel": "spk_1",
      "start": 259.04,
      "end": 265.2,
      "text": " with every IAM policy you write. Yeah."
    },
    {
      "speakerLabel": "spk_0",
      "start": 265.2,
      "end": 271.12,
      "text": " And that's tricky because of course, we know the pain of writing IAM policies and it's very hard to get them right at the first try. So you generally go"
    },
    {
      "speakerLabel": "spk_0",
      "start": 271.12,
      "end": 278.72,
      "text": " by trial and error until it does what you want it to do. Exactly. Yeah. Unfortunately that is the case."
    },
    {
      "speakerLabel": "spk_1",
      "start": 278.72,
      "end": 284.48,
      "text": " Yeah. So I like the fact that you've got this much more fragmentation really."
    },
    {
      "speakerLabel": "spk_1",
      "start": 284.48,
      "end": 289.04,
      "text": " So you move to microservices, you had lots of small pieces with serverless. Generally, you have"
    },
    {
      "speakerLabel": "spk_1",
      "start": 289.04,
      "end": 295.04,
      "text": " many, many more pieces. They might be grouped together into services, but you're deploying lots"
    },
    {
      "speakerLabel": "spk_1",
      "start": 295.04,
      "end": 299.52,
      "text": " of individual pieces of code, but you're also deploying resources very freely."
    },
    {
      "speakerLabel": "spk_1",
      "start": 299.52,
      "end": 304.15999999999997,
      "text": " So I suppose before serverless, you deployed infrastructure and then you wrote code and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 304.15999999999997,
      "end": 310.56,
      "text": " deployed your code onto the infrastructure. But with serverless, that separation doesn't really"
    },
    {
      "speakerLabel": "spk_1",
      "start": 310.56,
      "end": 316.56,
      "text": " clearly exist anymore. You're deploying infrastructure and code together in many cases."
    },
    {
      "speakerLabel": "spk_1",
      "start": 316.56,
      "end": 322.79999999999995,
      "text": " You might have some base foundational resources that are more long-lived and you don't deploy"
    },
    {
      "speakerLabel": "spk_1",
      "start": 322.8,
      "end": 329.52000000000004,
      "text": " them every time, but you can deploy an SQS queue very easily, very dynamically. You can even create"
    },
    {
      "speakerLabel": "spk_1",
      "start": 329.52000000000004,
      "end": 335.12,
      "text": " them at runtime. So it's not just about how you get your code running. It's about how you get all"
    },
    {
      "speakerLabel": "spk_1",
      "start": 335.12,
      "end": 342.16,
      "text": " of those other little pieces that build up your architecture and how you get those, how you develop"
    },
    {
      "speakerLabel": "spk_1",
      "start": 342.16,
      "end": 348.88,
      "text": " with that mindset then. So I suppose one of the big things, the big elephant in the room sometimes"
    },
    {
      "speakerLabel": "spk_1",
      "start": 348.88,
      "end": 355.6,
      "text": " when it comes to serverless is local development. And when you've got a mix of code and AWS resources,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 356.88,
      "end": 362.15999999999997,
      "text": " each AWS resource is very complex in its own right. Can you simulate that locally? And is it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 362.15999999999997,
      "end": 367.36,
      "text": " worthwhile simulating that locally? It's the million dollar question. What's your opinion on it?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 372.08,
      "end": 377.76,
      "text": " Yeah, I don't know if I have a fully formed opinion yet, meaning that I've been working in some projects where somehow we managed to have a good enough local environment and everyone has"
    },
    {
      "speakerLabel": "spk_0",
      "start": 377.76,
      "end": 384.48,
      "text": " been happy with it. But in other cases it has been much more tricky and we ended up relying a lot more"
    },
    {
      "speakerLabel": "spk_0",
      "start": 384.48,
      "end": 390.8,
      "text": " on the real AWS environment running in the cloud, even for development. So while we change things"
    },
    {
      "speakerLabel": "spk_0",
      "start": 390.8,
      "end": 396.56,
      "text": " just to test our changes, we end up deploying and checking things in the real AWS environment."
    },
    {
      "speakerLabel": "spk_0",
      "start": 397.2,
      "end": 402.8,
      "text": " So I'm still a little bit conflicted on whether one way is better than the other. And I think it"
    },
    {
      "speakerLabel": "spk_0",
      "start": 402.8,
      "end": 409.04,
      "text": " depends probably on the complexity of the application, meaning are you using just few"
    },
    {
      "speakerLabel": "spk_0",
      "start": 409.04,
      "end": 415.28000000000003,
      "text": " simple AWS services or maybe you're using more advanced services and a mixture with many, many"
    },
    {
      "speakerLabel": "spk_0",
      "start": 415.28000000000003,
      "end": 421.52,
      "text": " different services. And I think also that depends on the tooling that is currently available."
    },
    {
      "speakerLabel": "spk_0",
      "start": 421.52,
      "end": 428,
      "text": " For instance, I used local stack, which is actually a very good tool that allows you to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 428,
      "end": 435.2,
      "text": " simulate many different AWS services locally. It runs in Docker, so you can easily run one or more"
    },
    {
      "speakerLabel": "spk_0",
      "start": 435.2,
      "end": 442.8,
      "text": " containers and use them to simulate, I don't know, S3, SQS are probably the most common ones,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 442.8,
      "end": 448.56,
      "text": " but you can simulate a range of different services. But it gets tricky, of course, when you are doing"
    },
    {
      "speakerLabel": "spk_0",
      "start": 448.56,
      "end": 454.72,
      "text": " more advanced things like EventBridge comes to mind, Step Functions comes to mind. And in those"
    },
    {
      "speakerLabel": "spk_0",
      "start": 454.72,
      "end": 463.28000000000003,
      "text": " cases, you get something very basic, but you don't get the level of accuracy that you might need,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 463.28000000000003,
      "end": 467.6,
      "text": " or that it might make you feel confident that what you're doing is actually going to work"
    },
    {
      "speakerLabel": "spk_0",
      "start": 467.6,
      "end": 474.24,
      "text": " in production. Yeah, I think that's really good point."
    },
    {
      "speakerLabel": "spk_1",
      "start": 474.24,
      "end": 479.28000000000003,
      "text": " I think local stack is great, as long as you know where the limits are and where you need to actually rely on the cloud. So"
    },
    {
      "speakerLabel": "spk_1",
      "start": 479.28,
      "end": 485.11999999999995,
      "text": " don't over rely on it and assume that it's a drop in replacement for AWS. Of course it isn't,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 485.11999999999995,
      "end": 490.88,
      "text": " and it never will be, but it can help you in certain cases if you want to have really fast"
    },
    {
      "speakerLabel": "spk_1",
      "start": 490.88,
      "end": 495.91999999999996,
      "text": " feedback in a local developer environment. There are some places where it does really well."
    },
    {
      "speakerLabel": "spk_1",
      "start": 496.88,
      "end": 504.64,
      "text": " If you need a local S3, then yeah, it'll work with the limitations. So it can help to optimize"
    },
    {
      "speakerLabel": "spk_1",
      "start": 504.64,
      "end": 508.71999999999997,
      "text": " your developer workflow, but it's not going to replace ultimately the cloud. You need to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 508.72,
      "end": 514.5600000000001,
      "text": " test your code in the cloud as quickly as possible. Question is, how satisfied are you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 514.5600000000001,
      "end": 521.6800000000001,
      "text": " with deploying to the cloud every time you make a code change? So what is your developer flow?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 522.24,
      "end": 528.24,
      "text": " How fast do you want your developer feedback loop to be? And when do you go from working"
    },
    {
      "speakerLabel": "spk_1",
      "start": 528.24,
      "end": 534.24,
      "text": " in local mode to working in cloud mode? And there's a lot of different factors at play there."
    },
    {
      "speakerLabel": "spk_1",
      "start": 534.24,
      "end": 539.6,
      "text": " It depends on a lot of things, including your internet connection. I've had that experience"
    },
    {
      "speakerLabel": "spk_1",
      "start": 539.6,
      "end": 544,
      "text": " where developing on a slow internet connection and deploying a cloud formation stack and even"
    },
    {
      "speakerLabel": "spk_1",
      "start": 544,
      "end": 549.6800000000001,
      "text": " uploading it was a bottleneck. So if you're working with a gigabit connection all the time"
    },
    {
      "speakerLabel": "spk_1",
      "start": 549.6800000000001,
      "end": 553.36,
      "text": " and that's not a problem, then that's good for you, but it's not like that for everybody. So"
    },
    {
      "speakerLabel": "spk_1",
      "start": 554.24,
      "end": 557.36,
      "text": " the tooling has to be broadly applicable if it's going to really be successful."
    },
    {
      "speakerLabel": "spk_1",
      "start": 558,
      "end": 563.36,
      "text": " Absolutely. That's a great point."
    },
    {
      "speakerLabel": "spk_0",
      "start": 563.36,
      "end": 570.08,
      "text": " Is there any other tool that you know, aside from local stack for trying to get something locally or maybe to simplify the developer experience in"
    },
    {
      "speakerLabel": "spk_0",
      "start": 570.08,
      "end": 577.6800000000001,
      "text": " general? Yeah, there are a lot of options and there's a growing set of options."
    },
    {
      "speakerLabel": "spk_1",
      "start": 577.6800000000001,
      "end": 581.76,
      "text": " So for a long time I've been using serverless offline when using the serverless framework successfully."
    },
    {
      "speakerLabel": "spk_1",
      "start": 582.32,
      "end": 589.44,
      "text": " And if you've got like a traditional API stack with Lambda behind it, maybe DynamoDB behind it,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 589.44,
      "end": 596.8800000000001,
      "text": " you can run all of that locally with reasonable results, pretty good results. It can start to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 596.8800000000001,
      "end": 599.84,
      "text": " break down a little bit when you've got other triggers. If you're triggering from the event"
    },
    {
      "speakerLabel": "spk_1",
      "start": 599.84,
      "end": 605.5200000000001,
      "text": " bridge or SQS or SNS, then you need, this is where it gets a little bit more complicated."
    },
    {
      "speakerLabel": "spk_1",
      "start": 605.5200000000001,
      "end": 613.5200000000001,
      "text": " You've also got SAM local, which is also pretty good. Probably even more robust than serverless"
    },
    {
      "speakerLabel": "spk_1",
      "start": 613.52,
      "end": 622.16,
      "text": " offline because it's, I guess, built in support by AWS and also uses Docker by default to give"
    },
    {
      "speakerLabel": "spk_1",
      "start": 622.16,
      "end": 628.0799999999999,
      "text": " you more of an isolated runtime. So that's good. And then you've got some of these new tools that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 628.0799999999999,
      "end": 634.96,
      "text": " are coming out like SST, we were discussing earlier, right? There are some third parties"
    },
    {
      "speakerLabel": "spk_1",
      "start": 634.96,
      "end": 640.48,
      "text": " which are really kind of pushing the boundaries and trying to make local development and the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 640.48,
      "end": 644.5600000000001,
      "text": " bridge between local and cloud development a little bit more seamless, letting you do"
    },
    {
      "speakerLabel": "spk_1",
      "start": 644.5600000000001,
      "end": 647.6800000000001,
      "text": " kind of local troubleshooting. So what do you think?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 647.6800000000001,
      "end": 654.16,
      "text": " Yeah."
    },
    {
      "speakerLabel": "spk_0",
      "start": 654.16,
      "end": 660.88,
      "text": " And it's interesting that I haven't tried SST yet, but it seems that they are promoting more this idea that if you could get your code faster to the cloud, then maybe the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 660.88,
      "end": 666.4,
      "text": " cloud becomes your development environment. And I think this is maybe the big question."
    },
    {
      "speakerLabel": "spk_0",
      "start": 666.4,
      "end": 673.4399999999999,
      "text": " The big question, is this going to become a reality or it's just because we cannot"
    },
    {
      "speakerLabel": "spk_0",
      "start": 673.4399999999999,
      "end": 678.9599999999999,
      "text": " simulate everything locally, this is the only approach we could reasonably take. So I don't"
    },
    {
      "speakerLabel": "spk_0",
      "start": 678.9599999999999,
      "end": 683.52,
      "text": " know, again, what is the real answer, but it's interesting to see that there is a push even from"
    },
    {
      "speakerLabel": "spk_0",
      "start": 683.52,
      "end": 690.48,
      "text": " AWS itself to say, yeah, you can do things locally, but the real environment is the cloud. So try to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 690.48,
      "end": 698.4,
      "text": " do as much as possible in the cloud straight away. And that hybrid approach, I think is still a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 698.4,
      "end": 703.9200000000001,
      "text": " reality for most of the cases where maybe you are still running your code locally, but your code"
    },
    {
      "speakerLabel": "spk_0",
      "start": 704.5600000000001,
      "end": 709.6,
      "text": " reaches out to services that are already available in AWS, like, I don't know, read a table in Dynamo"
    },
    {
      "speakerLabel": "spk_0",
      "start": 709.6,
      "end": 715.04,
      "text": " DB or write a message in IQ or send an SNS notification. You can definitely do all these"
    },
    {
      "speakerLabel": "spk_0",
      "start": 715.04,
      "end": 722.7199999999999,
      "text": " things from the code running locally. So you get more or less something that is trustable enough"
    },
    {
      "speakerLabel": "spk_0",
      "start": 722.7199999999999,
      "end": 731.04,
      "text": " at the end of the day as you change your code. So, yeah, I don't know. Do we want to do some"
    },
    {
      "speakerLabel": "spk_0",
      "start": 731.04,
      "end": 736.4,
      "text": " final remarks of what do we think is good and what do we think is bad right now?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 738.56,
      "end": 742.64,
      "text": " Yeah, that's a good idea. Maybe it sounds like we've taken a kind of a negative view."
    },
    {
      "speakerLabel": "spk_1",
      "start": 742.64,
      "end": 749.6,
      "text": " I mean, it is, I think, let's face facts, we're serverless advocates, but the tooling is immature compared"
    },
    {
      "speakerLabel": "spk_1",
      "start": 749.6,
      "end": 756,
      "text": " to container-based development. That's my view on it. And I think that's fine as long as you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 756,
      "end": 759.84,
      "text": " understand that and understand the limitations and the workarounds and keep an eye out for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 759.84,
      "end": 765.28,
      "text": " improvements there because there's the number of benefits outweigh these disadvantages in my view."
    },
    {
      "speakerLabel": "spk_1",
      "start": 766.72,
      "end": 770.56,
      "text": " If you've got a good approach to constantly improving your development environment,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 770.56,
      "end": 775.4399999999999,
      "text": " you can live with these limitations. But I think there's a lot of scope for good improvement as"
    },
    {
      "speakerLabel": "spk_1",
      "start": 775.4399999999999,
      "end": 783.1999999999999,
      "text": " well. So what do you think could be better?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 783.1999999999999,
      "end": 790.9599999999999,
      "text": " Yeah, I think what can be better, as we said, is the ability to be able to push code faster. And we have seen before and during re-invent"
    },
    {
      "speakerLabel": "spk_0",
      "start": 790.9599999999999,
      "end": 797.52,
      "text": " a number of promising initiatives from AWS. For instance, I remember we discussed some accelerate"
    },
    {
      "speakerLabel": "spk_0",
      "start": 797.52,
      "end": 803.28,
      "text": " or also some sync, sometimes it's referred to, which should allow you to be able to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 804.4,
      "end": 809.92,
      "text": " synchronize the code in your Lambda if you're using some, like straight away. As you do a change,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 809.92,
      "end": 814.88,
      "text": " there is probably like a watching mechanism that will automatically publish your code without you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 814.88,
      "end": 820.4,
      "text": " having to invoke a separate command which triggers cloud formation and so on. So that should give you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 821.4399999999999,
      "end": 825.68,
      "text": " a better way of just changing your code and seeing the changes straight away."
    },
    {
      "speakerLabel": "spk_0",
      "start": 825.68,
      "end": 831.12,
      "text": " And similarly, I think there is something called CDK-Otswap. If I understand correctly,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 831.12,
      "end": 837.8399999999999,
      "text": " it will work with CDK and it will allow you to update Lambdas, but also ECS, code inside"
    },
    {
      "speakerLabel": "spk_0",
      "start": 837.8399999999999,
      "end": 846,
      "text": " ECS containers, and also step functions, state machines, definition. And as far as I understand,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 846,
      "end": 851.92,
      "text": " that doesn't use cloud formation. So that's probably why you get a much faster feedback."
    },
    {
      "speakerLabel": "spk_0",
      "start": 851.92,
      "end": 856.88,
      "text": " Probably you don't get rollbacks and all the other things that cloud formation gives you,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 856.88,
      "end": 861.52,
      "text": " but for development is probably fine. Yeah. I mean, that's what it's about."
    },
    {
      "speakerLabel": "spk_1",
      "start": 861.52,
      "end": 866.4,
      "text": " It's not about making your production deployment faster because that needs to be safe and predictable using cloud"
    },
    {
      "speakerLabel": "spk_1",
      "start": 866.4,
      "end": 873.28,
      "text": " formation, but it's about just getting code up to AWS faster and running it faster. Of course,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 874,
      "end": 878.4,
      "text": " we said at the start that serverless applications aren't just about the code. They're about all"
    },
    {
      "speakerLabel": "spk_1",
      "start": 878.4,
      "end": 882.88,
      "text": " those other resources that comprise your architecture. So that's one of the things"
    },
    {
      "speakerLabel": "spk_1",
      "start": 882.88,
      "end": 890.64,
      "text": " that can slow you down and could be improved. If you want to deploy a new queue, we create"
    },
    {
      "speakerLabel": "spk_1",
      "start": 890.64,
      "end": 897.68,
      "text": " and destroy AWS resources all the time when we're in development mode on AWS with serverless"
    },
    {
      "speakerLabel": "spk_1",
      "start": 897.68,
      "end": 902.56,
      "text": " applications. So how can you make that faster? If cloud formation was orders of magnitude faster,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 902.56,
      "end": 909.8399999999999,
      "text": " that would make the developer experience instantly way, way better. And it can be a bottleneck."
    },
    {
      "speakerLabel": "spk_1",
      "start": 910.4,
      "end": 915.1999999999999,
      "text": " You also mentioned security, Luciano, getting your permissions right. When you're in that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 915.1999999999999,
      "end": 921.04,
      "text": " phase of development where you're constantly tweaking IAM policies, what's the best way"
    },
    {
      "speakerLabel": "spk_1",
      "start": 921.04,
      "end": 924.9599999999999,
      "text": " to do that? Are you updating the policy programmatically? Are you using the console"
    },
    {
      "speakerLabel": "spk_1",
      "start": 924.9599999999999,
      "end": 929.1199999999999,
      "text": " to update your policy? If you're using cloud formation every time, you have to wait for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 929.12,
      "end": 933.6,
      "text": " the stack to update before you can test every version of the policy. So improve tooling around"
    },
    {
      "speakerLabel": "spk_1",
      "start": 933.6,
      "end": 939.12,
      "text": " that and maybe better predictive generation of policies and validation of policies."
    },
    {
      "speakerLabel": "spk_1",
      "start": 939.12,
      "end": 944,
      "text": " Some intelligence in there would go a long way to improving the developer experience. I really"
    },
    {
      "speakerLabel": "spk_1",
      "start": 944,
      "end": 952.32,
      "text": " think so. I absolutely agree. I think that this is all we have for this episode."
    },
    {
      "speakerLabel": "spk_0",
      "start": 952.32,
      "end": 957.28,
      "text": " And I'm really curious to know what you all think about this and what are you doing today to build your"
    },
    {
      "speakerLabel": "spk_0",
      "start": 957.28,
      "end": 962.8,
      "text": " serverless applications. If you found any sweet spot that works well for you, we are really"
    },
    {
      "speakerLabel": "spk_0",
      "start": 962.8,
      "end": 968.3199999999999,
      "text": " curious to know about that. So definitely share your experience with us. And please"
    },
    {
      "speakerLabel": "spk_0",
      "start": 968.3199999999999,
      "end": 972.88,
      "text": " remember to follow us and subscribe so you can be notified the next time we publish an"
    },
    {
      "speakerLabel": "spk_0",
      "start": 972.88,
      "end": 987.76,
      "text": " episode, which is generally every Friday. So we'll see you next time. Bye."
    }
  ]
}