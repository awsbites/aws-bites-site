{
  "speakers": {
    "spk_0": "spk_0",
    "spk_1": "spk_1"
  },
  "segments": [
    {
      "speakerLabel": "spk_0",
      "start": 0,
      "end": 2.88,
      "text": " Hello, today we're going to answer the question,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 2.88,
      "end": 5.44,
      "text": " what services should they use for events?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 5.44,
      "end": 8.120000000000001,
      "text": " And we are going to cover in which context"
    },
    {
      "speakerLabel": "spk_0",
      "start": 8.120000000000001,
      "end": 10.6,
      "text": " is convenient to use messages and events."
    },
    {
      "speakerLabel": "spk_0",
      "start": 10.6,
      "end": 13.4,
      "text": " What are the major services available in AWS"
    },
    {
      "speakerLabel": "spk_0",
      "start": 13.4,
      "end": 15.16,
      "text": " for these particular cases?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 15.16,
      "end": 18.46,
      "text": " And then we are going to basically discussing"
    },
    {
      "speakerLabel": "spk_0",
      "start": 18.46,
      "end": 20.32,
      "text": " all the services at high level,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 20.32,
      "end": 23.62,
      "text": " what are the major features and some of the examples."
    },
    {
      "speakerLabel": "spk_0",
      "start": 23.62,
      "end": 26.2,
      "text": " My name is Luciano and today I'm joined by Eoin"
    },
    {
      "speakerLabel": "spk_0",
      "start": 26.2,
      "end": 28.560000000000002,
      "text": " and this is AWS Bites podcast."
    },
    {
      "speakerLabel": "spk_0",
      "start": 28.56,
      "end": 39.76,
      "text": " Okay, so Eoin, do you want to start by giving us an idea"
    },
    {
      "speakerLabel": "spk_0",
      "start": 39.76,
      "end": 43.56,
      "text": " of contexts and use cases where it might make sense"
    },
    {
      "speakerLabel": "spk_0",
      "start": 43.56,
      "end": 50.879999999999995,
      "text": " to use a message passing or AWS services related to that?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 50.879999999999995,
      "end": 53.4,
      "text": " Yeah, there's a lot to cover here."
    },
    {
      "speakerLabel": "spk_1",
      "start": 53.4,
      "end": 56.76,
      "text": " And I suppose we're talking about asynchronous communication"
    },
    {
      "speakerLabel": "spk_1",
      "start": 56.76,
      "end": 59.72,
      "text": " between services or components or systems."
    },
    {
      "speakerLabel": "spk_1",
      "start": 59.72,
      "end": 61.28,
      "text": " There's a lot of things you can do"
    },
    {
      "speakerLabel": "spk_1",
      "start": 61.28,
      "end": 63.32,
      "text": " with all of these services,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 63.32,
      "end": 65.56,
      "text": " but we might be talking about integrations"
    },
    {
      "speakerLabel": "spk_1",
      "start": 65.56,
      "end": 67.12,
      "text": " between two different systems,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 67.12,
      "end": 70.06,
      "text": " just communication between microservices"
    },
    {
      "speakerLabel": "spk_1",
      "start": 70.06,
      "end": 72.46,
      "text": " and event-driven serverless architectures,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 72.46,
      "end": 75.68,
      "text": " which are really exciting when you look at what you can do"
    },
    {
      "speakerLabel": "spk_1",
      "start": 75.68,
      "end": 78.25999999999999,
      "text": " with things like Lambda and all these services."
    },
    {
      "speakerLabel": "spk_1",
      "start": 78.25999999999999,
      "end": 81.5,
      "text": " Yeah, so I think we've got,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 81.5,
      "end": 82.66,
      "text": " there's a lot of things we could cover."
    },
    {
      "speakerLabel": "spk_1",
      "start": 82.66,
      "end": 85.84,
      "text": " We're going to cover the five different services,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 85.84,
      "end": 90.24000000000001,
      "text": " SQS, SNS, EventBridge, and then Kinesis,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 90.24000000000001,
      "end": 95.96000000000001,
      "text": " but also Kafka, managed streaming for Kafka, MSK."
    },
    {
      "speakerLabel": "spk_1",
      "start": 95.96000000000001,
      "end": 98.9,
      "text": " So should we start with SQS,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 98.9,
      "end": 102.84,
      "text": " given that it's, I think, the oldest AWS service,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 102.84,
      "end": 106.2,
      "text": " what would you use SQS for?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 106.2,
      "end": 110.9,
      "text": " Yeah, I suppose one first good way of seeing all the services"
    },
    {
      "speakerLabel": "spk_0",
      "start": 110.9,
      "end": 112.68,
      "text": " is trying to understand like high level,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 112.68,
      "end": 114.10000000000001,
      "text": " what are the categories?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 114.1,
      "end": 116.52,
      "text": " For instance, talking about SQS,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 116.52,
      "end": 119.64,
      "text": " I will say that SQS is more like point-to-point"
    },
    {
      "speakerLabel": "spk_0",
      "start": 119.64,
      "end": 121.39999999999999,
      "text": " type of communication."
    },
    {
      "speakerLabel": "spk_0",
      "start": 121.39999999999999,
      "end": 125.5,
      "text": " You generally have one producer that is creating tasks"
    },
    {
      "speakerLabel": "spk_0",
      "start": 125.5,
      "end": 127.53999999999999,
      "text": " or task definition, job definition,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 127.53999999999999,
      "end": 129.12,
      "text": " whatever we want to call them."
    },
    {
      "speakerLabel": "spk_0",
      "start": 129.12,
      "end": 130.56,
      "text": " They are stored in a queue."
    },
    {
      "speakerLabel": "spk_0",
      "start": 130.56,
      "end": 133.51999999999998,
      "text": " So this idea that you push things from one side"
    },
    {
      "speakerLabel": "spk_0",
      "start": 133.51999999999998,
      "end": 135.72,
      "text": " and you consume them from another."
    },
    {
      "speakerLabel": "spk_0",
      "start": 135.72,
      "end": 139.44,
      "text": " And generally you have one consumer"
    },
    {
      "speakerLabel": "spk_0",
      "start": 139.44,
      "end": 141.88,
      "text": " or a group of consumers,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 141.88,
      "end": 144.92,
      "text": " but they are kind of consuming the same type of tasks."
    },
    {
      "speakerLabel": "spk_0",
      "start": 144.92,
      "end": 145.88,
      "text": " Yeah."
    },
    {
      "speakerLabel": "spk_0",
      "start": 145.88,
      "end": 148.24,
      "text": " So you generally would say that it's like one producer,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 148.24,
      "end": 151.16,
      "text": " one consumer type of configuration when you use SQS."
    },
    {
      "speakerLabel": "spk_0",
      "start": 151.16,
      "end": 152.35999999999999,
      "text": " For any usage, yeah."
    },
    {
      "speakerLabel": "spk_1",
      "start": 152.35999999999999,
      "end": 153.2,
      "text": " Yeah."
    },
    {
      "speakerLabel": "spk_0",
      "start": 154.6,
      "end": 158.51999999999998,
      "text": " While in comparison, we have something that is more PubSub,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 158.51999999999998,
      "end": 160.88,
      "text": " publish and subscribe event,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 160.88,
      "end": 164.92,
      "text": " and I would probably put SNS and EventBridge in that bucket."
    },
    {
      "speakerLabel": "spk_0",
      "start": 164.92,
      "end": 166.74,
      "text": " And the reason is that with PubSub,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 166.74,
      "end": 169.12,
      "text": " you generally have, again, one producer,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 169.12,
      "end": 171.92000000000002,
      "text": " but on the other end, you might have from zero"
    },
    {
      "speakerLabel": "spk_0",
      "start": 171.92000000000002,
      "end": 173.4,
      "text": " to many consumers."
    },
    {
      "speakerLabel": "spk_0",
      "start": 173.4,
      "end": 175.52,
      "text": " Like you are just saying, this is happening."
    },
    {
      "speakerLabel": "spk_0",
      "start": 175.52,
      "end": 177.48000000000002,
      "text": " This is the definition of an event."
    },
    {
      "speakerLabel": "spk_0",
      "start": 177.48000000000002,
      "end": 179.16,
      "text": " Nobody might listen to it."
    },
    {
      "speakerLabel": "spk_0",
      "start": 179.16,
      "end": 181.28,
      "text": " So the event just phase away,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 181.28,
      "end": 184.92000000000002,
      "text": " or you might have one or more consumer actually reacting"
    },
    {
      "speakerLabel": "spk_0",
      "start": 184.92000000000002,
      "end": 186.88,
      "text": " to that particular event."
    },
    {
      "speakerLabel": "spk_0",
      "start": 186.88,
      "end": 190.68,
      "text": " And then the other case or group, if you want,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 190.68,
      "end": 194.44,
      "text": " is a more streaming based use case."
    },
    {
      "speakerLabel": "spk_0",
      "start": 194.44,
      "end": 197.62,
      "text": " And this is where I will put Kinesis or MSK."
    },
    {
      "speakerLabel": "spk_0",
      "start": 197.62,
      "end": 201.76,
      "text": " Again, you have one producers, zero to many consumers."
    },
    {
      "speakerLabel": "spk_0",
      "start": 201.76,
      "end": 204.44,
      "text": " The difference that messages are,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 204.44,
      "end": 206.4,
      "text": " I would say somewhat more important"
    },
    {
      "speakerLabel": "spk_0",
      "start": 206.4,
      "end": 209.44,
      "text": " because they are persisted and they're kept around,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 209.44,
      "end": 211.1,
      "text": " and that gives you more features."
    },
    {
      "speakerLabel": "spk_0",
      "start": 211.1,
      "end": 212.84,
      "text": " For instance, you can replay them."
    },
    {
      "speakerLabel": "spk_0",
      "start": 214.88,
      "end": 218.76,
      "text": " And also generally streaming as higher throughput."
    },
    {
      "speakerLabel": "spk_0",
      "start": 218.76,
      "end": 223.6,
      "text": " So definitely a good candidate for Kinesis or MSKs"
    },
    {
      "speakerLabel": "spk_0",
      "start": 223.6,
      "end": 227.28,
      "text": " when you are really processing high throughput data"
    },
    {
      "speakerLabel": "spk_0",
      "start": 227.28,
      "end": 230.32,
      "text": " and you need to do like real time operations"
    },
    {
      "speakerLabel": "spk_0",
      "start": 230.32,
      "end": 232.52,
      "text": " on the incoming data."
    },
    {
      "speakerLabel": "spk_1",
      "start": 232.52,
      "end": 233.48,
      "text": " That makes a lot of sense."
    },
    {
      "speakerLabel": "spk_1",
      "start": 233.48,
      "end": 237.12,
      "text": " Yeah, so should we start with SQS first then"
    },
    {
      "speakerLabel": "spk_1",
      "start": 237.12,
      "end": 238.72,
      "text": " and think about some of the use cases"
    },
    {
      "speakerLabel": "spk_1",
      "start": 238.72,
      "end": 239.8,
      "text": " and where would you use it?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 239.8,
      "end": 240.72,
      "text": " What do you think?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 242.24,
      "end": 246.44,
      "text": " Yeah, so in general, I will use SQS in all those situations"
    },
    {
      "speakerLabel": "spk_0",
      "start": 246.44,
      "end": 249.24,
      "text": " where I want to make a system more resilient"
    },
    {
      "speakerLabel": "spk_0",
      "start": 249.24,
      "end": 251.36,
      "text": " because you can just put a queue"
    },
    {
      "speakerLabel": "spk_0",
      "start": 251.36,
      "end": 253.88,
      "text": " between a particular operation."
    },
    {
      "speakerLabel": "spk_0",
      "start": 253.88,
      "end": 256.34000000000003,
      "text": " So whenever you receive the input"
    },
    {
      "speakerLabel": "spk_0",
      "start": 256.34,
      "end": 258.03999999999996,
      "text": " and where you are producing your output,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 258.03999999999996,
      "end": 259.7,
      "text": " if you put a queue in between,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 259.7,
      "end": 262.35999999999996,
      "text": " then that gives you the ability of first of all,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 262.35999999999996,
      "end": 264.44,
      "text": " persisting all that input,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 264.44,
      "end": 268.96,
      "text": " then decoupling that the collection of the input"
    },
    {
      "speakerLabel": "spk_0",
      "start": 268.96,
      "end": 272.44,
      "text": " from actually doing the work to produce the output."
    },
    {
      "speakerLabel": "spk_0",
      "start": 272.44,
      "end": 274.44,
      "text": " And with that, you get a lot of features like,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 274.44,
      "end": 277.79999999999995,
      "text": " I don't know, if something fails, you can easily retry it."
    },
    {
      "speakerLabel": "spk_0",
      "start": 277.79999999999995,
      "end": 280,
      "text": " And you create that letter queue."
    },
    {
      "speakerLabel": "spk_0",
      "start": 280,
      "end": 282.9,
      "text": " If you are actually unable, you retry it multiple times"
    },
    {
      "speakerLabel": "spk_0",
      "start": 282.9,
      "end": 285.21999999999997,
      "text": " and you are still failing, you can save it."
    },
    {
      "speakerLabel": "spk_0",
      "start": 285.22,
      "end": 288.1,
      "text": " And somebody can analyze it manually,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 288.1,
      "end": 289.72,
      "text": " figure out what went wrong."
    },
    {
      "speakerLabel": "spk_0",
      "start": 289.72,
      "end": 291.64000000000004,
      "text": " And then from that letter queue,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 291.64000000000004,
      "end": 295.56,
      "text": " maybe you can re-ingest the message and execute it again"
    },
    {
      "speakerLabel": "spk_0",
      "start": 295.56,
      "end": 297.76000000000005,
      "text": " after you realize what was going wrong."
    },
    {
      "speakerLabel": "spk_0",
      "start": 297.76000000000005,
      "end": 300.92,
      "text": " So that's generally a good use case for SQS,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 300.92,
      "end": 302.88000000000005,
      "text": " but it can also help for performance."
    },
    {
      "speakerLabel": "spk_0",
      "start": 302.88000000000005,
      "end": 305.40000000000003,
      "text": " For instance, you can use a queue"
    },
    {
      "speakerLabel": "spk_0",
      "start": 305.40000000000003,
      "end": 308.16,
      "text": " for every single action in a system"
    },
    {
      "speakerLabel": "spk_0",
      "start": 308.16,
      "end": 310.96000000000004,
      "text": " where maybe you are receiving a user request,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 310.96000000000004,
      "end": 312.28000000000003,
      "text": " you need to do some actions,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 312.28000000000003,
      "end": 314.14000000000004,
      "text": " but those actions can be postponed."
    },
    {
      "speakerLabel": "spk_0",
      "start": 314.14,
      "end": 317.76,
      "text": " You don't need to do them right now just to answer,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 317.76,
      "end": 319.58,
      "text": " to produce a response for the user."
    },
    {
      "speakerLabel": "spk_0",
      "start": 321.59999999999997,
      "end": 325.03999999999996,
      "text": " Just few examples, very common ones."
    },
    {
      "speakerLabel": "spk_0",
      "start": 325.03999999999996,
      "end": 328.8,
      "text": " A user does something, you need to send a confirmation email."
    },
    {
      "speakerLabel": "spk_0",
      "start": 328.8,
      "end": 332.03999999999996,
      "text": " You don't need to do that in line in the user request."
    },
    {
      "speakerLabel": "spk_0",
      "start": 332.03999999999996,
      "end": 333.68,
      "text": " You can just save it to a queue"
    },
    {
      "speakerLabel": "spk_0",
      "start": 333.68,
      "end": 335.56,
      "text": " and a background process can pick it up"
    },
    {
      "speakerLabel": "spk_0",
      "start": 335.56,
      "end": 337.15999999999997,
      "text": " and actually send the email."
    },
    {
      "speakerLabel": "spk_0",
      "start": 337.15999999999997,
      "end": 340.18,
      "text": " Very similarly, a user is uploading a picture,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 340.18,
      "end": 341.84,
      "text": " you need to resize it."
    },
    {
      "speakerLabel": "spk_0",
      "start": 341.84,
      "end": 344.84,
      "text": " You don't need to let the user wait in line"
    },
    {
      "speakerLabel": "spk_0",
      "start": 344.84,
      "end": 346.26,
      "text": " while you are resizing the pictures."
    },
    {
      "speakerLabel": "spk_0",
      "start": 346.26,
      "end": 349.11999999999995,
      "text": " You can just say, okay, the picture was received"
    },
    {
      "speakerLabel": "spk_0",
      "start": 349.11999999999995,
      "end": 350.64,
      "text": " and you can do all the resizing"
    },
    {
      "speakerLabel": "spk_0",
      "start": 350.64,
      "end": 352.15999999999997,
      "text": " in the background using a queue."
    },
    {
      "speakerLabel": "spk_0",
      "start": 353.14,
      "end": 355.41999999999996,
      "text": " Anything else worth adding?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 356.71999999999997,
      "end": 358.08,
      "text": " I think that really covers it very well."
    },
    {
      "speakerLabel": "spk_1",
      "start": 358.08,
      "end": 360.52,
      "text": " Like if you imagine at a very simple level,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 360.52,
      "end": 362.59999999999997,
      "text": " if you've got a synchronous request"
    },
    {
      "speakerLabel": "spk_1",
      "start": 362.59999999999997,
      "end": 364.05999999999995,
      "text": " processing flow right now,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 364.05999999999995,
      "end": 366,
      "text": " if you want to add resilience to that,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 366,
      "end": 367.35999999999996,
      "text": " just put a queue in the middle."
    },
    {
      "speakerLabel": "spk_1",
      "start": 367.35999999999996,
      "end": 369.55999999999995,
      "text": " And that's a good first step"
    },
    {
      "speakerLabel": "spk_1",
      "start": 369.56,
      "end": 372.08,
      "text": " to making your architecture more resilient"
    },
    {
      "speakerLabel": "spk_1",
      "start": 372.08,
      "end": 373.08,
      "text": " and more performant."
    },
    {
      "speakerLabel": "spk_0",
      "start": 374.44,
      "end": 375.64,
      "text": " Yeah."
    },
    {
      "speakerLabel": "spk_0",
      "start": 375.64,
      "end": 378.86,
      "text": " Do you want to move to SNS then?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 378.86,
      "end": 379.7,
      "text": " Yeah, yeah."
    },
    {
      "speakerLabel": "spk_1",
      "start": 379.7,
      "end": 383.32,
      "text": " So SNS is, back to the categorization,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 383.32,
      "end": 385.32,
      "text": " it's a pub sub mechanisms."
    },
    {
      "speakerLabel": "spk_1",
      "start": 385.32,
      "end": 388.24,
      "text": " So instead of having a point to point thing like SQS"
    },
    {
      "speakerLabel": "spk_1",
      "start": 388.24,
      "end": 390.92,
      "text": " where you typically have each message being processed"
    },
    {
      "speakerLabel": "spk_1",
      "start": 390.92,
      "end": 393.6,
      "text": " by one consumer, with SNS,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 393.6,
      "end": 396.66,
      "text": " you want to target multiple subscribers."
    },
    {
      "speakerLabel": "spk_1",
      "start": 396.66,
      "end": 400.20000000000005,
      "text": " So a subscriber could be something like a Lambda function."
    },
    {
      "speakerLabel": "spk_1",
      "start": 400.20000000000005,
      "end": 403.20000000000005,
      "text": " It could be one of the other things that SNS supports"
    },
    {
      "speakerLabel": "spk_1",
      "start": 403.20000000000005,
      "end": 406.04,
      "text": " like email and SMS messages."
    },
    {
      "speakerLabel": "spk_1",
      "start": 406.04,
      "end": 408.16,
      "text": " That's how it's kind of got started."
    },
    {
      "speakerLabel": "spk_1",
      "start": 409.44000000000005,
      "end": 410.92,
      "text": " But it's essentially when you want to be able"
    },
    {
      "speakerLabel": "spk_1",
      "start": 410.92,
      "end": 413.84000000000003,
      "text": " to publish something and have other systems react,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 413.84000000000003,
      "end": 415,
      "text": " but you don't necessarily know"
    },
    {
      "speakerLabel": "spk_1",
      "start": 415,
      "end": 417.04,
      "text": " what those other systems are in advance."
    },
    {
      "speakerLabel": "spk_1",
      "start": 417.96000000000004,
      "end": 420.40000000000003,
      "text": " You can anticipate multiple potential subscribers"
    },
    {
      "speakerLabel": "spk_1",
      "start": 420.40000000000003,
      "end": 421.56,
      "text": " in the future."
    },
    {
      "speakerLabel": "spk_1",
      "start": 421.56,
      "end": 424.32000000000005,
      "text": " So the thing about SNS is that you need to create"
    },
    {
      "speakerLabel": "spk_1",
      "start": 424.32000000000005,
      "end": 425.32000000000005,
      "text": " a couple of resources."
    },
    {
      "speakerLabel": "spk_1",
      "start": 425.32,
      "end": 427.76,
      "text": " You need to create both the topic resource"
    },
    {
      "speakerLabel": "spk_1",
      "start": 427.76,
      "end": 430.04,
      "text": " and then you need to create one or more subscription"
    },
    {
      "speakerLabel": "spk_1",
      "start": 430.04,
      "end": 432.34,
      "text": " resources in order for messages to flow."
    },
    {
      "speakerLabel": "spk_1",
      "start": 434,
      "end": 437.64,
      "text": " And it's also not inherently resilient."
    },
    {
      "speakerLabel": "spk_1",
      "start": 437.64,
      "end": 441.64,
      "text": " So SNS, if you want your messages to be stored,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 441.64,
      "end": 444.8,
      "text": " you would typically have an SQS subscriber"
    },
    {
      "speakerLabel": "spk_1",
      "start": 444.8,
      "end": 448.34,
      "text": " and then have your subscriber action for actually react"
    },
    {
      "speakerLabel": "spk_1",
      "start": 448.34,
      "end": 450.68,
      "text": " to the queue rather than the topic directly."
    },
    {
      "speakerLabel": "spk_1",
      "start": 450.68,
      "end": 454.14,
      "text": " And that's very typical way of doing a fan out with SNS"
    },
    {
      "speakerLabel": "spk_1",
      "start": 454.14,
      "end": 457.2,
      "text": " and then multiple SQS queues at the end."
    },
    {
      "speakerLabel": "spk_1",
      "start": 457.2,
      "end": 459.03999999999996,
      "text": " So the examples where you'd use them, I think,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 459.03999999999996,
      "end": 461.52,
      "text": " are in a microservices architecture,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 461.52,
      "end": 464.02,
      "text": " if you want to communicate events between domains."
    },
    {
      "speakerLabel": "spk_1",
      "start": 465.52,
      "end": 468.64,
      "text": " I suppose, if you imagine an e-commerce application"
    },
    {
      "speakerLabel": "spk_1",
      "start": 468.64,
      "end": 470.8,
      "text": " with multiple microservices,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 470.8,
      "end": 473.24,
      "text": " and let's say you've got an order service"
    },
    {
      "speakerLabel": "spk_1",
      "start": 473.24,
      "end": 477.47999999999996,
      "text": " and an order is created following a web request,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 477.47999999999996,
      "end": 479.52,
      "text": " then you might have an analytic service"
    },
    {
      "speakerLabel": "spk_1",
      "start": 479.52,
      "end": 481.44,
      "text": " that picks up that order event and stores it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 481.44,
      "end": 484.8,
      "text": " in the data warehouse to do some analytics"
    },
    {
      "speakerLabel": "spk_1",
      "start": 484.8,
      "end": 487.08,
      "text": " or ETL downstream."
    },
    {
      "speakerLabel": "spk_1",
      "start": 487.08,
      "end": 488.32,
      "text": " Then you might have another service"
    },
    {
      "speakerLabel": "spk_1",
      "start": 488.32,
      "end": 490.96,
      "text": " that sends a confirmation email to a customer"
    },
    {
      "speakerLabel": "spk_1",
      "start": 490.96,
      "end": 493.98,
      "text": " and another service that starts the fulfillment workflow."
    },
    {
      "speakerLabel": "spk_1",
      "start": 493.98,
      "end": 497.32,
      "text": " So if you're doing this kind of event-driven orchestration,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 497.32,
      "end": 498.86,
      "text": " that's one of the ways you could do it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 498.86,
      "end": 502.04,
      "text": " SNS has so many different use cases."
    },
    {
      "speakerLabel": "spk_1",
      "start": 502.04,
      "end": 503.68,
      "text": " Wherever you would use something,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 503.68,
      "end": 506.82,
      "text": " even like a topic in some of the traditional services"
    },
    {
      "speakerLabel": "spk_1",
      "start": 506.82,
      "end": 511.44,
      "text": " like ActiveMQ or RabbitMQ, you could use SNS instead."
    },
    {
      "speakerLabel": "spk_1",
      "start": 511.44,
      "end": 512.96,
      "text": " And it's pretty performant as well."
    },
    {
      "speakerLabel": "spk_1",
      "start": 512.96,
      "end": 515,
      "text": " So the throughput is pretty good."
    },
    {
      "speakerLabel": "spk_1",
      "start": 517.08,
      "end": 519.4399999999999,
      "text": " And so that brings up an interesting point"
    },
    {
      "speakerLabel": "spk_1",
      "start": 519.4399999999999,
      "end": 523.76,
      "text": " because SNS and EventBridge can seem quite similar"
    },
    {
      "speakerLabel": "spk_1",
      "start": 523.76,
      "end": 525.68,
      "text": " on the face of it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 525.68,
      "end": 528.4,
      "text": " How would you describe if somebody was choosing,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 528.4,
      "end": 530.8,
      "text": " should I use SNS or should I use EventBridge?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 530.8,
      "end": 532,
      "text": " They both seem like PubSUB."
    },
    {
      "speakerLabel": "spk_1",
      "start": 532,
      "end": 533.84,
      "text": " What's the difference?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 533.84,
      "end": 535,
      "text": " Yeah, that's a good question."
    },
    {
      "speakerLabel": "spk_0",
      "start": 535,
      "end": 537.56,
      "text": " And if I have to be honest, I was a little bit confused"
    },
    {
      "speakerLabel": "spk_0",
      "start": 537.56,
      "end": 541.2,
      "text": " myself when EventBridge was announced to try to understand,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 541.2,
      "end": 545.6,
      "text": " OK, why a new service when we have SNS?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 545.6,
      "end": 548.92,
      "text": " And I think it's just it covers a very similar space."
    },
    {
      "speakerLabel": "spk_0",
      "start": 548.92,
      "end": 551.12,
      "text": " So definitely there is an overlap between the two"
    },
    {
      "speakerLabel": "spk_0",
      "start": 551.12,
      "end": 552.04,
      "text": " services."
    },
    {
      "speakerLabel": "spk_0",
      "start": 552.04,
      "end": 554.6,
      "text": " It's more the way that they provide you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 554.6,
      "end": 558,
      "text": " all the tools and features that you might need to fulfill"
    },
    {
      "speakerLabel": "spk_0",
      "start": 558,
      "end": 559.6,
      "text": " that particular need."
    },
    {
      "speakerLabel": "spk_0",
      "start": 559.6,
      "end": 565.28,
      "text": " So I think EventBridge is definitely more flexible than SNS"
    },
    {
      "speakerLabel": "spk_0",
      "start": 565.28,
      "end": 566.84,
      "text": " and in different ways."
    },
    {
      "speakerLabel": "spk_0",
      "start": 566.84,
      "end": 570.76,
      "text": " So just to try to make a list, the first obvious difference"
    },
    {
      "speakerLabel": "spk_0",
      "start": 570.76,
      "end": 573.44,
      "text": " we will notice is that with EventBridge,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 573.44,
      "end": 576.4,
      "text": " we don't need to explicitly create topics."
    },
    {
      "speakerLabel": "spk_0",
      "start": 576.4,
      "end": 579.08,
      "text": " You have a default bus, it's called,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 579.08,
      "end": 583.5600000000001,
      "text": " and you can just use that to publish all your messages."
    },
    {
      "speakerLabel": "spk_0",
      "start": 583.5600000000001,
      "end": 585.32,
      "text": " Also, the other thing is in the way"
    },
    {
      "speakerLabel": "spk_0",
      "start": 585.32,
      "end": 590.1600000000001,
      "text": " you consume those messages with SNS,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 590.1600000000001,
      "end": 593.4000000000001,
      "text": " you are basically listening on that particular channel"
    },
    {
      "speakerLabel": "spk_0",
      "start": 593.4000000000001,
      "end": 596.4000000000001,
      "text": " for all the events that are published on that channel."
    },
    {
      "speakerLabel": "spk_0",
      "start": 596.4000000000001,
      "end": 600.6800000000001,
      "text": " With EventBridge, the mechanism is based on pattern matching."
    },
    {
      "speakerLabel": "spk_0",
      "start": 600.6800000000001,
      "end": 605.5600000000001,
      "text": " So you could describe pretty flexible patterns"
    },
    {
      "speakerLabel": "spk_0",
      "start": 605.5600000000001,
      "end": 608.4000000000001,
      "text": " that will allow you to capture even different types of events"
    },
    {
      "speakerLabel": "spk_0",
      "start": 608.4000000000001,
      "end": 610.7600000000001,
      "text": " with just one expression."
    },
    {
      "speakerLabel": "spk_0",
      "start": 610.7600000000001,
      "end": 612.48,
      "text": " So for instance, you could say, OK,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 612.48,
      "end": 615.5600000000001,
      "text": " I want to listen for all the events produced"
    },
    {
      "speakerLabel": "spk_0",
      "start": 615.5600000000001,
      "end": 618.72,
      "text": " by a particular source, all the events that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 618.72,
      "end": 622.44,
      "text": " contain a specific ID in a given field of the event."
    },
    {
      "speakerLabel": "spk_0",
      "start": 622.44,
      "end": 624.04,
      "text": " So you can build all the patterns"
    },
    {
      "speakerLabel": "spk_0",
      "start": 624.04,
      "end": 626.48,
      "text": " in the way that makes the most sense for your application,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 626.48,
      "end": 629.52,
      "text": " and that can be very powerful."
    },
    {
      "speakerLabel": "spk_0",
      "start": 629.52,
      "end": 631.96,
      "text": " Other than that, it is very interesting"
    },
    {
      "speakerLabel": "spk_0",
      "start": 631.96,
      "end": 637.6,
      "text": " that EventBridge supports out of the box what I will call AWS"
    },
    {
      "speakerLabel": "spk_0",
      "start": 637.6,
      "end": 639.52,
      "text": " internal events, if you want."
    },
    {
      "speakerLabel": "spk_0",
      "start": 639.52,
      "end": 642.28,
      "text": " So not necessarily specific for your application,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 642.28,
      "end": 646.24,
      "text": " but events that happen in the context of a given AWS account."
    },
    {
      "speakerLabel": "spk_0",
      "start": 646.24,
      "end": 649.28,
      "text": " And that's something you can use to build specific integration."
    },
    {
      "speakerLabel": "spk_0",
      "start": 649.28,
      "end": 653.16,
      "text": " For instance, you could listen for a particular step function"
    },
    {
      "speakerLabel": "spk_0",
      "start": 653.16,
      "end": 655.76,
      "text": " that is changing its own state, and maybe you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 655.76,
      "end": 657.6,
      "text": " would want to react to that."
    },
    {
      "speakerLabel": "spk_0",
      "start": 657.6,
      "end": 661.4,
      "text": " Or very interestingly enough, you can listen for S3 events."
    },
    {
      "speakerLabel": "spk_0",
      "start": 661.4,
      "end": 665.8399999999999,
      "text": " So you can listen for new files on an S3 bucket,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 665.8399999999999,
      "end": 668.4,
      "text": " or files that are updated and deleted."
    },
    {
      "speakerLabel": "spk_0",
      "start": 668.4,
      "end": 672.04,
      "text": " And similarly enough, you can listen for CrowdTrail events."
    },
    {
      "speakerLabel": "spk_0",
      "start": 672.04,
      "end": 674.76,
      "text": " And in all these cases, you can still use pattern matching,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 674.76,
      "end": 677.12,
      "text": " so you can have very sophisticated ways"
    },
    {
      "speakerLabel": "spk_0",
      "start": 677.12,
      "end": 679.16,
      "text": " of capturing very specific events that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 679.16,
      "end": 682.9599999999999,
      "text": " matter to your application."
    },
    {
      "speakerLabel": "spk_0",
      "start": 682.9599999999999,
      "end": 687.4399999999999,
      "text": " Other thing is that it supports many more targets than SNS."
    },
    {
      "speakerLabel": "spk_0",
      "start": 687.4399999999999,
      "end": 690,
      "text": " For instance, you can use EventBridge"
    },
    {
      "speakerLabel": "spk_0",
      "start": 690,
      "end": 695.24,
      "text": " to basically propagate events to SNS itself, SQS, Lambda,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 695.24,
      "end": 699.8,
      "text": " step function, log groups, event batch, an EC2,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 699.8,
      "end": 702.5999999999999,
      "text": " or even other event buses in other regional accounts."
    },
    {
      "speakerLabel": "spk_0",
      "start": 702.5999999999999,
      "end": 704.88,
      "text": " So definitely much more powerful in terms"
    },
    {
      "speakerLabel": "spk_0",
      "start": 704.88,
      "end": 709.64,
      "text": " of all the different ways you can distribute the messages."
    },
    {
      "speakerLabel": "spk_0",
      "start": 709.64,
      "end": 711.88,
      "text": " Finally, there are other features,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 711.88,
      "end": 715.92,
      "text": " like you can have schema, the schema registry where"
    },
    {
      "speakerLabel": "spk_0",
      "start": 715.92,
      "end": 718.9599999999999,
      "text": " you can visualize the shape of all the messages that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 718.9599999999999,
      "end": 720.52,
      "text": " are going to the bus."
    },
    {
      "speakerLabel": "spk_0",
      "start": 720.52,
      "end": 724.16,
      "text": " You have discovery functionality so that every time there"
    },
    {
      "speakerLabel": "spk_0",
      "start": 724.16,
      "end": 727.76,
      "text": " are new messages, the schema is registered,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 727.76,
      "end": 729.4799999999999,
      "text": " and you can use it."
    },
    {
      "speakerLabel": "spk_0",
      "start": 729.48,
      "end": 733.2,
      "text": " And then you can archive the messages for long retention,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 733.2,
      "end": 734.76,
      "text": " and you can even replay the messages."
    },
    {
      "speakerLabel": "spk_0",
      "start": 734.76,
      "end": 738.96,
      "text": " So definitely much more features from EventBridge"
    },
    {
      "speakerLabel": "spk_0",
      "start": 738.96,
      "end": 741.5600000000001,
      "text": " compared to SNS."
    },
    {
      "speakerLabel": "spk_0",
      "start": 741.5600000000001,
      "end": 743.76,
      "text": " In terms of examples, I guess they"
    },
    {
      "speakerLabel": "spk_0",
      "start": 743.76,
      "end": 747.28,
      "text": " are pretty similar to what you will do with SNS."
    },
    {
      "speakerLabel": "spk_0",
      "start": 747.28,
      "end": 749.8000000000001,
      "text": " So I think your re-commerce example is still valid."
    },
    {
      "speakerLabel": "spk_0",
      "start": 749.8000000000001,
      "end": 752.44,
      "text": " You could implement that even with EventBridge."
    },
    {
      "speakerLabel": "spk_0",
      "start": 752.44,
      "end": 752.9200000000001,
      "text": " Definitely."
    },
    {
      "speakerLabel": "spk_0",
      "start": 752.9200000000001,
      "end": 756.88,
      "text": " Because you can also listen to AWS-specific events."
    },
    {
      "speakerLabel": "spk_0",
      "start": 756.88,
      "end": 760,
      "text": " Another example could be you are interested in files"
    },
    {
      "speakerLabel": "spk_0",
      "start": 760,
      "end": 762.56,
      "text": " that are uploaded to an S3 bucket, maybe,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 762.56,
      "end": 765.4,
      "text": " and you can build easily a pattern that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 765.4,
      "end": 767.24,
      "text": " will capture those events."
    },
    {
      "speakerLabel": "spk_0",
      "start": 767.24,
      "end": 770.56,
      "text": " And you can do, I don't know, a virus scan, maybe,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 770.56,
      "end": 773.04,
      "text": " on files that are uploaded by users."
    },
    {
      "speakerLabel": "spk_0",
      "start": 773.04,
      "end": 774.92,
      "text": " Or maybe if those are text files,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 774.92,
      "end": 777.56,
      "text": " you can pick them up and index their content"
    },
    {
      "speakerLabel": "spk_0",
      "start": 777.56,
      "end": 779.88,
      "text": " so you can create a search functionality"
    },
    {
      "speakerLabel": "spk_0",
      "start": 779.88,
      "end": 781.84,
      "text": " on top of these files."
    },
    {
      "speakerLabel": "spk_0",
      "start": 781.84,
      "end": 783.56,
      "text": " All of that is something you can build easily"
    },
    {
      "speakerLabel": "spk_0",
      "start": 783.56,
      "end": 786.4,
      "text": " because you don't need to create an event bus for them."
    },
    {
      "speakerLabel": "spk_0",
      "start": 786.4,
      "end": 789.72,
      "text": " You don't need to create the events yourself."
    },
    {
      "speakerLabel": "spk_0",
      "start": 789.72,
      "end": 791.24,
      "text": " But they will happen automatically"
    },
    {
      "speakerLabel": "spk_0",
      "start": 791.24,
      "end": 794.68,
      "text": " in the context of your AWS account."
    },
    {
      "speakerLabel": "spk_0",
      "start": 794.68,
      "end": 798.12,
      "text": " So yeah, that's all I have."
    },
    {
      "speakerLabel": "spk_0",
      "start": 798.12,
      "end": 803.12,
      "text": " Am I missing anything important from your perspective?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 803.12,
      "end": 805.16,
      "text": " I think that covers a huge amount."
    },
    {
      "speakerLabel": "spk_1",
      "start": 805.16,
      "end": 807.88,
      "text": " One of the things I've seen is that the performance"
    },
    {
      "speakerLabel": "spk_1",
      "start": 807.88,
      "end": 811.48,
      "text": " characteristics of EventBridge are slightly slower compared"
    },
    {
      "speakerLabel": "spk_1",
      "start": 811.48,
      "end": 812.0799999999999,
      "text": " to SNS."
    },
    {
      "speakerLabel": "spk_1",
      "start": 812.0799999999999,
      "end": 813.48,
      "text": " So that's one consideration people"
    },
    {
      "speakerLabel": "spk_1",
      "start": 813.48,
      "end": 814.64,
      "text": " might want to bear in mind."
    },
    {
      "speakerLabel": "spk_1",
      "start": 814.64,
      "end": 817.08,
      "text": " Sometimes if you need to process it within a few hundred"
    },
    {
      "speakerLabel": "spk_1",
      "start": 817.08,
      "end": 819.92,
      "text": " milliseconds, SNS might be the best option."
    },
    {
      "speakerLabel": "spk_1",
      "start": 819.92,
      "end": 823.12,
      "text": " But generally, for these kind of events,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 823.12,
      "end": 824.56,
      "text": " most of the events in EventBridge"
    },
    {
      "speakerLabel": "spk_1",
      "start": 824.56,
      "end": 827.64,
      "text": " are going to arrive pretty quickly anyway."
    },
    {
      "speakerLabel": "spk_1",
      "start": 827.64,
      "end": 830.3199999999999,
      "text": " You may have some outliers that are a little bit slower."
    },
    {
      "speakerLabel": "spk_1",
      "start": 830.3199999999999,
      "end": 832.96,
      "text": " So that's one thing to bear in mind,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 832.96,
      "end": 834.76,
      "text": " especially when you're doing this common event"
    },
    {
      "speakerLabel": "spk_1",
      "start": 834.76,
      "end": 836.1999999999999,
      "text": " process you mentioned."
    },
    {
      "speakerLabel": "spk_1",
      "start": 836.1999999999999,
      "end": 839.68,
      "text": " It's a very common thing to have an event bus for all"
    },
    {
      "speakerLabel": "spk_1",
      "start": 839.68,
      "end": 842.68,
      "text": " the lifecycle events for all of the resources"
    },
    {
      "speakerLabel": "spk_1",
      "start": 842.68,
      "end": 845.04,
      "text": " in your application get published."
    },
    {
      "speakerLabel": "spk_1",
      "start": 845.04,
      "end": 847.76,
      "text": " But if you've got performance characteristics around that,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 847.76,
      "end": 849.8399999999999,
      "text": " then you might want to think about something else."
    },
    {
      "speakerLabel": "spk_1",
      "start": 849.8399999999999,
      "end": 852.76,
      "text": " Traditionally in microservices, people"
    },
    {
      "speakerLabel": "spk_1",
      "start": 852.76,
      "end": 856.76,
      "text": " may have used Kafka or a stream processing system in the past."
    },
    {
      "speakerLabel": "spk_1",
      "start": 856.76,
      "end": 860.68,
      "text": " So maybe that brings us nicely along to the other category"
    },
    {
      "speakerLabel": "spk_1",
      "start": 860.68,
      "end": 866.16,
      "text": " we mentioned, Kinesis and Kafka and stream processing."
    },
    {
      "speakerLabel": "spk_1",
      "start": 866.16,
      "end": 869.16,
      "text": " So I think we mentioned that it's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 869.16,
      "end": 870.4,
      "text": " suitable for high throughput."
    },
    {
      "speakerLabel": "spk_1",
      "start": 870.4,
      "end": 872.24,
      "text": " So definitely with these Kafka and Kinesis,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 872.24,
      "end": 875.12,
      "text": " you're going to get lower latency,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 875.12,
      "end": 876.4,
      "text": " like really low latency."
    },
    {
      "speakerLabel": "spk_1",
      "start": 876.4,
      "end": 878.48,
      "text": " So when you really want low latency"
    },
    {
      "speakerLabel": "spk_1",
      "start": 878.48,
      "end": 881.6800000000001,
      "text": " and have to react in milliseconds to events,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 881.6800000000001,
      "end": 883.72,
      "text": " this is what you need to be thinking about using"
    },
    {
      "speakerLabel": "spk_1",
      "start": 883.72,
      "end": 885.6800000000001,
      "text": " a stream processing."
    },
    {
      "speakerLabel": "spk_1",
      "start": 885.6800000000001,
      "end": 889.92,
      "text": " Some people do use these stream processing systems"
    },
    {
      "speakerLabel": "spk_1",
      "start": 889.92,
      "end": 892.5600000000001,
      "text": " as pub sub buses because you can."
    },
    {
      "speakerLabel": "spk_1",
      "start": 892.5600000000001,
      "end": 897.24,
      "text": " They all have a concept of like a channel or a stream"
    },
    {
      "speakerLabel": "spk_1",
      "start": 897.24,
      "end": 899.6,
      "text": " that you can treat like a topic."
    },
    {
      "speakerLabel": "spk_1",
      "start": 899.6,
      "end": 901.88,
      "text": " And then you have consumers for it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 901.88,
      "end": 904.64,
      "text": " The difference is that the way they work"
    },
    {
      "speakerLabel": "spk_1",
      "start": 904.64,
      "end": 907.56,
      "text": " and the way data is stored is completely different."
    },
    {
      "speakerLabel": "spk_1",
      "start": 907.56,
      "end": 911.84,
      "text": " It's almost like instead of a message bus,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 911.84,
      "end": 914.92,
      "text": " it's almost like sequential lines in a file."
    },
    {
      "speakerLabel": "spk_1",
      "start": 914.92,
      "end": 917.16,
      "text": " And the consumers are just pointing at a given line"
    },
    {
      "speakerLabel": "spk_1",
      "start": 917.16,
      "end": 918.4,
      "text": " number."
    },
    {
      "speakerLabel": "spk_1",
      "start": 918.4,
      "end": 920,
      "text": " And that's kind of a simple model"
    },
    {
      "speakerLabel": "spk_1",
      "start": 920,
      "end": 921.96,
      "text": " for how those things work."
    },
    {
      "speakerLabel": "spk_1",
      "start": 921.96,
      "end": 924.16,
      "text": " But what that means is that you can get guarantees"
    },
    {
      "speakerLabel": "spk_1",
      "start": 924.16,
      "end": 925.88,
      "text": " around ordering."
    },
    {
      "speakerLabel": "spk_1",
      "start": 925.88,
      "end": 929.44,
      "text": " And that is one of the fundamental things that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 929.44,
      "end": 931.96,
      "text": " can be beneficial with Kinesis and Kafka."
    },
    {
      "speakerLabel": "spk_1",
      "start": 931.96,
      "end": 934.6,
      "text": " But you've got retention."
    },
    {
      "speakerLabel": "spk_1",
      "start": 934.6,
      "end": 937.24,
      "text": " So Kinesis will allow you to store messages"
    },
    {
      "speakerLabel": "spk_1",
      "start": 937.24,
      "end": 938.4000000000001,
      "text": " for up to a year."
    },
    {
      "speakerLabel": "spk_1",
      "start": 938.4000000000001,
      "end": 941.5200000000001,
      "text": " Kafka, you can serve it forever."
    },
    {
      "speakerLabel": "spk_1",
      "start": 941.5200000000001,
      "end": 943.1600000000001,
      "text": " But you have to think about scalability"
    },
    {
      "speakerLabel": "spk_1",
      "start": 943.1600000000001,
      "end": 948.0400000000001,
      "text": " because if you're looking at a Kinesis consumer,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 948.0400000000001,
      "end": 950.6,
      "text": " there's consumption throughput limits you need to think about."
    },
    {
      "speakerLabel": "spk_1",
      "start": 950.6,
      "end": 952.6400000000001,
      "text": " There are producer throughput limits."
    },
    {
      "speakerLabel": "spk_1",
      "start": 952.6400000000001,
      "end": 955.6,
      "text": " And in all these cases, you need to size the cluster"
    },
    {
      "speakerLabel": "spk_1",
      "start": 955.6,
      "end": 958.84,
      "text": " if it's Kafka, or you need to size the streams"
    },
    {
      "speakerLabel": "spk_1",
      "start": 958.84,
      "end": 960.2,
      "text": " if it's Kinesis."
    },
    {
      "speakerLabel": "spk_1",
      "start": 960.2,
      "end": 962.52,
      "text": " So you really have to think about the numbers"
    },
    {
      "speakerLabel": "spk_1",
      "start": 962.52,
      "end": 965.36,
      "text": " and the mathematics around your event flow"
    },
    {
      "speakerLabel": "spk_1",
      "start": 965.36,
      "end": 968.52,
      "text": " if you want to use those things."
    },
    {
      "speakerLabel": "spk_1",
      "start": 968.52,
      "end": 970.44,
      "text": " So there's more of an investment,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 970.44,
      "end": 972.5600000000001,
      "text": " I would say, needed for them."
    },
    {
      "speakerLabel": "spk_1",
      "start": 972.5600000000001,
      "end": 976.08,
      "text": " If you can get away with using SNS, SQS, and EventBridge"
    },
    {
      "speakerLabel": "spk_1",
      "start": 976.08,
      "end": 978.8000000000001,
      "text": " instead, it's going to be much simpler."
    },
    {
      "speakerLabel": "spk_1",
      "start": 978.8000000000001,
      "end": 980.0400000000001,
      "text": " But they do have their places."
    },
    {
      "speakerLabel": "spk_1",
      "start": 980.0400000000001,
      "end": 985,
      "text": " So I guess, yeah, maybe we should give some examples."
    },
    {
      "speakerLabel": "spk_1",
      "start": 985,
      "end": 987.1600000000001,
      "text": " Do you have actually some examples, Vigianno,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 987.16,
      "end": 990.1999999999999,
      "text": " that you could say are good?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 990.1999999999999,
      "end": 992.76,
      "text": " Illustrate the differences between stream processing"
    },
    {
      "speakerLabel": "spk_1",
      "start": 992.76,
      "end": 995.8399999999999,
      "text": " and what you'd use it for as opposed to a PubSub?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 995.8399999999999,
      "end": 996.68,
      "text": " Yeah, absolutely."
    },
    {
      "speakerLabel": "spk_0",
      "start": 996.68,
      "end": 1000.0799999999999,
      "text": " So one example that comes to mind is, for instance,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1000.0799999999999,
      "end": 1002.52,
      "text": " you have an application where you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1002.52,
      "end": 1005.4399999999999,
      "text": " have users interacting with, let's say, for instance,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1005.4399999999999,
      "end": 1006,
      "text": " products."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1006,
      "end": 1008.76,
      "text": " Again, just to stick with the e-commerce example."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1008.76,
      "end": 1011.0799999999999,
      "text": " Maybe you would be really interested in trying"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1011.0799999999999,
      "end": 1014.3199999999999,
      "text": " to observe what the user is doing in the page"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1014.3199999999999,
      "end": 1016.68,
      "text": " to understand maybe what other products you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1016.68,
      "end": 1018.68,
      "text": " can suggest to that user."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1018.68,
      "end": 1020.88,
      "text": " And you could implement something"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1020.88,
      "end": 1023.0799999999999,
      "text": " that captures all the user clicks,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1023.0799999999999,
      "end": 1024.6399999999999,
      "text": " but not just the clicks, maybe even"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1024.6399999999999,
      "end": 1029.28,
      "text": " the user offering specific elements in the page,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1029.28,
      "end": 1031.1599999999999,
      "text": " or even scrolling the page and looking"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1031.1599999999999,
      "end": 1033.52,
      "text": " at a specific area of the page."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1033.52,
      "end": 1036.1599999999999,
      "text": " And you can create streams where you are basically"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1036.1599999999999,
      "end": 1039.32,
      "text": " sending all these events in real time."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1039.32,
      "end": 1042.1599999999999,
      "text": " And then you can have analytics consuming"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1042.1599999999999,
      "end": 1044.6,
      "text": " all this information real time and responding"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1044.6,
      "end": 1046.6399999999999,
      "text": " with suggestions for other products"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1046.6399999999999,
      "end": 1050.36,
      "text": " that the user might be interested to watch and maybe"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1050.36,
      "end": 1052.76,
      "text": " purchase."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1052.76,
      "end": 1055.1999999999998,
      "text": " Or other examples that I've seen are, in general,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1055.1999999999998,
      "end": 1057.6799999999998,
      "text": " when you need to transfer large amounts of data"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1057.6799999999998,
      "end": 1058.6399999999999,
      "text": " between systems."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1058.6399999999999,
      "end": 1061.48,
      "text": " And you need to do that as quick as possible."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1061.48,
      "end": 1066.56,
      "text": " For instance, logs or network traffic,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1066.56,
      "end": 1070.12,
      "text": " metadata about network happening in a particular, I don't know,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1070.12,
      "end": 1072.3999999999999,
      "text": " private network or something like that because you might want"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1072.4,
      "end": 1076,
      "text": " to do a security analysis or things like that."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1076,
      "end": 1078.68,
      "text": " One cool thing about Kinesis is that basically you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1078.68,
      "end": 1080.68,
      "text": " send messages in batch."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1080.68,
      "end": 1083.52,
      "text": " And you can immediately receive the batch"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1083.52,
      "end": 1085.0400000000002,
      "text": " as soon as it's available."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1085.0400000000002,
      "end": 1087.16,
      "text": " So for instance, as soon as you accumulate, let's say,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1087.16,
      "end": 1089.3600000000001,
      "text": " I don't know, 30 messages in a batch,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1089.3600000000001,
      "end": 1092.72,
      "text": " and that can happen in literally single digit milliseconds,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1092.72,
      "end": 1094.5600000000002,
      "text": " you will receive that message."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1094.5600000000002,
      "end": 1099.2800000000002,
      "text": " Or alternatively, you can define time-based window."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1099.2800000000002,
      "end": 1101.5600000000002,
      "text": " So if the batch is not complete within one second,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1101.56,
      "end": 1103.1599999999999,
      "text": " I still want to receive it straightaway"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1103.1599999999999,
      "end": 1105.6399999999999,
      "text": " because I want to process as fast as possible."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1105.6399999999999,
      "end": 1108.1599999999999,
      "text": " So I think Kinesis will give you these capabilities that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1108.1599999999999,
      "end": 1111.72,
      "text": " are not easy to replicate with something like SNS or Event"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1111.72,
      "end": 1112.2,
      "text": " Bridge."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1115.12,
      "end": 1116.72,
      "text": " Yeah, for sure."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1116.72,
      "end": 1119.84,
      "text": " Yeah, I think with that, we have a good overview of Kinesis."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1119.84,
      "end": 1122.3999999999999,
      "text": " Maybe it's worth spending a little bit more time trying"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1122.3999999999999,
      "end": 1125.6799999999998,
      "text": " to highlight some of the differences with Kafka, MSK,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1125.6799999999998,
      "end": 1129.2,
      "text": " and why you might want to use that as an alternative"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1129.2,
      "end": 1130.36,
      "text": " to Kinesis."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1130.36,
      "end": 1133.52,
      "text": " What do you think?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1133.52,
      "end": 1135.9599999999998,
      "text": " Yeah, that's true."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1135.9599999999998,
      "end": 1137.8799999999999,
      "text": " Because Kafka, I guess, is similar,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1137.8799999999999,
      "end": 1140.56,
      "text": " but has way more features than Kinesis and Minkisa,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1140.56,
      "end": 1144.76,
      "text": " Kinesis is deliberately simple."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1144.76,
      "end": 1146.76,
      "text": " You have to size it correctly."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1146.76,
      "end": 1148.9599999999998,
      "text": " Even both of those services recently"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1148.9599999999998,
      "end": 1151.8,
      "text": " announced they have serverless mode."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1151.8,
      "end": 1154.24,
      "text": " So it's kind of auto-scales a little bit."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1154.24,
      "end": 1158,
      "text": " It's not completely serverless, but it helps."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1158,
      "end": 1160.12,
      "text": " You still have to think a lot more about sizing."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1160.12,
      "end": 1162.04,
      "text": " With Kafka, you'll get more features."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1162.04,
      "end": 1164.32,
      "text": " If you've already got Kafka, I would say,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1164.32,
      "end": 1166.9599999999998,
      "text": " it's a reason you would use MSK."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1166.9599999999998,
      "end": 1169.6399999999999,
      "text": " If you don't already have an existing investment in Kafka"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1169.6399999999999,
      "end": 1171.8799999999999,
      "text": " and all of the tooling and the ecosystem around it,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1171.8799999999999,
      "end": 1174.1999999999998,
      "text": " which is really large and fairly complex,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1174.1999999999998,
      "end": 1176.08,
      "text": " then it's probably OK to go with Kinesis"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1176.08,
      "end": 1178.7199999999998,
      "text": " if you need stream processing."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1178.7199999999998,
      "end": 1182.28,
      "text": " And I think that's really where MSK fits, is really"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1182.28,
      "end": 1184.4799999999998,
      "text": " for people who are migrating to AWS,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1184.4799999999998,
      "end": 1188.12,
      "text": " and they've already got Kafka somewhere."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1188.12,
      "end": 1190.9199999999998,
      "text": " But it does have a huge feature set."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1190.9199999999998,
      "end": 1193.84,
      "text": " So if you've got lots of advanced stream processing"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1193.84,
      "end": 1199.4399999999998,
      "text": " use cases at scale, then it's definitely worth a look."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1199.4399999999998,
      "end": 1200.2399999999998,
      "text": " Yeah, absolutely."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1200.2399999999998,
      "end": 1202.04,
      "text": " I will probably summarize it that Kafka"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1202.04,
      "end": 1206.6,
      "text": " is more of an industry standard for this kind of task."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1206.6,
      "end": 1207.12,
      "text": " It is."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1207.12,
      "end": 1208.1599999999999,
      "text": " It's de facto."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1208.1599999999999,
      "end": 1212.28,
      "text": " So if you probably work in multi-cloud environments"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1212.28,
      "end": 1215.36,
      "text": " or, I don't know, run your own Kubernetes clusters,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1215.36,
      "end": 1217.6799999999998,
      "text": " probably it's better to use something like Kafka"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1217.68,
      "end": 1219.92,
      "text": " because you will have it available in all"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1219.92,
      "end": 1223.6000000000001,
      "text": " the environments you need it to be, while Kinesis is AWS"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1223.6000000000001,
      "end": 1228.88,
      "text": " specific, so you can pretty much run it on AWS."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1228.88,
      "end": 1231.44,
      "text": " And yeah, I think that brings us to the conclusion"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1231.44,
      "end": 1232.24,
      "text": " of this episode."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1232.24,
      "end": 1235.44,
      "text": " Just to summarize, I think you can probably"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1235.44,
      "end": 1239.8,
      "text": " cover 90% of the use cases by just sticking with SQS"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1239.8,
      "end": 1242.6000000000001,
      "text": " and then SNS or EventBridge."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1242.6000000000001,
      "end": 1246.2,
      "text": " And then you can use only Kinesis or Kafka"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1246.2,
      "end": 1250.28,
      "text": " for more advanced use cases where you need high throughput"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1250.28,
      "end": 1253.96,
      "text": " or where maybe you need to store all the events for a long time"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1253.96,
      "end": 1255.68,
      "text": " and you need all the additional features"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1255.68,
      "end": 1258.64,
      "text": " that you get from something like Kafka."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1258.64,
      "end": 1263.04,
      "text": " So with that, I think we have covered pretty much all"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1263.04,
      "end": 1264.8400000000001,
      "text": " that we wanted to cover today."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1264.8400000000001,
      "end": 1268.68,
      "text": " We will be doing a more in-depth series on all the services."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1268.68,
      "end": 1270.3600000000001,
      "text": " So if that's something that interests you,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1270.3600000000001,
      "end": 1274.3600000000001,
      "text": " make sure to subscribe and click that Like button"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1274.36,
      "end": 1276.84,
      "text": " so you can support us and be notified every time we"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1276.84,
      "end": 1278.84,
      "text": " publish the next episodes."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1278.84,
      "end": 1280.4799999999998,
      "text": " Thank you very much for being with us,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1280.4799999999998,
      "end": 1282.1599999999999,
      "text": " and we'll see you in the next episode."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1282.16,
      "end": 1304.16,
      "text": " Slac."
    }
  ]
}