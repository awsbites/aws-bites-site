{
  "speakers": {
    "spk_0": "Luciano",
    "spk_1": "Eoin"
  },
  "segments": [
    {
      "speakerLabel": "spk_0",
      "start": 0,
      "end": 5.12,
      "text": " Hello everyone, today we're going to answer the question how do you use event bridge?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 5.12,
      "end": 10.24,
      "text": " And by the end of this episode you will know why event bridge is very different from everything"
    },
    {
      "speakerLabel": "spk_0",
      "start": 10.24,
      "end": 15.84,
      "text": " else in this space. We will also discuss some interesting examples on when and how you can use"
    },
    {
      "speakerLabel": "spk_0",
      "start": 15.84,
      "end": 21.04,
      "text": " event bridge, what can possibly go wrong with it and how much are you going to pay for it,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 21.04,
      "end": 25.6,
      "text": " and finally we are going to give you some tips to avoid shooting yourself in the foot and get good"
    },
    {
      "speakerLabel": "spk_0",
      "start": 25.6,
      "end": 31.68,
      "text": " observability. My name is Luciano and today I'm joined by Eoin and this is AWS Bites podcast."
    },
    {
      "speakerLabel": "spk_0",
      "start": 39.6,
      "end": 45.52,
      "text": " So before we get started let me mention that this is a series about AWS services that cover the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 45.52,
      "end": 52.24,
      "text": " space of event and message passing. We just finished an episode about SQS, the previous one,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 52.24,
      "end": 57.04,
      "text": " and we also had a more generic introduction to all these services. Today we're going to focus"
    },
    {
      "speakerLabel": "spk_0",
      "start": 57.04,
      "end": 61.92,
      "text": " on event bridge but if you're interested in the space make sure to follow and subscribe so you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 61.92,
      "end": 68.64,
      "text": " can be notified whenever we publish the next events. But back to event bridge, Eoin what can"
    },
    {
      "speakerLabel": "spk_0",
      "start": 68.64,
      "end": 74.24000000000001,
      "text": " you tell us about what are the main features or the main things why event bridge is so interesting?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 81.28,
      "end": 86.88,
      "text": " Yeah event bridge if we talk about the classification we previously used we had queues and then we had pubsub and then streaming. Event bridge we put in the pubsub category but"
    },
    {
      "speakerLabel": "spk_1",
      "start": 86.88,
      "end": 91.44,
      "text": " it's a little bit different to other pubsub systems it's got some interesting features."
    },
    {
      "speakerLabel": "spk_1",
      "start": 92,
      "end": 98.16,
      "text": " So event bridge is nice in that you can publish events without really provisioning anything up"
    },
    {
      "speakerLabel": "spk_1",
      "start": 98.16,
      "end": 102.88,
      "text": " front that's I think the thing that people really like. You don't have to provision anywhere"
    },
    {
      "speakerLabel": "spk_1",
      "start": 102.88,
      "end": 106.64,
      "text": " you don't have to provision any resources in AWS if you want to send events to it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 108.39999999999999,
      "end": 112.47999999999999,
      "text": " but if you want to consume them then you just need to create a rule and that's how it works."
    },
    {
      "speakerLabel": "spk_1",
      "start": 112.47999999999999,
      "end": 118.16,
      "text": " So you don't really have the subscriber concept like you do with SNS. You don't necessarily have"
    },
    {
      "speakerLabel": "spk_1",
      "start": 118.16,
      "end": 122.64,
      "text": " to have listeners instead you have rules and a rule is slightly different to a subscription."
    },
    {
      "speakerLabel": "spk_1",
      "start": 124.47999999999999,
      "end": 130,
      "text": " With a rule you define a pattern and it is really like a pattern matching concept similar to the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 130,
      "end": 135.52,
      "text": " kind of pattern matching concept you get in some programming languages where you have an event"
    },
    {
      "speakerLabel": "spk_1",
      "start": 135.52,
      "end": 140,
      "text": " you're trying to say I want to receive events that look a little bit like this pattern here"
    },
    {
      "speakerLabel": "spk_1",
      "start": 140,
      "end": 146.8,
      "text": " and then you can specify some properties in that event and their values this partial string that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 146.8,
      "end": 152.64,
      "text": " it might begin with integer comparison and then you say okay with this rule if you find any"
    },
    {
      "speakerLabel": "spk_1",
      "start": 152.64,
      "end": 157.44,
      "text": " matches then can you please send these events to these targets and one of the great things about"
    },
    {
      "speakerLabel": "spk_1",
      "start": 157.44,
      "end": 163.12,
      "text": " EventBridge is that it supports lots of targets so EventBridge is really good it's almost like the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 163.68,
      "end": 170.07999999999998,
      "text": " integrate anything with anything service on AWS so it's of all the services we're going to talk"
    },
    {
      "speakerLabel": "spk_1",
      "start": 170.07999999999998,
      "end": 174.8,
      "text": " about in this series it's probably the most general purpose it can do almost anything you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 174.8,
      "end": 180.56,
      "text": " can imagine. There are of course some limitations which we'll talk about but it is really really"
    },
    {
      "speakerLabel": "spk_1",
      "start": 180.56,
      "end": 185.52,
      "text": " powerful and it's one of the services that has really got a lot of people excited since it was"
    },
    {
      "speakerLabel": "spk_1",
      "start": 185.52,
      "end": 190.64000000000001,
      "text": " announced it was actually based off a service that had existed for a long time CloudWatch events"
    },
    {
      "speakerLabel": "spk_1",
      "start": 190.64000000000001,
      "end": 196.56,
      "text": " but they rebranded it and gave it a new purpose and added a lot of new features and suddenly"
    },
    {
      "speakerLabel": "spk_1",
      "start": 196.56,
      "end": 202.24,
      "text": " people are getting as excited about it almost as people did when Lambda came out so there's lots of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 202.24,
      "end": 206.16000000000003,
      "text": " different different features in it so you've got different event types do you want to talk about"
    },
    {
      "speakerLabel": "spk_1",
      "start": 206.72,
      "end": 210.88,
      "text": " maybe what what are the different events you can get with EventBridge?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 210.88,
      "end": 217.2,
      "text": " Yeah before that I just want to mention that it reminds me a little bit in its purpose and the way it has been marketed as the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 218,
      "end": 228,
      "text": " if this then that or Zapier answer from AWS right? Yeah absolutely yeah different type of events so"
    },
    {
      "speakerLabel": "spk_0",
      "start": 228,
      "end": 234.48,
      "text": " there are actually I would say three main categories of events that you can deal with"
    },
    {
      "speakerLabel": "spk_0",
      "start": 234.48,
      "end": 241.12,
      "text": " and the first one is that there are events that are I would call them native in AWS so things that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 241.12,
      "end": 247.6,
      "text": " happen in your AWS account or other accounts and you might want to listen for and react to them"
    },
    {
      "speakerLabel": "spk_0",
      "start": 247.6,
      "end": 252.56,
      "text": " and just to give you a few examples for instance you can be notified whenever a spot instance has"
    },
    {
      "speakerLabel": "spk_0",
      "start": 252.56,
      "end": 257.76,
      "text": " been interrupted or maybe you have step functions and you want to react to a step function changing"
    },
    {
      "speakerLabel": "spk_0",
      "start": 257.76,
      "end": 266,
      "text": " state maybe it's started maybe it's failing maybe it's timing out and for instance you can even"
    },
    {
      "speakerLabel": "spk_0",
      "start": 266,
      "end": 272.24,
      "text": " enable notifications and events for S3 objects so you could say every time there is a new"
    },
    {
      "speakerLabel": "spk_0",
      "start": 272.24,
      "end": 277.44,
      "text": " a new object in a bucket trigger that this is an event and you can create a rule to match that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 278.24,
      "end": 285.03999999999996,
      "text": " and very generic thing you can use CloudTrail as well and that will give you access to another"
    },
    {
      "speakerLabel": "spk_0",
      "start": 285.04,
      "end": 294.40000000000003,
      "text": " wide range of events there is a list that we will put in the show descriptions there is a link there"
    },
    {
      "speakerLabel": "spk_0",
      "start": 294.40000000000003,
      "end": 301.36,
      "text": " and we'll you will find that all the events and services from AWS that will trigger events that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 301.36,
      "end": 305.84000000000003,
      "text": " you can capture in EventBridge there is an interesting small detail that you need to be a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 305.84000000000003,
      "end": 310.96000000000004,
      "text": " little bit careful about there are different guarantees in terms of delivery depending on the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 310.96,
      "end": 317.44,
      "text": " depending on the type of event source that you are trying to to use sometimes you have kind of a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 317.44,
      "end": 323.03999999999996,
      "text": " guaranteed delivery and then sometimes you have best effort so I suppose that pretty much means"
    },
    {
      "speakerLabel": "spk_1",
      "start": 333.35999999999996,
      "end": 338.4,
      "text": " when you get at least once delivery or at most once type of delivery yeah I guess if it's best effort it's kind of at least zero right because you just for some of those services you just won't"
    },
    {
      "speakerLabel": "spk_0",
      "start": 344.15999999999997,
      "end": 350.32,
      "text": " get an event so yeah it's good to check the docs so this is the first category and it's something that it's there for you if you want to use it you just create a rule and you use it in some cases"
    },
    {
      "speakerLabel": "spk_0",
      "start": 350.32,
      "end": 355.91999999999996,
      "text": " you need to enable the events but most of the time it's there and it works for you then there are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 355.91999999999996,
      "end": 360.15999999999997,
      "text": " another category that is partner events and this is actually really interesting and this is why"
    },
    {
      "speakerLabel": "spk_0",
      "start": 360.15999999999997,
      "end": 365.67999999999995,
      "text": " sometimes I like to think about EventBridge as sort of a Zapier or if this then that because"
    },
    {
      "speakerLabel": "spk_0",
      "start": 365.68,
      "end": 372.08,
      "text": " you can plug in events from other SaaS platforms for instance I don't know Salesforce, Outzero,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 372.08,
      "end": 379.44,
      "text": " PagerDuty so if you integrate the platform with your AWS account basically you can start to get"
    },
    {
      "speakerLabel": "spk_0",
      "start": 379.44,
      "end": 385.52,
      "text": " events from those other external platform and consume them I don't know an example that comes"
    },
    {
      "speakerLabel": "spk_0",
      "start": 385.52,
      "end": 391.52,
      "text": " to mind maybe you have a sales pipeline that you are mapping in Salesforce if that pipeline changes"
    },
    {
      "speakerLabel": "spk_0",
      "start": 391.52,
      "end": 397.12,
      "text": " maybe you have new deals coming in you can probably receive events and react to those and create"
    },
    {
      "speakerLabel": "spk_0",
      "start": 397.12,
      "end": 404.64,
      "text": " integrations and finally the third category of events is custom events so you can use the SDK"
    },
    {
      "speakerLabel": "spk_0",
      "start": 404.64,
      "end": 410.08,
      "text": " to dispatch your own totally custom events for instance I don't know if you are building any"
    },
    {
      "speakerLabel": "spk_0",
      "start": 410.08,
      "end": 415.12,
      "text": " commerce which seems to be our favorite example you could create your own custom events every"
    },
    {
      "speakerLabel": "spk_0",
      "start": 415.12,
      "end": 420.47999999999996,
      "text": " time there is a new order and you can define the structure of those events and then different parts"
    },
    {
      "speakerLabel": "spk_0",
      "start": 420.48,
      "end": 425.20000000000005,
      "text": " of your application can create patterns and rules to capture those events and react to them"
    },
    {
      "speakerLabel": "spk_0",
      "start": 428.08000000000004,
      "end": 432.32,
      "text": " that's all I have for events but what about targets"
    },
    {
      "speakerLabel": "spk_1",
      "start": 439.6,
      "end": 446.08000000000004,
      "text": " that's yeah I mentioned that one of the advantages is that you have loads of targets so compared to SNS or SQS you have many services that you can integrate directly from EventBridge"
    },
    {
      "speakerLabel": "spk_1",
      "start": 446.08,
      "end": 453.28,
      "text": " you also have HTTP destinations so if you've got a third-party API you can use EventBridge to route"
    },
    {
      "speakerLabel": "spk_1",
      "start": 453.91999999999996,
      "end": 458.64,
      "text": " all of these different types of messages that can come in to a third-party API or an external API or"
    },
    {
      "speakerLabel": "spk_1",
      "start": 458.64,
      "end": 463.59999999999997,
      "text": " one of your other APIs and it also supports neat things like throttling and exponential backup and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 463.59999999999997,
      "end": 470.08,
      "text": " back off and retry that's really useful and one of the great things that EventBridge has that a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 470.08,
      "end": 474.24,
      "text": " lot of other services doesn't have is cross account of EventBridge so you can very if you've"
    },
    {
      "speakerLabel": "spk_1",
      "start": 474.24,
      "end": 478.88,
      "text": " got different applications different domains running in different accounts or even third-party"
    },
    {
      "speakerLabel": "spk_1",
      "start": 478.88,
      "end": 484.72,
      "text": " events you can set other EventBridges in other accounts as a target so that makes it really"
    },
    {
      "speakerLabel": "spk_1",
      "start": 484.72,
      "end": 491.28000000000003,
      "text": " easy to integrate without having to have you know specific services that are there with an IAM"
    },
    {
      "speakerLabel": "spk_1",
      "start": 491.28000000000003,
      "end": 496,
      "text": " policy and you know network routing that can route from one account to another that you have to do"
    },
    {
      "speakerLabel": "spk_1",
      "start": 496,
      "end": 502.16,
      "text": " with some other kinds of services and EventBridge takes care of that so there's definitely the most"
    },
    {
      "speakerLabel": "spk_1",
      "start": 502.16,
      "end": 506.56,
      "text": " rich the richest supportive supported set of supported targets available."
    },
    {
      "speakerLabel": "spk_1",
      "start": 507.84000000000003,
      "end": 512.1600000000001,
      "text": " I suppose we there's a couple of other features that came out after EventBridge was launched"
    },
    {
      "speakerLabel": "spk_1",
      "start": 513.0400000000001,
      "end": 519.36,
      "text": " the schema registry and then the archive and replay and for people who have a lot of events"
    },
    {
      "speakerLabel": "spk_1",
      "start": 519.36,
      "end": 524.88,
      "text": " in their system and they're trying to support a large number of developers and trying to share"
    },
    {
      "speakerLabel": "spk_1",
      "start": 524.88,
      "end": 529.52,
      "text": " knowledge around what kind of events they can listen to the schema is really useful for that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 529.52,
      "end": 534.4,
      "text": " useful for that EventBridge can discover what kind of events are coming through your system"
    },
    {
      "speakerLabel": "spk_1",
      "start": 535.36,
      "end": 538.4,
      "text": " and automatically register schemas for it and then you can use"
    },
    {
      "speakerLabel": "spk_1",
      "start": 540.48,
      "end": 546.56,
      "text": " EventBridge to generate code samples there are code bindings so if you're using an object"
    },
    {
      "speakerLabel": "spk_1",
      "start": 559.12,
      "end": 564.4,
      "text": " oriented typed language it can generate classes for you for example yeah that's really that's really neat for those absolutely yeah it can get really difficult if everything is dynamic and event driven if you don't have types it can get pretty difficult to kind of understand the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 564.96,
      "end": 571.2,
      "text": " structure of events and what what properties are supported and then you've got the archive so"
    },
    {
      "speakerLabel": "spk_1",
      "start": 571.2,
      "end": 575.6,
      "text": " EventBridge archive allows you to retain have retention on those events"
    },
    {
      "speakerLabel": "spk_1",
      "start": 577.44,
      "end": 582,
      "text": " so you don't lose them because they're otherwise ephemeral really once if nobody's listening if"
    },
    {
      "speakerLabel": "spk_1",
      "start": 582,
      "end": 587.2,
      "text": " there are no rules the events magically disappear but if you've got an archive you can actually"
    },
    {
      "speakerLabel": "spk_1",
      "start": 587.2,
      "end": 591.9200000000001,
      "text": " replay events so you can add rules change rules fix problems and then replay events which is"
    },
    {
      "speakerLabel": "spk_1",
      "start": 592.88,
      "end": 599.76,
      "text": " pretty good for resilience yeah should we go through the process of using EventBridge it's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 599.76,
      "end": 604.8000000000001,
      "text": " pretty simple right but uh i guess it depends what are the steps involved if you wanted to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 605.9200000000001,
      "end": 609.84,
      "text": " start sending and receiving events we talked about how to do it with sqs how do you do it with"
    },
    {
      "speakerLabel": "spk_0",
      "start": 616.72,
      "end": 621.44,
      "text": " EventBridge yeah i think it's a good thing to split the process into parts of sending events and receiving events because of course you care about sending events only when you are creating"
    },
    {
      "speakerLabel": "spk_0",
      "start": 621.44,
      "end": 628.5600000000001,
      "text": " your own custom events if you want to listen for aws events or third-party events you you just get"
    },
    {
      "speakerLabel": "spk_0",
      "start": 628.5600000000001,
      "end": 634.5600000000001,
      "text": " them so you just need to focus more on the receiving part so if you're trying to create your own custom"
    },
    {
      "speakerLabel": "spk_0",
      "start": 634.5600000000001,
      "end": 640.88,
      "text": " events basically the first thing you need to do is select a bus that you want to use there is a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 640.88,
      "end": 645.6800000000001,
      "text": " default bus so i will say that most of the time that's good enough but of course you also have an"
    },
    {
      "speakerLabel": "spk_0",
      "start": 645.68,
      "end": 653.04,
      "text": " option to create more specialized buses if you if you have to the other thing you have an api to send"
    },
    {
      "speakerLabel": "spk_0",
      "start": 653.04,
      "end": 657.76,
      "text": " events so you can do that of course through the sdk is probably the most common pattern or you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 657.76,
      "end": 664.3199999999999,
      "text": " can just call the api or the cli and there is a specific interface that you have to use but it's"
    },
    {
      "speakerLabel": "spk_0",
      "start": 664.3199999999999,
      "end": 670.24,
      "text": " pretty free form because you can structure the event in pretty much as you want is a big blob"
    },
    {
      "speakerLabel": "spk_0",
      "start": 670.24,
      "end": 677.12,
      "text": " of json and we'll talk in a second more about that and then finally when you want to listen to the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 677.12,
      "end": 683.84,
      "text": " event you'll need to create the rule and the rule also is another json object with properties so"
    },
    {
      "speakerLabel": "spk_0",
      "start": 683.84,
      "end": 691.28,
      "text": " let's zoom in into those two json objects so when you create an event there is kind of a best"
    },
    {
      "speakerLabel": "spk_0",
      "start": 691.28,
      "end": 696.32,
      "text": " practice that is pretty much something you will see also in the aws events and the third-party"
    },
    {
      "speakerLabel": "spk_0",
      "start": 696.32,
      "end": 703.36,
      "text": " events as well and what there are like fields that are expected to be there and they have a meaning"
    },
    {
      "speakerLabel": "spk_0",
      "start": 703.36,
      "end": 708.72,
      "text": " so and these are the ones you will be using also when matching for those events the first one is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 708.72,
      "end": 715.6800000000001,
      "text": " source and source pretty much describes who is creating the event so it could be your own service"
    },
    {
      "speakerLabel": "spk_0",
      "start": 715.6800000000001,
      "end": 720.8000000000001,
      "text": " maybe i don't know again in the example of an e-commerce you could be the order service so you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 720.8,
      "end": 726.4799999999999,
      "text": " could literally say source order dot service or something like that in the case of aws you will"
    },
    {
      "speakerLabel": "spk_0",
      "start": 726.4799999999999,
      "end": 735.52,
      "text": " see something like i don't know aws dot states for instance for step functions and for third parties"
    },
    {
      "speakerLabel": "spk_0",
      "start": 735.52,
      "end": 739.76,
      "text": " i expect that you have something similar for instance i don't know salesforce dot i don't"
    },
    {
      "speakerLabel": "spk_0",
      "start": 739.76,
      "end": 746.16,
      "text": " know pipeline maybe and then another field is detail type which is a little bit more descriptive"
    },
    {
      "speakerLabel": "spk_0",
      "start": 746.16,
      "end": 751.68,
      "text": " and it tries to describe the specific type of event that was generated by that source"
    },
    {
      "speakerLabel": "spk_0",
      "start": 752.56,
      "end": 759.76,
      "text": " for instance in our e-commerce example that can be order created in the case of aws sometimes they"
    },
    {
      "speakerLabel": "spk_0",
      "start": 759.76,
      "end": 765.52,
      "text": " tend to be a little bit more verbose and they have like entire sentences like step function execution"
    },
    {
      "speakerLabel": "spk_0",
      "start": 765.52,
      "end": 771.8399999999999,
      "text": " status change and it's like an entire sentence that you need to match on and finally the the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 771.84,
      "end": 778.64,
      "text": " most interesting part is the detail attribute and generally you can use that as you want meaning that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 778.64,
      "end": 783.12,
      "text": " it's an object and you can store inside that object all the data that you think is relevant"
    },
    {
      "speakerLabel": "spk_0",
      "start": 783.12,
      "end": 789.44,
      "text": " to describe that example and this is where it gets a little bit tricky because because you have a lot"
    },
    {
      "speakerLabel": "spk_0",
      "start": 789.44,
      "end": 796.32,
      "text": " of freedom you need to be careful and on one side you can say i'm gonna just store the minimum amount"
    },
    {
      "speakerLabel": "spk_0",
      "start": 796.32,
      "end": 802.24,
      "text": " of data that represents this event for instance i don't know if it's an order just the order id"
    },
    {
      "speakerLabel": "spk_0",
      "start": 803.0400000000001,
      "end": 810.24,
      "text": " on the other side you might sort all the data that represents that order right and and the two"
    },
    {
      "speakerLabel": "spk_0",
      "start": 810.24,
      "end": 816.72,
      "text": " sides are basically they will force a new different constraints if you go with a very many"
    },
    {
      "speakerLabel": "spk_0",
      "start": 816.72,
      "end": 822.24,
      "text": " very minimal approach maybe whoever is consuming the event will need to query different data sources"
    },
    {
      "speakerLabel": "spk_0",
      "start": 822.24,
      "end": 827.76,
      "text": " or fetch additional data somewhere else so that might be consuming that might be cost efficient"
    },
    {
      "speakerLabel": "spk_0",
      "start": 828.8,
      "end": 833.84,
      "text": " or on the other hand if you end up with very big messages that can also be a problem especially"
    },
    {
      "speakerLabel": "spk_0",
      "start": 833.84,
      "end": 839.44,
      "text": " if you are storing these messages you might incur an additional cost i'm not really sure if there"
    },
    {
      "speakerLabel": "spk_0",
      "start": 852.32,
      "end": 859.2800000000001,
      "text": " are limits on the sides of the payload but we'll talk more about limits later i believe it's the same as s and s and sqs actually so 256k for the for the whole message yeah so yeah be careful that also have to to respect that limit yeah absolutely yeah one suggestion there will be try to start"
    },
    {
      "speakerLabel": "spk_0",
      "start": 859.2800000000001,
      "end": 864,
      "text": " with something that is relatively small and that you think it makes sense and then if you realize"
    },
    {
      "speakerLabel": "spk_1",
      "start": 869.92,
      "end": 875.12,
      "text": " over time you need additional feeds you can always add them later yeah it's interesting when you talk about event driven architectures people say oh you should do event driven architectures because"
    },
    {
      "speakerLabel": "spk_1",
      "start": 875.12,
      "end": 881.92,
      "text": " it means you're then loosely coupled as if it's like a very clear yes no thing loosely coupled"
    },
    {
      "speakerLabel": "spk_1",
      "start": 881.92,
      "end": 888.16,
      "text": " or not but i've heard the term semantic coupling being used whether that means when you've got when"
    },
    {
      "speakerLabel": "spk_1",
      "start": 888.16,
      "end": 894.8,
      "text": " you're relying very tightly on the structure of an event and all its fields this is a form of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 894.8,
      "end": 901.04,
      "text": " semantic coupling so you still end up with it it's not the same as having you know location coupling"
    },
    {
      "speakerLabel": "spk_1",
      "start": 901.04,
      "end": 906.64,
      "text": " coupling or time coupling but it it means you're bound to the event that you're used to seeing so"
    },
    {
      "speakerLabel": "spk_1",
      "start": 906.64,
      "end": 912.56,
      "text": " it makes it very difficult for the producer of that message to change it and to change the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 918.3199999999999,
      "end": 924.4799999999999,
      "text": " structure of their data types over time so you really have to get that balance right yeah i think to to to all extents you should consider those messages as an interface right because as soon as"
    },
    {
      "speakerLabel": "spk_0",
      "start": 924.48,
      "end": 930.5600000000001,
      "text": " another service is starting to consume them then yeah you might break things if you suddenly change"
    },
    {
      "speakerLabel": "spk_1",
      "start": 936.64,
      "end": 942.64,
      "text": " dramatically the structure of the events yeah for example you mentioned that in the source field you might put the order service and so if somebody says oh well then i should match on the source"
    },
    {
      "speakerLabel": "spk_1",
      "start": 942.64,
      "end": 947.36,
      "text": " because i want to get order of events so i should match on the order service but it probably doesn't"
    },
    {
      "speakerLabel": "spk_1",
      "start": 947.36,
      "end": 950.96,
      "text": " make a lot of sense to match on the source a lot of the time because this is kind of coupling"
    },
    {
      "speakerLabel": "spk_1",
      "start": 950.96,
      "end": 957.36,
      "text": " to the producer you might it makes the detail type is usually a little bit more semantically"
    },
    {
      "speakerLabel": "spk_1",
      "start": 957.36,
      "end": 962.72,
      "text": " meaningful like order created or order created that sounds like a lifecycle event that you can"
    },
    {
      "speakerLabel": "spk_0",
      "start": 973.0400000000001,
      "end": 979.12,
      "text": " use and you don't need to match on the source then yeah what else can we add we mentioned that you can use this to communicate across domains so it could be a good way to do event choreography"
    },
    {
      "speakerLabel": "spk_0",
      "start": 979.12,
      "end": 987.44,
      "text": " and we gave you a few interesting details other interesting detail that could could change i"
    },
    {
      "speakerLabel": "spk_0",
      "start": 987.44,
      "end": 993.84,
      "text": " suppose the way you implement that the integration between services is that if you if you really need"
    },
    {
      "speakerLabel": "spk_0",
      "start": 993.84,
      "end": 1000.64,
      "text": " a semantic that is like exact ones processing of a particular event it's on you to to do that like"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1000.64,
      "end": 1004.96,
      "text": " you need to provide your own the duplication ids and you need to handle duplication because"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1004.96,
      "end": 1009.44,
      "text": " by default you get at least once delivery so you might get the same message more than once"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1010.4000000000001,
      "end": 1017.84,
      "text": " and finally another interesting detail is security you need to of course use iam and define all the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1017.84,
      "end": 1024.48,
      "text": " resource constraints but you can be very very granular and for instance you could say that is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1024.48,
      "end": 1031.52,
      "text": " not possible for instance to create a rule that is using i don't know certain detail types like"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1031.52,
      "end": 1036.8,
      "text": " you can limit also that the structure you can leave it based on the structure of the events"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1037.44,
      "end": 1042.32,
      "text": " and that that can be useful because of course if you have total freedom on listening for events"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1042.32,
      "end": 1047.44,
      "text": " that can become a side channel for services to to listen for information that they are generally"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1047.44,
      "end": 1052.16,
      "text": " not allowed to listen for so you you might be very strict in that regard as well"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1052.16,
      "end": 1058.96,
      "text": " yeah an interesting thing is the other side of the coin i suppose is how do you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1058.96,
      "end": 1063.2,
      "text": " actually write the rules do you want to tell us something about that howan"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1071.0400000000002,
      "end": 1077.52,
      "text": " yeah so when you create a rule you can create it using cloud formation or terraform or the api or the console and the other rule you will you'll define the pattern but you'll also define the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1077.52,
      "end": 1082.96,
      "text": " targets and for targets you know we mentioned you can target a lambda function you can target an"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1082.96,
      "end": 1090,
      "text": " sqsq or another event bus lots of other services but you can also do mappings so if you're want to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1090,
      "end": 1095.44,
      "text": " transform the data and if you're transforming it to a htb destination you know if you want to match"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1095.44,
      "end": 1101.12,
      "text": " this the required payload structure that's required you can do an input transformer on that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1101.12,
      "end": 1105.36,
      "text": " which allows you to extract the data and then you can do a map and then you can do a map"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1105.36,
      "end": 1110.9599999999998,
      "text": " and then you can do a map and then you can do a transform around that which allows you to extract"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1110.9599999999998,
      "end": 1115.6,
      "text": " out fields and map them into a different kind of a structure you can do that with any event actually"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1115.6,
      "end": 1123.4399999999998,
      "text": " and any destination you've also got destinations that you can configure that are specific to an"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1123.4399999999998,
      "end": 1131.36,
      "text": " individual service and examples of that would be kinesis or sqs so with kinesis and sqs5 as we"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1131.36,
      "end": 1136.08,
      "text": " specify at what level you want to order guarantees so with kinesis you might put in a partition key"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1136.08,
      "end": 1142.7199999999998,
      "text": " and with sqs fifo you could put in the message group id and when you write an event bridge rule"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1142.7199999999998,
      "end": 1147.4399999999998,
      "text": " the targets one of those things you can say this is the you can say this is the field that i want"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1147.4399999999998,
      "end": 1152.9599999999998,
      "text": " to become the partition key or the message group id so it makes sure that if you've got events"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1152.9599999999998,
      "end": 1160.6399999999999,
      "text": " coming in through event bridge you can specify the order thing you want or the shard essentially that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1160.64,
      "end": 1165.8400000000001,
      "text": " would be processed now remember that event bridge doesn't give you any order guarantees because it's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1166.48,
      "end": 1173.0400000000002,
      "text": " it's not that kind of service so you don't have order guarantees on the input side so it's really"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1173.0400000000002,
      "end": 1179.1200000000001,
      "text": " more or less about doing best effort ordering or just controlling the shard they get allocated to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1179.1200000000001,
      "end": 1184.4,
      "text": " so that you can process them concurrently that's really the the benefit there"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1184.4,
      "end": 1189.52,
      "text": " and another example of that would be ecs so you can fire off an ecs task so run a container in"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1189.52,
      "end": 1195.0400000000002,
      "text": " response to an event and you ecs task configuration in a rule will allow you to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1195.0400000000002,
      "end": 1200.96,
      "text": " specify what container image to use what the task definition is all of that stuff so there's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1201.68,
      "end": 1206.88,
      "text": " so much you can do with this it's worth looking into the cloud formation documentation i always"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1206.88,
      "end": 1209.76,
      "text": " find that's a good way to see what are all the configuration parameters for these things"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1209.76,
      "end": 1213.76,
      "text": " yeah it really does allow you to integrate anything with almost anything yeah the cool"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1218.72,
      "end": 1223.2,
      "text": " thing about that is that most of the time you don't i mean it's so configurable that you just need to write the right configuration to achieve a good integration you don't even need for instance"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1223.2,
      "end": 1228.8,
      "text": " to write a lambda to reshape the data and call the destination service which is under you maybe"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1228.8,
      "end": 1233.92,
      "text": " whole thing you would need to do but because you have such flexibility you can probably build"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1233.92,
      "end": 1239.04,
      "text": " sophisticated integration with the data and then you can do it with the data and then you can do"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1239.04,
      "end": 1245.52,
      "text": " sophisticated integration without provisioning any like compute functionality it's just event"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1251.28,
      "end": 1256.32,
      "text": " bridge configuration yep and that that's that's a good thing because okay it might be a little bit more difficult to troubleshoot an input transformer than a lambda function that's that's the trade-off"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1257.2,
      "end": 1260.96,
      "text": " but you don't have the latency and the extra lambda function to manage so"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1262.3999999999999,
      "end": 1266.6399999999999,
      "text": " you just got to pick your battle i suppose and figure out which is best for your use case"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1266.64,
      "end": 1270.72,
      "text": " so since i mentioned latency should we start talking about limitations and constraints and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1277.8400000000001,
      "end": 1283.44,
      "text": " performance characteristics yes i think that's a good follow-up to how do you use event bridge yeah i think that the main one is latency like you you said that already but how how different"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1283.44,
      "end": 1289.0400000000002,
      "text": " it is for instance from sns where you have very small latency like we're talking about 30"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1289.0400000000002,
      "end": 1296.0800000000002,
      "text": " milliseconds i believe in the case of sns with event bridge is a little bit unwavy but i think"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1296.08,
      "end": 1302.8,
      "text": " it's generally around alpha second which is yeah quite different from sns right sns is very"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1302.8,
      "end": 1308.3999999999999,
      "text": " performant event bridges suppose you need to start from the premise that you don't really care about"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1308.3999999999999,
      "end": 1314.1599999999999,
      "text": " extremely fast delivery it's more it's gonna happen relatively fast but not like milliseconds fast"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1320.24,
      "end": 1324.72,
      "text": " yeah i think this is this is exactly i mean this is one of the rules where you can say am i going to use event bridge if you need strict performance and latency high throughput"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1324.72,
      "end": 1333.04,
      "text": " you have to go with sns or one of the streaming solutions but if if you're talking about okay"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1333.04,
      "end": 1337.1200000000001,
      "text": " i just need to react to business events and process them and it doesn't have to be like if"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1337.1200000000001,
      "end": 1345.52,
      "text": " you want to fulfill an order half a second is probably not a significant latency in the grand"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1345.52,
      "end": 1349.76,
      "text": " scheme of things you know if you're talking about package delivery but if you're talking about a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1349.76,
      "end": 1356.08,
      "text": " user who's clicked an action and maybe you're going to do some processing on it they're waiting"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1356.08,
      "end": 1361.76,
      "text": " in the web browser on a mobile device and they're waiting for a green tick to show that something"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1361.76,
      "end": 1366.72,
      "text": " has been processed you might think twice about event bridge in that kind of flow because"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1367.36,
      "end": 1371.36,
      "text": " the the guarantees like the aws documentation says typically around half a second"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1378.24,
      "end": 1383.68,
      "text": " so it's not exactly confidence inspiring if you're looking for real-time event processing so yeah i suppose it could be a good idea that becomes especially true if you have like a cascade of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1383.68,
      "end": 1389.36,
      "text": " events events depending on one another of course that that effect can compound so yeah be be even"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1395.2,
      "end": 1401.6,
      "text": " more careful if you have that kind of situation i would still say that for a lot of you know across domain events and micro even inter microservice communication this should be"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1401.6,
      "end": 1412,
      "text": " sufficient in vast majority of cases and i would i would recommend against using this latency limit"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1412,
      "end": 1418.3999999999999,
      "text": " as a false argument just to reject event bridge and go with something that could be really more"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1418.3999999999999,
      "end": 1425.4399999999998,
      "text": " complex because if event bridge is so simple and manages so much for you that it will it could has"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1425.4399999999998,
      "end": 1430.32,
      "text": " the potential to save you massive amounts of engineering time so it's worth sticking with it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1430.32,
      "end": 1436.24,
      "text": " and only if you really need to tweak performance you know you might need to deal with optimizations"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1444.8799999999999,
      "end": 1449.9199999999998,
      "text": " for specific cases yeah there are other limitations this is what i'm mentioning quickly but nothing extremely special for instance you have invocation quotas they are slightly different depending on"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1449.9199999999998,
      "end": 1456.96,
      "text": " the region so watch out for that they can also be increased if you need to have more invocations"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1456.96,
      "end": 1463.68,
      "text": " also there is a limit on the number of put events that you can do over a certain period of time"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1464.32,
      "end": 1470.64,
      "text": " there is a number i think it's 300 rules per bus but it's only you can get increased if you need"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1470.64,
      "end": 1476,
      "text": " to create more rules and also for every single rule you create you have up to five different"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1476,
      "end": 1483.2,
      "text": " targets that you can trigger if that rule matches yeah in terms of pricing is there anything"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1492.64,
      "end": 1498,
      "text": " interesting worth mentioning but the pricing for sending events is pretty straightforward so i think for every region you're looking at a dollar for every million events and that's whether"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1498,
      "end": 1505.3600000000001,
      "text": " it's custom events or third-party events or aws events so a dollar for a million events you have"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1518.4,
      "end": 1522.56,
      "text": " in the case of ws events that counts only for the ones that you need to explicitly enable like the s3 objects but yeah i think not all of them are actually charged right absolutely yeah they're sent by default they're sent already even if you don't know it so that's true you're not going to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1522.56,
      "end": 1528.24,
      "text": " be billed for that there is an additional cost though for things like http destinations it's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1528.24,
      "end": 1534.72,
      "text": " like a supplemental cost of 20 cents for a million deliveries and those features we talked about like"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1534.72,
      "end": 1539.04,
      "text": " archive and replay those are the areas that you might want to be a little bit more careful about"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1539.04,
      "end": 1544.08,
      "text": " when looking at pricing because if you're archiving events sometimes you don't notice that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1544.08,
      "end": 1549.2,
      "text": " events are the volume is escalating and if you've got millions of events you're going to be charged"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1549.2,
      "end": 1556.08,
      "text": " per gigabyte of archive per month so that that's an ongoing cost that will escalate over time"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1557.12,
      "end": 1563.44,
      "text": " and replay you'll get charged by the events processed replay is probably not something that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1563.44,
      "end": 1569.44,
      "text": " you're going to do as part of a programmatic workflow it's probably more likely to be done as"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1569.44,
      "end": 1577.92,
      "text": " part of remediation in the event of a failure so it's just important to be aware of and there's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1577.92,
      "end": 1582.88,
      "text": " also a charge for a schema registry as well in terms of events ingested when you're discovering"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1582.88,
      "end": 1591.1200000000001,
      "text": " schemas automatically so that said that's the pricing spiel done and i think one of the one of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1591.12,
      "end": 1595.76,
      "text": " the things that our channel is challenging with all event driven systems is how do you test it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1596.8799999999999,
      "end": 1603.28,
      "text": " and you've been reading some pretty good articles on this lechano and i know paul swale has covered"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1603.28,
      "end": 1608,
      "text": " this in in detail a couple of times what do you think are the best recommendations there"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1614.1599999999999,
      "end": 1619.76,
      "text": " yeah i think at least for me the main pain point is to make sure that the rules that i write like the patterns are actually doing what i think they should be doing because this is of course"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1619.76,
      "end": 1627.68,
      "text": " a json based language with its own nuances like you have a lot of power but you need to learn"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1627.68,
      "end": 1634.08,
      "text": " how to use the different constructs to do that the pattern matching and of course you you need"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1634.08,
      "end": 1638.48,
      "text": " to find a good way to test if your rule is actually correct and i found that that there is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1638.48,
      "end": 1642.8799999999999,
      "text": " a little bit of friction maybe something to be improved in aws in terms of the tools you could"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1642.8799999999999,
      "end": 1647.6,
      "text": " get to actually get the reassurance that your patterns are actually doing what you want them to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1647.6,
      "end": 1655.76,
      "text": " do and so there are really a lot of great ways to do that in aws what i discovered is that there is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1655.76,
      "end": 1662.56,
      "text": " an api called test event pattern that you could use either from the cli or from an sdk and with"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1662.56,
      "end": 1669.12,
      "text": " that api what you can do is send an example event and your pattern and that api will just tell you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1669.12,
      "end": 1675.6799999999998,
      "text": " true or false based on is your rule actually matching that particular example of event so"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1675.68,
      "end": 1680.24,
      "text": " that could be a good way of testing things it's just a little bit annoying that you need to write"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1681.04,
      "end": 1686.24,
      "text": " either as code through the sdk or if you want to write it through the cli like it's it's very hard"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1686.24,
      "end": 1693.3600000000001,
      "text": " to write json in the cli especially for big events or rules so maybe an area where somebody can write"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1693.3600000000001,
      "end": 1698.24,
      "text": " a little tool or a little ui to do that that would be definitely useful at least for me"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1699.1200000000001,
      "end": 1704.48,
      "text": " maybe aws itself could do that that would be amazing then in the article that you mentioned"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1704.48,
      "end": 1711.28,
      "text": " from paul it's actually a really good article and it goes in depth in terms of all the things that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1711.28,
      "end": 1716,
      "text": " could possibly go wrong when you start to use event bridge like from the moment you publish"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1716,
      "end": 1721.6,
      "text": " are you actually able to publish and if not why yeah the moment you try to consume the message"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1721.6,
      "end": 1726.8,
      "text": " are you actually receiving the message and if not why and then after you receive the message"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1726.8,
      "end": 1731.28,
      "text": " are you actually processing incorrectly and if you fail to process it what can possibly happen"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1731.28,
      "end": 1736,
      "text": " so that that's an interesting article and if you are interested in all these possible edge cases we"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1736,
      "end": 1741.92,
      "text": " recommend you to check it out there are another couple of tools that can help you in terms of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1741.92,
      "end": 1747.68,
      "text": " troubleshooting where whether you are actually delivering like from source to destination"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1747.68,
      "end": 1754.3999999999999,
      "text": " correctly one is something called event bridge cli again we will have the link in the description"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1754.3999999999999,
      "end": 1759.6,
      "text": " and this event bridge cli it's a tool written in go i believe that it's very interesting because"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1759.6,
      "end": 1766.9599999999998,
      "text": " you just run it locally and it will provision in your account a rule that you are actually defined"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1766.9599999999998,
      "end": 1772.24,
      "text": " that that's the one you want to test but it will automatically dispatch that rule into sqs"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1772.24,
      "end": 1777.9199999999998,
      "text": " and then it's going to create for you it's going to poll at the cli so you get like an interactive"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1777.9199999999998,
      "end": 1782.8,
      "text": " cli it's going to keep pulling from that queue so you can start to try to fire events and see"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1782.8,
      "end": 1788.1599999999999,
      "text": " if they appear in your local terminal so it's a very powerful and convenient way to test that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1788.16,
      "end": 1793.8400000000001,
      "text": " to test that your patterns and your events are actually connected correctly together and i think"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1793.8400000000001,
      "end": 1799.3600000000001,
      "text": " there is another tool which is probably similar from lumigo but i haven't used that so we'll put"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1799.3600000000001,
      "end": 1805.3600000000001,
      "text": " the link in the description as well other interesting tool are event bridge atlas and event"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1805.3600000000001,
      "end": 1812,
      "text": " bridge canon which help you out as well with writing the events and testing them and sharing"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1812,
      "end": 1819.12,
      "text": " them in a team so i haven't used them i haven't used them extensively so i cannot give you a lot"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1824.32,
      "end": 1829.92,
      "text": " of detail but definitely interesting to to check them out yeah event bridge atlas and event bridge canon both come from david boin who's also tweets and writes a lot about event bridge and has some"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1829.92,
      "end": 1837.76,
      "text": " really interesting tools so yeah definitely worth checking those out um should we talk about"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1837.76,
      "end": 1844.64,
      "text": " integration with sqs because i know we've got um we talked about dlq's last last time with sqs"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1844.64,
      "end": 1850.8799999999999,
      "text": " i know that um you can use dlq with event bridge which is really good because event bridge doesn't"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1850.8799999999999,
      "end": 1857.12,
      "text": " give you reliability built in if you don't get to catch the event if you missed it it's it's gone"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1857.12,
      "end": 1862.8,
      "text": " right it can be in an archive but it's essentially gone but you it does have retry policies you can"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1862.8,
      "end": 1869.6,
      "text": " configure retry rules in your rule and you can set a dlq as well then your undelivered messages will"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1869.6,
      "end": 1877.36,
      "text": " go to sqs um but when do you know so here's an interesting one when do you decide to process"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1877.36,
      "end": 1883.28,
      "text": " things directly using a target that might be a lambda function or when should you put an sq"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1889.76,
      "end": 1894.72,
      "text": " sq in between those two things so that you get that extra piece of resiliency yeah this is this is something that suppose we mentioned also in the in the previous episode about sqs that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1894.72,
      "end": 1900.8799999999999,
      "text": " sqs can be used in general to to give you that extra peace of mind that a message is actually"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1900.8799999999999,
      "end": 1908,
      "text": " being recorded and then you can consume you can retry so i think that that's that should answer"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1908,
      "end": 1912.08,
      "text": " your question right whenever you want to have that use case that when you really care about"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1912.08,
      "end": 1917.44,
      "text": " a message and you want to be sure that it's being processed i think it's worth putting an sqs in"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1917.44,
      "end": 1923.76,
      "text": " between and then consuming the message through sqs rather than letting event breach invoke directly"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1923.76,
      "end": 1930.88,
      "text": " your target in other cases where maybe you don't really care that much you can afford to lose a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1930.88,
      "end": 1937.6000000000001,
      "text": " message or two probably it's not worth it you can just keep that integration and yeah and go ahead"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1953.52,
      "end": 1959.6000000000001,
      "text": " with that yeah that's good god do you need best effort durability or most time durability i guess i guess isn't it okay cool what else should we cover relating to event bridge i think i will just mention few additional resources i i really like the work that sheen"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1959.6000000000001,
      "end": 1965.76,
      "text": " bristles from the lego group has been doing around event bridge so definitely check out his blog"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1965.76,
      "end": 1970.88,
      "text": " again we'll have a link in the description there are i think six or seven different articles that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1970.88,
      "end": 1976.72,
      "text": " cover pretty in-depth like tutorial style how to do different things with event bridge and also"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1976.72,
      "end": 1982.3200000000002,
      "text": " there is a video that where he's talking a lot about different characteristics of event bridge"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1988.64,
      "end": 1993.1200000000001,
      "text": " we'll have a link for that as well and i think that's really good it's good to see how i think sheen in that talk gives good examples of how they structure their events and they've got a different"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1993.1200000000001,
      "end": 1996.88,
      "text": " a different style to what we mentioned in the detail which is really interesting and really"
    },
    {
      "speakerLabel": "spk_0",
      "start": 2002.8000000000002,
      "end": 2008.88,
      "text": " worth watch so yeah definitely recommend that and yeah i think with this you get a pretty good overview of what you can do with event bridge how to use it what to watch out for so this is it for"
    },
    {
      "speakerLabel": "spk_0",
      "start": 2008.88,
      "end": 2014.88,
      "text": " this episode but make sure to follow and subscribe because in the next episodes we'll continue the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 2014.88,
      "end": 2022.48,
      "text": " series about event systems we'll be talking about sns kinesis and gafka so yeah stay tuned we'll"
    },
    {
      "speakerLabel": "spk_0",
      "start": 2022.48,
      "end": 2039.52,
      "text": " we'll talk more about this stuff bye"
    }
  ]
}