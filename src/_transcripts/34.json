{
  "speakers": {
    "spk_0": "spk_0",
    "spk_1": "spk_1"
  },
  "segments": [
    {
      "speakerLabel": "spk_0",
      "start": 0,
      "end": 4.5600000000000005,
      "text": " How do you get the most out of CloudWatch alarms? Last time we covered CloudWatch metrics and with"
    },
    {
      "speakerLabel": "spk_0",
      "start": 4.5600000000000005,
      "end": 8.88,
      "text": " CloudWatch metrics you can get out of the box metrics for AWS services and you can create your"
    },
    {
      "speakerLabel": "spk_0",
      "start": 8.88,
      "end": 13.52,
      "text": " own custom metrics for technical data points as well as business level metrics. But in this"
    },
    {
      "speakerLabel": "spk_0",
      "start": 13.52,
      "end": 17.28,
      "text": " episode we're going to discuss what can you do with alarms? So what are the different types of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 17.28,
      "end": 21.84,
      "text": " alarms? How do you create them? What can you do when your alarm gets triggered? We're going to go"
    },
    {
      "speakerLabel": "spk_0",
      "start": 21.84,
      "end": 26.32,
      "text": " through a few useful examples, types of alarms you can create and we'll also talk about some of the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 26.32,
      "end": 31.68,
      "text": " drawbacks of CloudWatch alarms and tips to overcome them. My name is Eoin, I'm joined by Luciano and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 31.68,
      "end": 44.56,
      "text": " this is the AWS Bites podcast. Last time that we discussed CloudWatch metrics and one of the most"
    },
    {
      "speakerLabel": "spk_0",
      "start": 44.56,
      "end": 49.519999999999996,
      "text": " important things you can do with those metrics is to create alarms and that is our topic for today."
    },
    {
      "speakerLabel": "spk_0",
      "start": 49.519999999999996,
      "end": 53.519999999999996,
      "text": " Luciano what are the different types of alarms you can create with CloudWatch alarms?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 53.52,
      "end": 59.52,
      "text": " Yeah there are essentially two types of alarms. What we call metric alarm is the first time which is basically"
    },
    {
      "speakerLabel": "spk_1",
      "start": 59.52,
      "end": 64.8,
      "text": " an alarm based on a single metric and if you want to make it a little bit fancier you can also use"
    },
    {
      "speakerLabel": "spk_1",
      "start": 64.8,
      "end": 71.2,
      "text": " mathematical expression to basically announce the value that you extrapolate for the metric and do"
    },
    {
      "speakerLabel": "spk_1",
      "start": 71.2,
      "end": 76.48,
      "text": " some calculation with it. And another type of alarms is what we can call composite alarms"
    },
    {
      "speakerLabel": "spk_1",
      "start": 77.04,
      "end": 82.08000000000001,
      "text": " and those are effectively what the name says so you take different alarms and you combine them"
    },
    {
      "speakerLabel": "spk_1",
      "start": 82.08,
      "end": 88,
      "text": " together and you can build additional alarm on top of that. So as an example you can say if this"
    },
    {
      "speakerLabel": "spk_1",
      "start": 88,
      "end": 93.67999999999999,
      "text": " alarm fire and this other alarm fire I want to fire another alarm. What do we want to say first"
    },
    {
      "speakerLabel": "spk_1",
      "start": 93.67999999999999,
      "end": 99.84,
      "text": " how do metrics work? Maybe we can give an example of how to create one alarm."
    },
    {
      "speakerLabel": "spk_0",
      "start": 99.84,
      "end": 105.2,
      "text": " Yeah that sounds good so there's a couple of things you need to specify when you create one. First of all you pick your"
    },
    {
      "speakerLabel": "spk_0",
      "start": 105.2,
      "end": 110.8,
      "text": " metric. If we're just talking about a simple metric alarm example let's say we want to monitor CPU"
    },
    {
      "speakerLabel": "spk_0",
      "start": 110.8,
      "end": 117.03999999999999,
      "text": " usage on our EC2 instances then we'll pick the metric AWS slash EC2 that's the namespace"
    },
    {
      "speakerLabel": "spk_0",
      "start": 117.67999999999999,
      "end": 122.8,
      "text": " and the metric is CPU utilization. So once you pick the metric then you need to specify your"
    },
    {
      "speakerLabel": "spk_0",
      "start": 122.8,
      "end": 129.28,
      "text": " threshold so are you going to put an alarm on 90 utilization for example and you pick then a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 129.28,
      "end": 135.12,
      "text": " comparison operator greater than greater or equal to less than and then you can specify the period."
    },
    {
      "speakerLabel": "spk_0",
      "start": 135.12,
      "end": 140.72,
      "text": " So we know from our last episode on metrics that you have a period of say one minute five minutes"
    },
    {
      "speakerLabel": "spk_0",
      "start": 140.72,
      "end": 145.68,
      "text": " 15 minutes so what do you what period do you want your alarm to be based on and then the statistical"
    },
    {
      "speakerLabel": "spk_0",
      "start": 145.68,
      "end": 151.52,
      "text": " function. Are you looking at the average over that minute the maximum and then you can specify a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 151.52,
      "end": 156.48,
      "text": " number of periods. So what you're doing then is you're saying to cloud watch I want you to look at"
    },
    {
      "speakerLabel": "spk_0",
      "start": 157.12,
      "end": 163.04,
      "text": " the average CPU utilization over three minute periods for example then you can specify how"
    },
    {
      "speakerLabel": "spk_0",
      "start": 163.04,
      "end": 167.84,
      "text": " many data points of those three will trigger an alarm. So you could say three out of three"
    },
    {
      "speakerLabel": "spk_0",
      "start": 167.84,
      "end": 174.08,
      "text": " if all of the if the threshold has been breached for three successive data points then alarm or two"
    },
    {
      "speakerLabel": "spk_0",
      "start": 174.08,
      "end": 178.96,
      "text": " out of three or one out of three or you could just have one data point it's completely up to you and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 178.96,
      "end": 184.08,
      "text": " how sensitive you want this alarm to be. What that gives you then is an alarm on CPU utilization if"
    },
    {
      "speakerLabel": "spk_0",
      "start": 184.08,
      "end": 188.56,
      "text": " it's above or equal 90 percent on average for at least two minutes of the last three minutes say"
    },
    {
      "speakerLabel": "spk_0",
      "start": 189.68,
      "end": 193.44,
      "text": " and then the last thing you need to be considered is if you want to be alerted. So if you do want"
    },
    {
      "speakerLabel": "spk_0",
      "start": 193.44,
      "end": 197.76,
      "text": " to be alerted you'll probably need an SNS topic and alerts will be sent to that topic and then"
    },
    {
      "speakerLabel": "spk_0",
      "start": 197.76,
      "end": 202.16,
      "text": " you have a lot of options in terms of what you do with those messages otherwise you can just see the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 202.16,
      "end": 208.95999999999998,
      "text": " messages in the AWS management console or from the CLI. It's not ideal and not very reactive you have"
    },
    {
      "speakerLabel": "spk_0",
      "start": 208.95999999999998,
      "end": 214,
      "text": " to be a lot more proactive so you have to get the balance right I guess get the right amount of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 214,
      "end": 218.23999999999998,
      "text": " noise but not not get too noisy. We give one example there right on CPU utilization are there"
    },
    {
      "speakerLabel": "spk_0",
      "start": 218.23999999999998,
      "end": 224.32,
      "text": " any other use cases you can think of that call to mind?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 224.32,
      "end": 230.32,
      "text": " Yeah just a few that come to mind are for instance if you're monitoring a load balancer you can check the latency and see if that latency"
    },
    {
      "speakerLabel": "spk_1",
      "start": 230.32,
      "end": 236.16,
      "text": " is going above a certain threshold for a certain amount of time. You can also create billing alerts"
    },
    {
      "speakerLabel": "spk_1",
      "start": 236.16,
      "end": 240.56,
      "text": " these are probably some of the most useful ones and some of the ones you should create"
    },
    {
      "speakerLabel": "spk_1",
      "start": 240.56,
      "end": 247.44,
      "text": " as soon as possible so with those you can monitor if your projected expenditure is going above a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 247.44,
      "end": 251.6,
      "text": " certain threshold that probably is going to be like your billing budget or something like that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 251.6,
      "end": 256.88,
      "text": " and you can use that to stop some services and see maybe if there is a bug that is causing you to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 256.88,
      "end": 261.84,
      "text": " to spend a lot of money on AWS and react before that bill becomes very very big."
    },
    {
      "speakerLabel": "spk_1",
      "start": 262.71999999999997,
      "end": 267.84,
      "text": " And other ones for instance that I've seen to be very very useful when building APIs"
    },
    {
      "speakerLabel": "spk_1",
      "start": 267.84,
      "end": 274.64,
      "text": " you can monitor API gateway and see the number of 500 errors and you can have alarms that check"
    },
    {
      "speakerLabel": "spk_1",
      "start": 274.64,
      "end": 280.24,
      "text": " maybe if you have an increased error rate that way and those can be useful to spot bugs for instance."
    },
    {
      "speakerLabel": "spk_1",
      "start": 280.24,
      "end": 286.96000000000004,
      "text": " So I think we will yeah we have more examples in in the next sections but I think those are"
    },
    {
      "speakerLabel": "spk_1",
      "start": 286.96000000000004,
      "end": 292.24,
      "text": " very good example to understand just different kinds of alarms that you can create not just for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 292.24,
      "end": 297.6,
      "text": " application errors but also for billing or for latency so it's a range of different things you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 297.6,
      "end": 302.64,
      "text": " can do with them."
    },
    {
      "speakerLabel": "spk_0",
      "start": 302.64,
      "end": 307.76,
      "text": " Yeah it might be worth mentioning that there's we think about alarms as alerts but alarms are always in one of three states so the state you want them to be is in the okay state"
    },
    {
      "speakerLabel": "spk_0",
      "start": 307.76,
      "end": 312.71999999999997,
      "text": " the state you fear the most is the alarm state and then the third state is actually somewhere in"
    },
    {
      "speakerLabel": "spk_0",
      "start": 312.71999999999997,
      "end": 317.68,
      "text": " between that's called insufficient data and that that's the state it gets into if you don't have"
    },
    {
      "speakerLabel": "spk_0",
      "start": 317.68,
      "end": 322.15999999999997,
      "text": " enough metrics for that much to be able to determine which state it's actually in. So often"
    },
    {
      "speakerLabel": "spk_0",
      "start": 322.15999999999997,
      "end": 325.68,
      "text": " when you create a metric for the first time if you don't have enough data it'll end up in insufficient"
    },
    {
      "speakerLabel": "spk_0",
      "start": 325.68,
      "end": 331.68,
      "text": " data so that's what that's about and any alert so if you're talking about SNS alerts or anything like"
    },
    {
      "speakerLabel": "spk_0",
      "start": 331.68,
      "end": 337.12,
      "text": " that you can alert on any state not just the alarm state. So that's a good example of that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 337.12,
      "end": 342.08,
      "text": " just the alarm state. Yeah that's a alert me when it goes on alarm but also alert me alert me when it"
    },
    {
      "speakerLabel": "spk_0",
      "start": 342.08,
      "end": 347.04,
      "text": " goes back into okay."
    },
    {
      "speakerLabel": "spk_1",
      "start": 347.04,
      "end": 352.32,
      "text": " That's a very good clarification because the naming can be a little bit confusing I think generally when we talk about alarms we think about the alarm state so when things are"
    },
    {
      "speakerLabel": "spk_1",
      "start": 352.32,
      "end": 358.56,
      "text": " bad but in AWS CloudWatch the term alarm is just that configuration and then you need to look at"
    },
    {
      "speakerLabel": "spk_1",
      "start": 358.56,
      "end": 363.36,
      "text": " the state to understand yes are we in a good situation are we in a bad situation or you can"
    },
    {
      "speakerLabel": "spk_1",
      "start": 363.36,
      "end": 368.24,
      "text": " as you said you can even look for are we just recovering from a bad situation because you can"
    },
    {
      "speakerLabel": "spk_1",
      "start": 368.24,
      "end": 375.2,
      "text": " create alarms that tell you you sorry you can create notifications that tell you okay you were"
    },
    {
      "speakerLabel": "spk_1",
      "start": 375.2,
      "end": 380.40000000000003,
      "text": " bad before you were in an alarm state before and now we are finally back into okay state and if"
    },
    {
      "speakerLabel": "spk_1",
      "start": 380.40000000000003,
      "end": 385.52000000000004,
      "text": " you use things like chatbots we'll mention some of them later on that can be very useful to see"
    },
    {
      "speakerLabel": "spk_1",
      "start": 385.52000000000004,
      "end": 390.40000000000003,
      "text": " because maybe if you have a noisy configuration sometimes you realize okay this thing triggered"
    },
    {
      "speakerLabel": "spk_1",
      "start": 390.4,
      "end": 396.08,
      "text": " an event I'm seeing an issue but then immediately afterwards I see that the issue resolved itself"
    },
    {
      "speakerLabel": "spk_1",
      "start": 396.08,
      "end": 399.28,
      "text": " and that means you don't really need to do anything maybe you can tweak a little bit your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 399.28,
      "end": 403.91999999999996,
      "text": " configuration to reduce the noise but you don't have like an immediate need to fix anything."
    },
    {
      "speakerLabel": "spk_0",
      "start": 405.35999999999996,
      "end": 411.52,
      "text": " What do you think is the best way to actually get notified then if you want to react in a reasonable"
    },
    {
      "speakerLabel": "spk_0",
      "start": 411.52,
      "end": 415.91999999999996,
      "text": " time frame and you want to also avoid noise what's the best tooling that you can apply for"
    },
    {
      "speakerLabel": "spk_0",
      "start": 415.92,
      "end": 422.8,
      "text": " notifications?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 422.8,
      "end": 430.56,
      "text": " Yeah so we there are different ways that you can basically be notified when when the state of an alarm changes and probably the most common that I used to see in the past"
    },
    {
      "speakerLabel": "spk_1",
      "start": 431.20000000000005,
      "end": 437.12,
      "text": " is not necessarily the one I would recommend is sns to an email so you get you configure your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 437.12,
      "end": 442.56,
      "text": " alarm and you say every time this condition happens send an sns event and then from that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 442.56,
      "end": 447.68,
      "text": " sns event you can dispatch the event somewhere else so the most common one I've seen in the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 447.68,
      "end": 452.8,
      "text": " past was email but I am not a big fan of that one because I remember a few years ago when I"
    },
    {
      "speakerLabel": "spk_1",
      "start": 452.8,
      "end": 458.88,
      "text": " was trying to use this you will literally get a big wall of text on an email and it's not the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 458.88,
      "end": 464.4,
      "text": " most intuitive way of understanding when you have to go in an emergency and try to fix something"
    },
    {
      "speakerLabel": "spk_1",
      "start": 464.4,
      "end": 468.4,
      "text": " like it takes a while for you to process even what's just written there in the email and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 468.4,
      "end": 475.44,
      "text": " make sense of it so there are more sophisticated ways today and one is like totally custom you can"
    },
    {
      "speakerLabel": "spk_1",
      "start": 475.44,
      "end": 480.64,
      "text": " just send the sns to a lambda and then you can do whatever you want with it and that really depends"
    },
    {
      "speakerLabel": "spk_1",
      "start": 480.64,
      "end": 486.08,
      "text": " on how you structure your teams and your operations for instance if you use tools like pager duty you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 486.08,
      "end": 492.23999999999995,
      "text": " could use the lambda to send the event to pager duty and then manage the incident that way or you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 492.24,
      "end": 498.72,
      "text": " can build the lambda to integrate with other systems that you might want to use another"
    },
    {
      "speakerLabel": "spk_1",
      "start": 498.72,
      "end": 504.08,
      "text": " interesting way if you for instance want to use a chat platform because maybe you do that kind of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 504.08,
      "end": 509.44,
      "text": " operation based on slack or teams or something else there is of course you can do it with a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 509.44,
      "end": 513.12,
      "text": " lambda you can do it yourself and build the integration that way but there is a tool from"
    },
    {
      "speakerLabel": "spk_1",
      "start": 513.12,
      "end": 520.96,
      "text": " aws called aws chatbot so you can send the alarm from sns to aws chatbot and aws chatbot has already"
    },
    {
      "speakerLabel": "spk_1",
      "start": 520.96,
      "end": 526.72,
      "text": " built in a lot of nice things like you get a very good user experience when you integrate it with"
    },
    {
      "speakerLabel": "spk_1",
      "start": 526.72,
      "end": 532.96,
      "text": " slack or chime you get very nice preview of the message describing what's what the incident is"
    },
    {
      "speakerLabel": "spk_1",
      "start": 532.96,
      "end": 538.64,
      "text": " about the only issues that as far as i know right now microsoft teams is not supported yeah and and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 538.64,
      "end": 544.08,
      "text": " i've been working in many companies using microsoft teams as the primary system so in that case you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 549.84,
      "end": 554.88,
      "text": " are a little bit on your own to find other tools or to write your own integration yeah i really like the chatbot experience actually it's pretty easy to set up once you've got your topic chatbot"
    },
    {
      "speakerLabel": "spk_0",
      "start": 554.88,
      "end": 561.2,
      "text": " is pretty slick for setting up and writing your own integration into slack and has become a little"
    },
    {
      "speakerLabel": "spk_0",
      "start": 561.2,
      "end": 565.52,
      "text": " bit more involved you have to create kind of create an app now you can't just fire data at"
    },
    {
      "speakerLabel": "spk_0",
      "start": 565.52,
      "end": 569.6,
      "text": " a webhook at least they don't want you to so aws chatbot has kind of solved all that for you and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 581.12,
      "end": 585.9200000000001,
      "text": " gives you a really nice message so what do we do after we get notified what can we do with that in janitor that's a good question so you can have all these i suppose manual intervention is going to be completely dependent on the kind of alarm you're dealing with you know um but there's also some"
    },
    {
      "speakerLabel": "spk_0",
      "start": 585.9200000000001,
      "end": 591.36,
      "text": " automated interventions so apart from sns there's there's some other actions you can take that are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 591.36,
      "end": 599.2,
      "text": " actually like automated remediation and you could like you say you can use sns to lambda or you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 599.2,
      "end": 604.32,
      "text": " could target you know systems manager automation for remediation there's so much you could do there"
    },
    {
      "speakerLabel": "spk_0",
      "start": 604.32,
      "end": 609.44,
      "text": " but they're out of the box you if you're talking about ec2 ec2 metric alarms can also trigger ec2"
    },
    {
      "speakerLabel": "spk_0",
      "start": 609.44,
      "end": 614.88,
      "text": " actions so you could say if your cpu utilization is getting too high then reboot the instance or"
    },
    {
      "speakerLabel": "spk_0",
      "start": 614.88,
      "end": 619.2,
      "text": " terminate the instance and you know if you've got some legacy application with a memory leak and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 619.2,
      "end": 625.12,
      "text": " that's your only option i guess that's um one kind of path you could take um you can also trigger an"
    },
    {
      "speakerLabel": "spk_0",
      "start": 625.12,
      "end": 629.5200000000001,
      "text": " auto-scaling action and this is probably where a lot of people may have used alarms in the past"
    },
    {
      "speakerLabel": "spk_0",
      "start": 629.52,
      "end": 634.48,
      "text": " maybe without even realizing it because uh alarms and auto-scaling kind of go well together"
    },
    {
      "speakerLabel": "spk_0",
      "start": 635.1999999999999,
      "end": 639.92,
      "text": " so you're scaling essentially in response to the observation of a metric breaching a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 639.92,
      "end": 643.84,
      "text": " threshold so that could be an ec2 auto-scaling group or and that could be you know based on"
    },
    {
      "speakerLabel": "spk_0",
      "start": 643.84,
      "end": 648.88,
      "text": " number of requests or some of your load balancer metrics but it could also be an ecs service auto"
    },
    {
      "speakerLabel": "spk_0",
      "start": 648.88,
      "end": 654.24,
      "text": " scaling an example of that before and i think we've raised this one a few times is if you've"
    },
    {
      "speakerLabel": "spk_0",
      "start": 654.24,
      "end": 661.84,
      "text": " got a pool of workers doing some jobs batch processing say in an ecs cluster then you could"
    },
    {
      "speakerLabel": "spk_0",
      "start": 661.84,
      "end": 666.4,
      "text": " scale based on the number of messages in a queue like an sqs queue that they're pulling their"
    },
    {
      "speakerLabel": "spk_0",
      "start": 666.4,
      "end": 671.2,
      "text": " actual jobs from and that's that's a good way to handle it because you could have you know a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 671.2,
      "end": 676.96,
      "text": " standard default maybe a five or so workers working away by default but then if a large"
    },
    {
      "speakerLabel": "spk_0",
      "start": 676.96,
      "end": 681.04,
      "text": " volume comes into the queue you might want to scale up to a certain limit and alarms are really"
    },
    {
      "speakerLabel": "spk_0",
      "start": 681.04,
      "end": 685.36,
      "text": " good for that i don't use a lot of the many features in systems manager but i know as well"
    },
    {
      "speakerLabel": "spk_0",
      "start": 685.36,
      "end": 689.1999999999999,
      "text": " there's there's some things you can do there if you're using some of the incident management"
    },
    {
      "speakerLabel": "spk_0",
      "start": 689.1999999999999,
      "end": 693.4399999999999,
      "text": " features like you can create an ops item if you're using opcenter and you can also create"
    },
    {
      "speakerLabel": "spk_0",
      "start": 693.4399999999999,
      "end": 699.04,
      "text": " incidents and systems manager so there's um there's quite a lot you can do um"
    },
    {
      "speakerLabel": "spk_0",
      "start": 700.88,
      "end": 706.24,
      "text": " but i suppose one of the challenges with alarms and one of the reasons people probably shy away"
    },
    {
      "speakerLabel": "spk_0",
      "start": 706.24,
      "end": 710.48,
      "text": " from them is because people have experience with very noisy alarms and it can be very"
    },
    {
      "speakerLabel": "spk_0",
      "start": 710.48,
      "end": 715.36,
      "text": " difficult to actually know what's going along going on when the default state is that things"
    },
    {
      "speakerLabel": "spk_0",
      "start": 715.36,
      "end": 721.12,
      "text": " are always an alarm and then people just stop trusting the value of them so composite alarms"
    },
    {
      "speakerLabel": "spk_0",
      "start": 721.12,
      "end": 725.2,
      "text": " are is something you mentioned at the start do you want to talk about maybe some examples for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 730.5600000000001,
      "end": 734.88,
      "text": " you to use composite alarms and how they compare to just the simple single metric alarms sure yeah before that i like what you said because i there is a quote that i really like that is when"
    },
    {
      "speakerLabel": "spk_1",
      "start": 734.88,
      "end": 740.32,
      "text": " everything is an emergency nothing is an emergency right so i think that we can say the same with with"
    },
    {
      "speakerLabel": "spk_1",
      "start": 740.32,
      "end": 746.4,
      "text": " alarms like if if the alarm system is always noisy you stop being concerned right that becomes your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 746.4,
      "end": 751.04,
      "text": " norm and you are not really trying to react anymore and fix things so that that's something"
    },
    {
      "speakerLabel": "spk_1",
      "start": 751.04,
      "end": 756.08,
      "text": " to be aware i i would also caveat that at the beginning when you start to set up your alarms"
    },
    {
      "speakerLabel": "spk_1",
      "start": 756.08,
      "end": 761.04,
      "text": " it's probably a good idea to be to try to be a little bit noisy so you can find actually the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 761.04,
      "end": 765.12,
      "text": " threshold that work for you so initially probably there is a little bit of a tuning phase where you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 765.12,
      "end": 771.8399999999999,
      "text": " try to find what your threshold should be like for you to actually be effective anyway back to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 771.8399999999999,
      "end": 776.56,
      "text": " composite alarms i i think composite alarm are actually relevant to this topic because they can"
    },
    {
      "speakerLabel": "spk_1",
      "start": 776.56,
      "end": 782,
      "text": " be one tool that you can use to make things a little bit less noisy and one example i have is"
    },
    {
      "speakerLabel": "spk_1",
      "start": 782,
      "end": 787.52,
      "text": " that it's very common for instance when you build apis with api gateway and lambda to have individual"
    },
    {
      "speakerLabel": "spk_1",
      "start": 787.52,
      "end": 794.3199999999999,
      "text": " alarms both on for instance on lambda failures but also 500 errors on api gateway and if you have both"
    },
    {
      "speakerLabel": "spk_1",
      "start": 794.3199999999999,
      "end": 799.52,
      "text": " what happens when a lambda failed you get a 500 on api gateway so you are basically alarming twice"
    },
    {
      "speakerLabel": "spk_1",
      "start": 800.24,
      "end": 806.72,
      "text": " and one way that you can remove a little bit of noise is that of course you need to create both"
    },
    {
      "speakerLabel": "spk_1",
      "start": 806.72,
      "end": 812.96,
      "text": " alarms but then you are going to fire an alarm event on sns using a composite alarm so that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 812.96,
      "end": 817.28,
      "text": " basically means that you take the two alarms together you combine them with a boolean expression"
    },
    {
      "speakerLabel": "spk_1",
      "start": 817.28,
      "end": 824.3199999999999,
      "text": " saying if either one or the other for instance fire then fire the other composite alarm and then"
    },
    {
      "speakerLabel": "spk_1",
      "start": 824.3199999999999,
      "end": 829.76,
      "text": " you only receive a notification for the composite alarm so this this way you are nice effectively"
    },
    {
      "speakerLabel": "spk_1",
      "start": 829.76,
      "end": 837.68,
      "text": " flipping uh two alarms but being notified only on one of them um yeah i don't know if you have"
    },
    {
      "speakerLabel": "spk_1",
      "start": 837.68,
      "end": 842.4,
      "text": " other examples when composite alarms can be useful but i think they are just a nice way to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 842.4,
      "end": 847.84,
      "text": " reduce noise maybe you can also build more complicated rules maybe in some cases you can"
    },
    {
      "speakerLabel": "spk_1",
      "start": 847.84,
      "end": 853.04,
      "text": " use that to combine different metrics and then maybe only when you see a certain combination"
    },
    {
      "speakerLabel": "spk_1",
      "start": 853.04,
      "end": 857.6,
      "text": " of matrix happening then it really makes sense for you to allow this is maybe another example"
    },
    {
      "speakerLabel": "spk_0",
      "start": 864.9599999999999,
      "end": 869.84,
      "text": " where composite alarms can be useful yeah yeah it's very flexible in that way one of the other points about i suppose the usability so noise is one factor that's important for usability another"
    },
    {
      "speakerLabel": "spk_0",
      "start": 869.84,
      "end": 874.4,
      "text": " one is that we've frequently talked about separating lots of different services and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 874.4,
      "end": 878.4,
      "text": " applications and environments into different accounts so the question then becomes how do"
    },
    {
      "speakerLabel": "spk_0",
      "start": 878.4,
      "end": 883.2,
      "text": " you keep an eye on alarms and metrics across multiple accounts and multiple regions even"
    },
    {
      "speakerLabel": "spk_0",
      "start": 884.24,
      "end": 892.4,
      "text": " and it is possible to do this without having to open dozens of tabs in your web browser dozens of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 892.4,
      "end": 897.52,
      "text": " and dozens of containers or whatever way you can manage different accounts because cross-region"
    },
    {
      "speakerLabel": "spk_0",
      "start": 897.52,
      "end": 902.64,
      "text": " metrics you get out of the box so you can switch you can view alarms and metrics from the console"
    },
    {
      "speakerLabel": "spk_0",
      "start": 902.64,
      "end": 906.56,
      "text": " already but if you're talking about cross account you just have to do a little bit of setup so for"
    },
    {
      "speakerLabel": "spk_0",
      "start": 906.56,
      "end": 910.64,
      "text": " every account that you want to share metrics from you just need to say okay i'm going to share it"
    },
    {
      "speakerLabel": "spk_0",
      "start": 910.64,
      "end": 916.56,
      "text": " with this central monitoring account and give the account number and then on the monitoring account"
    },
    {
      "speakerLabel": "spk_0",
      "start": 916.56,
      "end": 921.4399999999999,
      "text": " side you just say okay i'm going to pull in metrics from these 20 accounts across my organization or"
    },
    {
      "speakerLabel": "spk_0",
      "start": 921.4399999999999,
      "end": 926.16,
      "text": " all accounts across my organization and then you can start to look at things from one dashboard"
    },
    {
      "speakerLabel": "spk_0",
      "start": 926.16,
      "end": 931.92,
      "text": " and from you know a single pane of glass essentially without having to log out and log in or switch tabs"
    },
    {
      "speakerLabel": "spk_0",
      "start": 931.92,
      "end": 937.36,
      "text": " and that makes it a lot easier so i think that's yeah worth mentioning in this multi-account world"
    },
    {
      "speakerLabel": "spk_0",
      "start": 938.8,
      "end": 943.68,
      "text": " so maybe it's worthwhile if we talk about some more useful use cases for alarms right to see"
    },
    {
      "speakerLabel": "spk_0",
      "start": 943.68,
      "end": 948.0799999999999,
      "text": " if we can give some inspiration for people who are maybe not using alarms extensively and can"
    },
    {
      "speakerLabel": "spk_0",
      "start": 948.0799999999999,
      "end": 952.8,
      "text": " start getting cracking and making their lives easier and make maybe reduce the operational"
    },
    {
      "speakerLabel": "spk_0",
      "start": 952.8,
      "end": 957.12,
      "text": " overhead that's what they're for after all right especially if you can predict errors before they"
    },
    {
      "speakerLabel": "spk_0",
      "start": 957.12,
      "end": 963.92,
      "text": " can happen where will we start we talked about business metrics in the last episode so we we've"
    },
    {
      "speakerLabel": "spk_0",
      "start": 963.92,
      "end": 969.52,
      "text": " given examples about API Gateway EC2 what kind of alarms could you create on business metrics that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 974,
      "end": 980.16,
      "text": " might be useful yeah i think the the ones we mentioned in a previous episode were for instance the number of sales per day again our favorite e-commerce example like some i suppose in some"
    },
    {
      "speakerLabel": "spk_1",
      "start": 980.16,
      "end": 986.48,
      "text": " e-commerce is that the amount of sales tends to be quite predictable so you could create a custom"
    },
    {
      "speakerLabel": "spk_1",
      "start": 986.48,
      "end": 992.48,
      "text": " metric and then an alarm to see when that value goes a little bit outside your expected amounts"
    },
    {
      "speakerLabel": "spk_1",
      "start": 992.48,
      "end": 998.3199999999999,
      "text": " either lower or way higher in both cases maybe you need to do some action so it's worth to be"
    },
    {
      "speakerLabel": "spk_1",
      "start": 998.3199999999999,
      "end": 1002.8,
      "text": " alarmed as soon as you see that that event happening and another one that i used in the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1002.8,
      "end": 1008.0799999999999,
      "text": " past and was very beneficial to me is to monitor the number of people that are logged in into"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1008.08,
      "end": 1014.48,
      "text": " an application like in some application that can be predictable enough i would say so you can"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1014.48,
      "end": 1019.5200000000001,
      "text": " define rules or even sometimes you can just say let me know when this value is zero for a long"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1019.5200000000001,
      "end": 1025.68,
      "text": " time and this is actually the one i used in the past and that one helped me to figure out an issue"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1025.68,
      "end": 1031.28,
      "text": " that was present in the login system actually was more in the session system than the login system"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1031.28,
      "end": 1038.6399999999999,
      "text": " but anyway having that alarm was good for me to see that people were not able of logging in for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1038.6399999999999,
      "end": 1043.76,
      "text": " a long period of time so i could figure out there was something wrong investigate find the issue fix"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1043.76,
      "end": 1050.48,
      "text": " it and bring everything back online so these are examples of business metrics that you can leverage"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1050.48,
      "end": 1056.56,
      "text": " to build alarms and then be more reactive and prevent incident for happening for a long time"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1056.56,
      "end": 1063.6,
      "text": " before you realize and you can fix them again we mentioned API Gateway and Lambda for more"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1063.6,
      "end": 1068.72,
      "text": " technical ones that you can use to to capture specific bugs so when the code is actually"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1068.72,
      "end": 1073.12,
      "text": " throwing errors similarly you can yeah if it's timing out you can consider that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1074,
      "end": 1079.28,
      "text": " an error the problem with all these ones we just described is that they tend to be reactive so it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1079.28,
      "end": 1084.96,
      "text": " means the the issue happens first then you're probably giving a disservice to your users because"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1084.96,
      "end": 1090.96,
      "text": " of these issues and then you try to to rush and say okay let's fix this because our users are"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1090.96,
      "end": 1096.72,
      "text": " currently i don't know seeing unexpected results and we don't want that to happen anymore but"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1097.68,
      "end": 1102.48,
      "text": " the question could be okay can we do something in advance can we predict when something is about to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1102.48,
      "end": 1108.08,
      "text": " happen and maybe fix it before it's too late before it's impacting the users and there are"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1108.08,
      "end": 1114.32,
      "text": " two things that you can do there are one thing is that you can use for instance in the case of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1114.32,
      "end": 1122.56,
      "text": " timeouts right Lambda timeouts you could create an alarm that looks for your your Lambdas getting"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1122.56,
      "end": 1129.2,
      "text": " closer and closer to that timeout so for instance you could say trigger this alarm if you get 90"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1130,
      "end": 1135.04,
      "text": " if your Lambda are taking 90 of the time that has been allocated for that Lambda so if you are"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1135.04,
      "end": 1139.76,
      "text": " close enough to the timeout but you are not eating it yet and this is something that for instance it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1139.76,
      "end": 1145.76,
      "text": " can happen if you have n plus one queries in a Lambda right as your database grows the time for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1145.76,
      "end": 1150.64,
      "text": " executing that query will increase it will get longer and longer so initially you will have"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1150.64,
      "end": 1156.48,
      "text": " plenty of time to stay within the timeout but over time maybe you will see that that time increasing"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1156.48,
      "end": 1160.8,
      "text": " and getting closer and closer to the timeout so having an alarm there can tell you that this is"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1160.8,
      "end": 1165.92,
      "text": " becoming a problem before your users will start to see an error so that that's something that can be"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1165.92,
      "end": 1171.68,
      "text": " very very useful and another thing you can do i'm not sure if we mention it already but there is a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1171.68,
      "end": 1179.44,
      "text": " anomaly detection based alarms that you can use to basically see if your current metrics are going"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1179.44,
      "end": 1186.96,
      "text": " outside the norm yeah so you can use that for instance again for Lambda directions if suddenly"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1186.96,
      "end": 1190.96,
      "text": " you see your Lambdas taking much longer not necessarily getting close to the timeout but just"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1197.6000000000001,
      "end": 1202.96,
      "text": " being taking much more time unusual behavior exact yeah that's good yeah yeah i think you you kind of for that one you specify like uh it's like a standard deviation so you specify a band how how"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1202.96,
      "end": 1209.28,
      "text": " how much outside the average you want to uh to be your anomaly detection band and that that can"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1216.72,
      "end": 1224.16,
      "text": " trigger it on and one last example i have is for asynchronous computation uh for instance i don't know when you have a queue and a pool of workers you could monitor um the i think it's called"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1224.16,
      "end": 1230.56,
      "text": " approximate age of all that message in in sqs and something that is like the iterator age in kinesis"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1230.56,
      "end": 1234.72,
      "text": " so if you're using kinesis you have a similar concept there but that's something you can monitor"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1234.72,
      "end": 1241.68,
      "text": " to see if your workers are doing their job fast enough so that you don't keep accumulating messages"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1241.68,
      "end": 1246.72,
      "text": " because of course if you accumulate more messages than you can process in a reasonable amount of time"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1246.72,
      "end": 1251.2,
      "text": " like eventually you're not going to be able to to process these messages fast enough anymore"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1251.2,
      "end": 1258,
      "text": " so your users will wait more and more before they can get results so that those are other good"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1258,
      "end": 1264.48,
      "text": " things to to explore and maybe have some alarms to make sure things are being done efficiently enough"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1268.88,
      "end": 1273.2800000000002,
      "text": " yeah and if you're into like continuous deployment and continuous delivery one of the other things that just springs to mind is that you can tie your alarms into your deployment process as well"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1273.8400000000001,
      "end": 1277.68,
      "text": " and this is particularly useful if you're doing like canary deployments blue-green deployments"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1277.68,
      "end": 1282.64,
      "text": " where you need to monitor the health of the application if you're shifting traffic or"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1282.64,
      "end": 1287.92,
      "text": " percentage of traffic from one deployment to another and cloud watch alarms are ideal for"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1287.92,
      "end": 1292.3200000000002,
      "text": " that because you can get programmatic access to the state of the alarm and it's also well integrated"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1292.32,
      "end": 1300,
      "text": " into code deploy and cloud formation so they that those tools will actually integrate into your"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1300,
      "end": 1306.08,
      "text": " alarms start shifting traffic over to a new container a new instance and if the alarm starts"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1306.08,
      "end": 1310.48,
      "text": " to fire it'll say okay let's back off here and shift back to the old instance so it gives you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1310.48,
      "end": 1315.52,
      "text": " deployment safety as well maybe that's something we can go into in depth in a another future episode"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1315.52,
      "end": 1324.72,
      "text": " are there any kind of drawbacks with cloud watch alarms what's the what's the first user experience"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1324.72,
      "end": 1328.32,
      "text": " like what do you think for people getting started with cloud watch alarms and how could it be"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1334.72,
      "end": 1340.4,
      "text": " improved yeah i don't know if i would call it a drawback but one thing that i wish was a little bit better with cloud watch is that you don't really get anything out of the box like you get"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1340.4,
      "end": 1344.8,
      "text": " all these amazing features you can do a lot of things but literally you start with a blank slate"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1344.8,
      "end": 1351.44,
      "text": " and it's on you to define which things to look for and create all the alarms and if you haven't"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1351.44,
      "end": 1356.8799999999999,
      "text": " done it before it might be a little bit stressful to just come up with different use cases and make"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1356.8799999999999,
      "end": 1363.6,
      "text": " sure things are finely tuned and for that AWS just gives you like the the well-architected framework"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1363.6,
      "end": 1368.32,
      "text": " for instance but gives you documentation that can give you ideas on where to start and what to look"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1368.32,
      "end": 1374.8799999999999,
      "text": " for but again it's all new to do the artwork of configuring everything and sometimes you you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1374.8799999999999,
      "end": 1378.8799999999999,
      "text": " create for instance application serverless application using maybe the serverless framework"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1380,
      "end": 1384.3999999999999,
      "text": " it feels a little bit unnecessary that you have already defined everything with infrastructure"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1384.3999999999999,
      "end": 1389.9199999999998,
      "text": " as code why not apply those best practices by taking that information that is already"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1389.9199999999998,
      "end": 1395.4399999999998,
      "text": " available in a sus code seeing for instance that you are using lambdas you're using sqs why not"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1395.44,
      "end": 1403.04,
      "text": " creating all the out of the box default alarms based on your infrastructure and i wish that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1403.04,
      "end": 1410.16,
      "text": " that was available and we have been spending a lot of time ourselves on this problem and because of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1410.16,
      "end": 1416.56,
      "text": " that we ended up creating a serverless framework plugin that does exactly that so it looks into your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1417.44,
      "end": 1422.48,
      "text": " infrastructure as code so your yaml file your serverless yaml and if it sees for instance"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1422.48,
      "end": 1427.52,
      "text": " that you're using a lambda it will provision for you a bunch of alarms that make sense for lambda"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1428.24,
      "end": 1434.56,
      "text": " similarly if you're using step functions api gateway dynamo db kinesis sqs and what we did"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1434.56,
      "end": 1439.3600000000001,
      "text": " is we are going to give you with that plugin you just initialize it you get a bunch of defaults"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1439.3600000000001,
      "end": 1444.08,
      "text": " but of course you can configure it a little bit more if you want to change the default thresholds"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1444.08,
      "end": 1449.04,
      "text": " or if you want to enable or disable specific alarms that are a little bit more advanced"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1454.56,
      "end": 1459.28,
      "text": " that's a good one and i guess one and it creates dashboards as well so it also gives you kind of a little bit of a better user experience in terms of how those graphs of metrics are organized"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1459.28,
      "end": 1463.28,
      "text": " i don't think i don't think it's probably it's worthwhile to have a dedicated episode on cloud"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1463.28,
      "end": 1468.56,
      "text": " watch dashboards since they're really just like a representation of your metrics and they can also"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1468.56,
      "end": 1472.8,
      "text": " show alarms as well but it's another feature that plug-in so when you deploy a serverless stack"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1472.8,
      "end": 1477.6,
      "text": " you'll get a dashboard for that stack so maybe it's a good idea to wrap up just uh talk about"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1477.6,
      "end": 1486.1599999999999,
      "text": " cost and you get 10 metric alarms for free which which is nice of them but beyond that it's uh"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1486.1599999999999,
      "end": 1491.12,
      "text": " it can get expensive if you've got a lot of them right so i guess it your mileage will always vary"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1491.12,
      "end": 1496.7199999999998,
      "text": " depending on your context and usage it you're talking about 10 cents per alarm metric um"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1497.6,
      "end": 1501.6,
      "text": " now if you're using high resolution alarms high resolution alarms are alarms based on high"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1501.6,
      "end": 1506.9599999999998,
      "text": " resolution metric so those one second metrics we talked about in the last episode um so those are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1506.96,
      "end": 1512.72,
      "text": " 30 dollar cents and if you have a composite alarms for some reason they're 50 cents for a composite"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1512.72,
      "end": 1518.48,
      "text": " alarm and i don't know why the composite alarm implementation is so complex that it justifies that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1519.76,
      "end": 1527.3600000000001,
      "text": " cost it seems like a pretty expensive boolean expression evaluation but that's the cost you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1527.3600000000001,
      "end": 1534.24,
      "text": " didn't get so if you've got you know tens dozens of alarms that's probably for most organizations"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1534.24,
      "end": 1538.48,
      "text": " revenue generating organizations is probably okay but if you're starting out and trying to keep"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1538.48,
      "end": 1545.1200000000001,
      "text": " everything free tier it's definitely something to keep an eye on so at this point i think we've"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1545.1200000000001,
      "end": 1549.52,
      "text": " covered now from the last two episodes metrics fairly in depth and what you can do with those"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1549.52,
      "end": 1555.36,
      "text": " in terms of creating alarms next next one i think we can talk about logs log aggregation and how in"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1555.36,
      "end": 1560.96,
      "text": " particular you can now use cloud watch logs to get a lot more and maybe avoid having to use a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1560.96,
      "end": 1566.4,
      "text": " centralized log aggregation service uh this logs is probably my favorite topic of the three so i'm"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1566.4,
      "end": 1570.08,
      "text": " looking forward to that one but if you haven't checked out the previous episode on cloud watch"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1570.08,
      "end": 1575.8400000000001,
      "text": " metrics check it out it's episode number 33 and let us know what you think and like and subscribe"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1575.84,
      "end": 1594.48,
      "text": " and we'll see you in the next one all about logs you"
    }
  ]
}