{
  "speakers": {
    "spk_0": "Luciano",
    "spk_1": "Eoin"
  },
  "segments": [
    {
      "speakerLabel": "spk_0",
      "start": 0,
      "end": 2.8000000000000003,
      "text": " Have you been following reInvent 2022?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 3.64,
      "end": 6.54,
      "text": " If you're following this podcast, you are probably into AWS"
    },
    {
      "speakerLabel": "spk_0",
      "start": 6.68,
      "end": 10.540000000000001,
      "text": " and aware of everything that was announced at AWS this year."
    },
    {
      "speakerLabel": "spk_0",
      "start": 10.68,
      "end": 14.540000000000001,
      "text": " So don't worry, today we're not going to give you another recap of reInvent."
    },
    {
      "speakerLabel": "spk_0",
      "start": 14.68,
      "end": 16.14,
      "text": " We're going to spare you all of that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 16.28,
      "end": 19.94,
      "text": " and just focus on three announcements that we are most excited about"
    },
    {
      "speakerLabel": "spk_0",
      "start": 20.080000000000002,
      "end": 22.34,
      "text": " and we want to tell you exactly why we really care so much"
    },
    {
      "speakerLabel": "spk_0",
      "start": 22.48,
      "end": 24.1,
      "text": " about this particular thing."
    },
    {
      "speakerLabel": "spk_0",
      "start": 24.240000000000002,
      "end": 27.14,
      "text": " So of course, this is going to be a very personal take."
    },
    {
      "speakerLabel": "spk_0",
      "start": 27.28,
      "end": 29.8,
      "text": " So we do look forward for disagreements"
    },
    {
      "speakerLabel": "spk_0",
      "start": 29.8,
      "end": 32.3,
      "text": " and hearing what did you like the most instead."
    },
    {
      "speakerLabel": "spk_0",
      "start": 32.44,
      "end": 34.7,
      "text": " My name is Luciano and today I'm joined by Eoin"
    },
    {
      "speakerLabel": "spk_0",
      "start": 34.84,
      "end": 38.760000000000005,
      "text": " and this is yet another episode of AWS Bites podcast."
    },
    {
      "speakerLabel": "spk_0",
      "start": 46.34,
      "end": 48.84,
      "text": " AWS Bites is sponsored by fourTheorem."
    },
    {
      "speakerLabel": "spk_0",
      "start": 48.96,
      "end": 51.760000000000005,
      "text": " fourTheorem is an AWS consulting partner offering training,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 51.900000000000006,
      "end": 54.6,
      "text": " cloud migration and modern application architecture."
    },
    {
      "speakerLabel": "spk_0",
      "start": 54.74,
      "end": 56.96,
      "text": " Find out more at fourtheorem.com."
    },
    {
      "speakerLabel": "spk_0",
      "start": 57.1,
      "end": 58.8,
      "text": " You'll find the link in the show notes."
    },
    {
      "speakerLabel": "spk_0",
      "start": 58.8,
      "end": 62,
      "text": " So, okay Eoin, let's maybe start with the first announcement."
    },
    {
      "speakerLabel": "spk_0",
      "start": 62.12,
      "end": 63.22,
      "text": " What did you like the most?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 67.39999999999999,
      "end": 70.5,
      "text": " I think the standout one for me was one that really heads in the right direction and I'm talking about a new addition that allows you to reduce"
    },
    {
      "speakerLabel": "spk_1",
      "start": 70.62,
      "end": 73,
      "text": " the amount of glue code you have to write in your applications."
    },
    {
      "speakerLabel": "spk_1",
      "start": 73.12,
      "end": 74.7,
      "text": " And when you're building serverless applications"
    },
    {
      "speakerLabel": "spk_1",
      "start": 74.82,
      "end": 77.66,
      "text": " and event-driven applications, this is really important"
    },
    {
      "speakerLabel": "spk_1",
      "start": 77.8,
      "end": 80,
      "text": " because you can end up with a proliferation of Lambdas"
    },
    {
      "speakerLabel": "spk_1",
      "start": 80.12,
      "end": 82,
      "text": " that don't do very much otherwise."
    },
    {
      "speakerLabel": "spk_1",
      "start": 82.12,
      "end": 84.22,
      "text": " So we're talking about EventBridge Pipes."
    },
    {
      "speakerLabel": "spk_1",
      "start": 84.36,
      "end": 86.6,
      "text": " Now we've talked a lot about EventBridge in previous episodes"
    },
    {
      "speakerLabel": "spk_1",
      "start": 86.72,
      "end": 88.52,
      "text": " as part of our event series."
    },
    {
      "speakerLabel": "spk_1",
      "start": 88.52,
      "end": 91.17999999999999,
      "text": " EventBridge allows you to create event-driven applications"
    },
    {
      "speakerLabel": "spk_1",
      "start": 91.32,
      "end": 94.17999999999999,
      "text": " by publishing messages to a broker or a boss"
    },
    {
      "speakerLabel": "spk_1",
      "start": 94.32,
      "end": 97.06,
      "text": " and setting up pattern matching rules for consumers."
    },
    {
      "speakerLabel": "spk_1",
      "start": 97.17999999999999,
      "end": 100.08,
      "text": " EventBridge is also one of the fastest developing AWS services."
    },
    {
      "speakerLabel": "spk_1",
      "start": 100.22,
      "end": 104.02,
      "text": " So this announcement followed quickly from the release of EventBridge schedules,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 104.16,
      "end": 107.82,
      "text": " which is another really exciting pre-event announcement."
    },
    {
      "speakerLabel": "spk_1",
      "start": 107.96,
      "end": 111.72,
      "text": " What we like about EventBridge is that it's extremely easy to get started with it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 111.86,
      "end": 113.75999999999999,
      "text": " The amount of setup is reasonably minimal,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 113.88,
      "end": 115.67999999999999,
      "text": " especially compared to other event services"
    },
    {
      "speakerLabel": "spk_1",
      "start": 115.82,
      "end": 118.12,
      "text": " and you can send and receive events straight away."
    },
    {
      "speakerLabel": "spk_1",
      "start": 118.12,
      "end": 119.48,
      "text": " It also supports native events,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 119.62,
      "end": 123.78,
      "text": " so you can listen to other things happening in your AWS account very easily."
    },
    {
      "speakerLabel": "spk_1",
      "start": 123.92,
      "end": 126.92,
      "text": " So a new object was created in a bucket, you can listen to that."
    },
    {
      "speakerLabel": "spk_1",
      "start": 127.04,
      "end": 132.02,
      "text": " An ECS container has stopped, you can listen to that too and react to it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 132.14000000000001,
      "end": 133.98000000000002,
      "text": " By default, by the way, you listen to an event,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 134.12,
      "end": 135.64000000000001,
      "text": " like one of these created by an EventBridge"
    },
    {
      "speakerLabel": "spk_1",
      "start": 135.78,
      "end": 137.38,
      "text": " by creating an EventBridge rule."
    },
    {
      "speakerLabel": "spk_1",
      "start": 137.52,
      "end": 140.22,
      "text": " A rule is generally a pattern that allows you to capture"
    },
    {
      "speakerLabel": "spk_1",
      "start": 140.34,
      "end": 142.18,
      "text": " all of the events that conform to that pattern"
    },
    {
      "speakerLabel": "spk_1",
      "start": 142.32,
      "end": 145.82,
      "text": " and there's a content filtering syntax that allows you to do that."
    },
    {
      "speakerLabel": "spk_1",
      "start": 145.94,
      "end": 147.18,
      "text": " Then you can specify one or more targets"
    },
    {
      "speakerLabel": "spk_1",
      "start": 147.18,
      "end": 149.18,
      "text": " that will receive that into an invocation,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 149.3,
      "end": 151.84,
      "text": " like a Lambda function, an SNS topic, a queue,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 151.98000000000002,
      "end": 155.58,
      "text": " a Kinesis data stream or a HTTP endpoint."
    },
    {
      "speakerLabel": "spk_1",
      "start": 155.70000000000002,
      "end": 158.3,
      "text": " So what are EventBridge Pipes and why are they so cool?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 158.44,
      "end": 160.34,
      "text": " Well, the idea with EventBridge rules"
    },
    {
      "speakerLabel": "spk_1",
      "start": 160.48000000000002,
      "end": 163.14000000000001,
      "text": " is that you're dealing with PubSub type interactions."
    },
    {
      "speakerLabel": "spk_1",
      "start": 163.28,
      "end": 166.5,
      "text": " So you have one producer and multiple consumers."
    },
    {
      "speakerLabel": "spk_1",
      "start": 166.64000000000001,
      "end": 169.08,
      "text": " With EventBridge Pipes, they're point to point."
    },
    {
      "speakerLabel": "spk_1",
      "start": 169.20000000000002,
      "end": 170.9,
      "text": " So it allows you to take an event from one source"
    },
    {
      "speakerLabel": "spk_1",
      "start": 171.04000000000002,
      "end": 173.78,
      "text": " and pass it to another with optional filtering,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 173.9,
      "end": 176.04000000000002,
      "text": " transformation and enrichment."
    },
    {
      "speakerLabel": "spk_1",
      "start": 176.04,
      "end": 179.1,
      "text": " So the goal here is to avoid you having to write more custom code."
    },
    {
      "speakerLabel": "spk_1",
      "start": 179.23999999999998,
      "end": 182.23999999999998,
      "text": " So for example, you would typically previously have to do"
    },
    {
      "speakerLabel": "spk_1",
      "start": 182.35999999999999,
      "end": 184.76,
      "text": " a lot of Lambdas that take data from one source,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 184.89999999999998,
      "end": 186.7,
      "text": " put it into a queue."
    },
    {
      "speakerLabel": "spk_1",
      "start": 186.84,
      "end": 188.89999999999998,
      "text": " You don't have to do that anymore."
    },
    {
      "speakerLabel": "spk_1",
      "start": 189.04,
      "end": 190.79999999999998,
      "text": " So let's dive into it a little bit"
    },
    {
      "speakerLabel": "spk_1",
      "start": 190.94,
      "end": 193.6,
      "text": " and talk about the various constructs in a pipe."
    },
    {
      "speakerLabel": "spk_1",
      "start": 193.73999999999998,
      "end": 196.54,
      "text": " Werner Vogels in the keynote compared this to Unix pipes"
    },
    {
      "speakerLabel": "spk_1",
      "start": 196.66,
      "end": 200.76,
      "text": " and the Unix philosophy with standard edit and standard input"
    },
    {
      "speakerLabel": "spk_1",
      "start": 200.89999999999998,
      "end": 203.29999999999998,
      "text": " and text as the interchange format between them."
    },
    {
      "speakerLabel": "spk_1",
      "start": 203.3,
      "end": 206.60000000000002,
      "text": " So it's very much along the lines of that same principle."
    },
    {
      "speakerLabel": "spk_1",
      "start": 206.72,
      "end": 208.26000000000002,
      "text": " So you have event sources,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 208.4,
      "end": 213.9,
      "text": " and most of the services supported by EventBridge rule"
    },
    {
      "speakerLabel": "spk_1",
      "start": 214.02,
      "end": 215.72,
      "text": " targets are supported here."
    },
    {
      "speakerLabel": "spk_1",
      "start": 215.86,
      "end": 218.82000000000002,
      "text": " I think it was actually, they mentioned in the blog post"
    },
    {
      "speakerLabel": "spk_1",
      "start": 218.96,
      "end": 222.22000000000003,
      "text": " or some of the Twitter commentary about this,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 222.36,
      "end": 224.62,
      "text": " that the event sources were very much inspired"
    },
    {
      "speakerLabel": "spk_1",
      "start": 224.76000000000002,
      "end": 226.46,
      "text": " by Lambdas event source mappings."
    },
    {
      "speakerLabel": "spk_1",
      "start": 226.60000000000002,
      "end": 229.42000000000002,
      "text": " So you can take events from DynamoDB streams,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 229.56,
      "end": 230.86,
      "text": " from Kinesis data streams,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 230.86,
      "end": 236.52,
      "text": " SQS, Kafka, your own Kafka or AWS's managed Kafka,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 236.66000000000003,
      "end": 238.62,
      "text": " also Amazon MQ,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 240.76000000000002,
      "end": 243.16000000000003,
      "text": " also SQS,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 243.28,
      "end": 246.66000000000003,
      "text": " and you can then send them on to Step Functions,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 246.78,
      "end": 251.92000000000002,
      "text": " Kinesis data streams, Lambda, third party APIs, API gateway."
    },
    {
      "speakerLabel": "spk_1",
      "start": 252.06,
      "end": 255.16000000000003,
      "text": " And you can put a, just like with an EventBridge rule,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 255.28000000000003,
      "end": 256.66,
      "text": " you can put an input transformer."
    },
    {
      "speakerLabel": "spk_1",
      "start": 256.78000000000003,
      "end": 259.78000000000003,
      "text": " So you can transform the event before you send it on to the target."
    },
    {
      "speakerLabel": "spk_1",
      "start": 259.78,
      "end": 263.47999999999996,
      "text": " You can also filter events, which is really, really, really important."
    },
    {
      "speakerLabel": "spk_1",
      "start": 264.61999999999995,
      "end": 267.61999999999995,
      "text": " So you use the same syntax as you do with EventBridge rule patterns,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 267.76,
      "end": 270.26,
      "text": " and then you use that to essentially filter out"
    },
    {
      "speakerLabel": "spk_1",
      "start": 270.38,
      "end": 272.76,
      "text": " what the subset of the events coming from that source"
    },
    {
      "speakerLabel": "spk_1",
      "start": 272.88,
      "end": 274.88,
      "text": " that you want to forward to the target."
    },
    {
      "speakerLabel": "spk_1",
      "start": 275.58,
      "end": 276.58,
      "text": " So that's pretty much it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 276.71999999999997,
      "end": 279.28,
      "text": " It's a bit like if you imagine if you're a Unix fan,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 279.41999999999996,
      "end": 284.35999999999996,
      "text": " you might cut a file, pipe it to grep to filter out some of the lines,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 284.47999999999996,
      "end": 288.88,
      "text": " and then send that on to the WC command to get a word to it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 288.88,
      "end": 290.64,
      "text": " So it's a similar idea, right?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 290.78,
      "end": 293.68,
      "text": " You've got sources, filters, and targets."
    },
    {
      "speakerLabel": "spk_1",
      "start": 295.21999999999997,
      "end": 297.34,
      "text": " One of the things that you can do with EventBridge Pipes then"
    },
    {
      "speakerLabel": "spk_1",
      "start": 297.48,
      "end": 299.12,
      "text": " is also enrichment."
    },
    {
      "speakerLabel": "spk_1",
      "start": 299.24,
      "end": 301.71999999999997,
      "text": " So this allows you to call out to other services or an API"
    },
    {
      "speakerLabel": "spk_1",
      "start": 301.84,
      "end": 304.54,
      "text": " to get additional data and add it into the event."
    },
    {
      "speakerLabel": "spk_1",
      "start": 304.98,
      "end": 308.08,
      "text": " So you can call out your Lambda, Step Functions,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 308.21999999999997,
      "end": 311.08,
      "text": " or HTTP API or an API gateway."
    },
    {
      "speakerLabel": "spk_1",
      "start": 311.92,
      "end": 314.42,
      "text": " And then you can also transform the result of that too."
    },
    {
      "speakerLabel": "spk_1",
      "start": 314.42,
      "end": 318.36,
      "text": " The other thing I'd probably mention is that pipes also support DLQs."
    },
    {
      "speakerLabel": "spk_1",
      "start": 318.5,
      "end": 320.7,
      "text": " So again, this is like a fairly reliable way"
    },
    {
      "speakerLabel": "spk_1",
      "start": 320.82,
      "end": 323.46000000000004,
      "text": " of taking data from one system, passing it on to another."
    },
    {
      "speakerLabel": "spk_1",
      "start": 324.06,
      "end": 326.22,
      "text": " So just to kind of summarize EventBridge rules,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 326.36,
      "end": 327.62,
      "text": " I think it's going to be very powerful."
    },
    {
      "speakerLabel": "spk_1",
      "start": 327.76,
      "end": 330.16,
      "text": " Hopefully, it'll allow a lot of people to delete Lambda functions"
    },
    {
      "speakerLabel": "spk_1",
      "start": 330.3,
      "end": 331.82,
      "text": " they don't need anymore,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 331.96000000000004,
      "end": 334.96000000000004,
      "text": " and focus on using Lambda for kind of meaningful computation"
    },
    {
      "speakerLabel": "spk_1",
      "start": 335.1,
      "end": 337.42,
      "text": " rather than just transporting data from A to B."
    },
    {
      "speakerLabel": "spk_1",
      "start": 338.42,
      "end": 340.02000000000004,
      "text": " The main difference is just to summarize that,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 340.16,
      "end": 341.22,
      "text": " it's point-to-point,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 341.22,
      "end": 345.48,
      "text": " with pipes, but it's pub-sub with EventBridge rules."
    },
    {
      "speakerLabel": "spk_1",
      "start": 346.22,
      "end": 349.08000000000004,
      "text": " With pipes, you don't have to write code to take an event from sources"
    },
    {
      "speakerLabel": "spk_1",
      "start": 349.22,
      "end": 350.72,
      "text": " and put it into EventBridge."
    },
    {
      "speakerLabel": "spk_1",
      "start": 351.72,
      "end": 354.22,
      "text": " Like with EventBridge rules, you're writing a rule for an event"
    },
    {
      "speakerLabel": "spk_1",
      "start": 354.36,
      "end": 355.68,
      "text": " that's already coming along to the bus."
    },
    {
      "speakerLabel": "spk_1",
      "start": 355.82000000000005,
      "end": 357.48,
      "text": " Somebody still has to put it onto the bus."
    },
    {
      "speakerLabel": "spk_1",
      "start": 357.62,
      "end": 361.36,
      "text": " With pipes, it's taking care of taking the data from the source for you."
    },
    {
      "speakerLabel": "spk_1",
      "start": 361.48,
      "end": 364.72,
      "text": " And the other difference between pipes and rules"
    },
    {
      "speakerLabel": "spk_1",
      "start": 364.86,
      "end": 367.52000000000004,
      "text": " is that pipes have enrichment enrichment."
    },
    {
      "speakerLabel": "spk_1",
      "start": 367.66,
      "end": 370.56,
      "text": " So you can do that with a lot of different types of enrichment."
    },
    {
      "speakerLabel": "spk_1",
      "start": 370.56,
      "end": 372.64,
      "text": " Enrichment support as well."
    },
    {
      "speakerLabel": "spk_1",
      "start": 372.76,
      "end": 375.24,
      "text": " So what do you think? Is that your number one as well?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 375.36,
      "end": 378.06,
      "text": " I was a little bit tempted to go with that one."
    },
    {
      "speakerLabel": "spk_0",
      "start": 378.2,
      "end": 379.84,
      "text": " I was really excited about that one."
    },
    {
      "speakerLabel": "spk_0",
      "start": 379.96,
      "end": 381.56,
      "text": " But since you covered it already,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 381.7,
      "end": 383.64,
      "text": " I'm going to talk about the other one that I really liked,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 383.76,
      "end": 386.04,
      "text": " which is Step Function distributed map."
    },
    {
      "speakerLabel": "spk_0",
      "start": 386.16,
      "end": 390.84000000000003,
      "text": " And also Step Function is a topic that we have been talking about in the past."
    },
    {
      "speakerLabel": "spk_0",
      "start": 390.96,
      "end": 394.36,
      "text": " So what's so interesting about distributed map?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 394.5,
      "end": 398.66,
      "text": " So in a Step Function, you can already do a map step."
    },
    {
      "speakerLabel": "spk_0",
      "start": 398.66,
      "end": 403.92,
      "text": " And that map step, it's something useful"
    },
    {
      "speakerLabel": "spk_0",
      "start": 404.06,
      "end": 407.1,
      "text": " when basically you want to take a bunch of different input."
    },
    {
      "speakerLabel": "spk_0",
      "start": 407.22,
      "end": 409.72,
      "text": " For instance, coming from the previous state, you have an array"
    },
    {
      "speakerLabel": "spk_0",
      "start": 409.86,
      "end": 413.40000000000003,
      "text": " and you want to do something repeated n times"
    },
    {
      "speakerLabel": "spk_0",
      "start": 413.52000000000004,
      "end": 415.6,
      "text": " for every item in that particular array."
    },
    {
      "speakerLabel": "spk_0",
      "start": 415.72,
      "end": 417.3,
      "text": " And that works really well."
    },
    {
      "speakerLabel": "spk_0",
      "start": 417.42,
      "end": 419.6,
      "text": " There are a lot of practical applications for that,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 419.72,
      "end": 421.32000000000005,
      "text": " but it's very limited."
    },
    {
      "speakerLabel": "spk_0",
      "start": 421.46000000000004,
      "end": 425.26000000000005,
      "text": " You cannot process more than 40 items concurrently."
    },
    {
      "speakerLabel": "spk_0",
      "start": 425.40000000000003,
      "end": 428,
      "text": " So where distributed map is trying to improve things"
    },
    {
      "speakerLabel": "spk_0",
      "start": 428,
      "end": 430.48,
      "text": " is to try to raise that limit much, much more"
    },
    {
      "speakerLabel": "spk_0",
      "start": 430.6,
      "end": 433.08,
      "text": " and give you a much higher throughput"
    },
    {
      "speakerLabel": "spk_0",
      "start": 433.2,
      "end": 437.54,
      "text": " if you really have to process a large number of things concurrently."
    },
    {
      "speakerLabel": "spk_0",
      "start": 437.68,
      "end": 440.78,
      "text": " And it also takes a slightly different approach."
    },
    {
      "speakerLabel": "spk_0",
      "start": 440.9,
      "end": 442.08,
      "text": " I'm going to try to describe how."
    },
    {
      "speakerLabel": "spk_0",
      "start": 442.2,
      "end": 447.38,
      "text": " But the first thing worth mentioning is that where the limit is 40 for regular map,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 447.5,
      "end": 451.2,
      "text": " with distributed map, the concurrency limit is 10,000 items."
    },
    {
      "speakerLabel": "spk_0",
      "start": 451.34,
      "end": 453,
      "text": " And it's even more interesting than that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 453.14,
      "end": 456.94,
      "text": " because you can process up to 100 million items in total."
    },
    {
      "speakerLabel": "spk_0",
      "start": 456.94,
      "end": 461.94,
      "text": " So a full distributed map can have a maximum number of 100 million items"
    },
    {
      "speakerLabel": "spk_0",
      "start": 462.06,
      "end": 464.3,
      "text": " and they will be processed 10,000 at a time."
    },
    {
      "speakerLabel": "spk_0",
      "start": 464.44,
      "end": 468.26,
      "text": " So you can imagine what's the difference in scale already."
    },
    {
      "speakerLabel": "spk_0",
      "start": 468.4,
      "end": 471.14,
      "text": " Now, how does it work in practice?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 471.26,
      "end": 474.94,
      "text": " Because the model is slightly different from what you would use with a regular map."
    },
    {
      "speakerLabel": "spk_0",
      "start": 475.06,
      "end": 478.76,
      "text": " So each map step is basically running a child Step Function"
    },
    {
      "speakerLabel": "spk_0",
      "start": 478.9,
      "end": 481.6,
      "text": " and that Step Function has its own execution history."
    },
    {
      "speakerLabel": "spk_0",
      "start": 481.74,
      "end": 485.14,
      "text": " So it's kind of, in a way, an orchestrator of children Step Functions"
    },
    {
      "speakerLabel": "spk_0",
      "start": 485.14,
      "end": 488.14,
      "text": " every time you're running that distributed map step."
    },
    {
      "speakerLabel": "spk_0",
      "start": 488.28,
      "end": 490.91999999999996,
      "text": " The input is taken from S3."
    },
    {
      "speakerLabel": "spk_0",
      "start": 491.03999999999996,
      "end": 492.41999999999996,
      "text": " This is another big difference."
    },
    {
      "speakerLabel": "spk_0",
      "start": 492.53999999999996,
      "end": 496.21999999999997,
      "text": " Like with regular map step, you generally can take a..."
    },
    {
      "speakerLabel": "spk_0",
      "start": 496.34,
      "end": 498.53999999999996,
      "text": " or either the entire state of the function"
    },
    {
      "speakerLabel": "spk_0",
      "start": 498.68,
      "end": 502.53999999999996,
      "text": " or a portion of that state if you are mapping with the JSON syntax."
    },
    {
      "speakerLabel": "spk_0",
      "start": 502.68,
      "end": 503.91999999999996,
      "text": " And basically you are just saying,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 504.03999999999996,
      "end": 508.64,
      "text": " take this array and repeat some other steps for every item in that array."
    },
    {
      "speakerLabel": "spk_0",
      "start": 508.78,
      "end": 512.14,
      "text": " Instead, with distributed map, you need to take data from S3"
    },
    {
      "speakerLabel": "spk_0",
      "start": 512.14,
      "end": 516.04,
      "text": " and that needs to be some kind of structured file format."
    },
    {
      "speakerLabel": "spk_0",
      "start": 516.18,
      "end": 522.18,
      "text": " It can be a JSON, a CSV, or you can even use an API call like list objects."
    },
    {
      "speakerLabel": "spk_0",
      "start": 522.3,
      "end": 527.1,
      "text": " So that basically is the way that you can load a lot more data into Step Functions,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 527.24,
      "end": 531.6999999999999,
      "text": " which I think is another limitation that we have with the traditional map step,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 531.84,
      "end": 535.64,
      "text": " where you are only limited to the state, which is not a lot of data."
    },
    {
      "speakerLabel": "spk_0",
      "start": 535.78,
      "end": 539.24,
      "text": " With distributed map, you can actually process big data files"
    },
    {
      "speakerLabel": "spk_0",
      "start": 539.24,
      "end": 542.9,
      "text": " and repeat that operation with very high throughput and concurrency."
    },
    {
      "speakerLabel": "spk_0",
      "start": 543.04,
      "end": 545.24,
      "text": " So what are some of the use cases?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 545.36,
      "end": 546.74,
      "text": " Definitely batch processing."
    },
    {
      "speakerLabel": "spk_0",
      "start": 546.86,
      "end": 549.5600000000001,
      "text": " So for instance, if you have a lot of files in S3,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 549.7,
      "end": 554.14,
      "text": " maybe representing some valuable piece of business information."
    },
    {
      "speakerLabel": "spk_0",
      "start": 554.26,
      "end": 557.54,
      "text": " I don't know, maybe something around analytics for your e-commerce."
    },
    {
      "speakerLabel": "spk_0",
      "start": 557.66,
      "end": 560.94,
      "text": " And maybe you can have for every product in your e-commerce,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 561.0600000000001,
      "end": 563.74,
      "text": " you might have a JSON file that tells you exactly"
    },
    {
      "speakerLabel": "spk_0",
      "start": 563.86,
      "end": 566.5600000000001,
      "text": " all the IP addresses that look at that product."
    },
    {
      "speakerLabel": "spk_0",
      "start": 566.56,
      "end": 570.0999999999999,
      "text": " And you might want to do some analytics to try to figure out in which regions"
    },
    {
      "speakerLabel": "spk_0",
      "start": 570.2199999999999,
      "end": 573.5,
      "text": " every single one of your products can be relevant for people."
    },
    {
      "speakerLabel": "spk_0",
      "start": 573.6199999999999,
      "end": 575,
      "text": " So you can do some marketing."
    },
    {
      "speakerLabel": "spk_0",
      "start": 575.1199999999999,
      "end": 577.3599999999999,
      "text": " That could be a use case where it could be the Step Function"
    },
    {
      "speakerLabel": "spk_0",
      "start": 577.5,
      "end": 579.52,
      "text": " that takes all your files in parallel."
    },
    {
      "speakerLabel": "spk_0",
      "start": 579.66,
      "end": 584,
      "text": " And then every sub Step Function will be crunching all the data"
    },
    {
      "speakerLabel": "spk_0",
      "start": 584.1199999999999,
      "end": 586.9,
      "text": " and give you some analytics about that."
    },
    {
      "speakerLabel": "spk_0",
      "start": 587.02,
      "end": 588.8,
      "text": " This is just to give you a random example,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 588.92,
      "end": 591.92,
      "text": " but you can come up with other examples like, I don't know, financial modeling."
    },
    {
      "speakerLabel": "spk_0",
      "start": 592.06,
      "end": 594.92,
      "text": " So you might be running some models over your data set"
    },
    {
      "speakerLabel": "spk_0",
      "start": 594.92,
      "end": 597.88,
      "text": " and try to come up with some results about maybe, I don't know,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 598.02,
      "end": 600.5799999999999,
      "text": " calculating a risk score for specific deals"
    },
    {
      "speakerLabel": "spk_0",
      "start": 600.7199999999999,
      "end": 602.9599999999999,
      "text": " that your organization is working on."
    },
    {
      "speakerLabel": "spk_0",
      "start": 603.0799999999999,
      "end": 606.5799999999999,
      "text": " Or another use case, which is apparently our favorite one,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 606.7199999999999,
      "end": 609.3199999999999,
      "text": " because we end up mentioning it in almost every episode,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 609.4599999999999,
      "end": 613.06,
      "text": " transforming images, maybe creating thumbnails of images"
    },
    {
      "speakerLabel": "spk_0",
      "start": 613.18,
      "end": 614.5799999999999,
      "text": " that you have somewhere in S3,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 614.7199999999999,
      "end": 618.12,
      "text": " or maybe even just extrapolating information from those images,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 618.26,
      "end": 619.98,
      "text": " connecting with other services,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 620.12,
      "end": 623.26,
      "text": " and try maybe to do some computer vision analysis"
    },
    {
      "speakerLabel": "spk_0",
      "start": 623.26,
      "end": 627.24,
      "text": " and then figure out, okay, what is a description for every single image?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 627.36,
      "end": 630.76,
      "text": " So you can imagine basically all these kind of orchestration workflows"
    },
    {
      "speakerLabel": "spk_0",
      "start": 630.9,
      "end": 633.2,
      "text": " where you're starting with a lot of data from S3"
    },
    {
      "speakerLabel": "spk_0",
      "start": 633.34,
      "end": 637.3,
      "text": " and you just want to map basically S3 files to something else."
    },
    {
      "speakerLabel": "spk_0",
      "start": 637.4399999999999,
      "end": 642.74,
      "text": " You can create a Step Function and use this distributed map functionality now."
    },
    {
      "speakerLabel": "spk_0",
      "start": 642.86,
      "end": 644.74,
      "text": " Now, there are of course also some limitations."
    },
    {
      "speakerLabel": "spk_0",
      "start": 644.86,
      "end": 648.36,
      "text": " So although I am very excited, I am also a little bit disappointed"
    },
    {
      "speakerLabel": "spk_0",
      "start": 648.5,
      "end": 650.2,
      "text": " that they didn't go just a step further,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 650.34,
      "end": 652.56,
      "text": " which would have been even more amazing."
    },
    {
      "speakerLabel": "spk_0",
      "start": 652.56,
      "end": 657.1999999999999,
      "text": " So maybe this is my wish list for reInvent 2023 already."
    },
    {
      "speakerLabel": "spk_0",
      "start": 657.3199999999999,
      "end": 659.3199999999999,
      "text": " But basically what I was a bit disappointed about"
    },
    {
      "speakerLabel": "spk_0",
      "start": 659.4599999999999,
      "end": 663.6999999999999,
      "text": " is that you can only deal with a flat list of inputs."
    },
    {
      "speakerLabel": "spk_0",
      "start": 663.8199999999999,
      "end": 666.9599999999999,
      "text": " So basically that means that you run,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 667.0999999999999,
      "end": 668.52,
      "text": " you can imagine the mental models,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 668.66,
      "end": 670.52,
      "text": " like there is no correlation between inputs."
    },
    {
      "speakerLabel": "spk_0",
      "start": 670.66,
      "end": 672.76,
      "text": " You just run everything concurrently."
    },
    {
      "speakerLabel": "spk_0",
      "start": 672.9,
      "end": 674.1999999999999,
      "text": " Of course, there is a concurrency limit,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 674.3199999999999,
      "end": 678.0999999999999,
      "text": " but you cannot create rules such as like a dependency graph"
    },
    {
      "speakerLabel": "spk_0",
      "start": 678.2199999999999,
      "end": 681.1199999999999,
      "text": " where you could say, I need to run this file first,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 681.12,
      "end": 684.66,
      "text": " then I can use the output of this other file to run something else"
    },
    {
      "speakerLabel": "spk_0",
      "start": 684.78,
      "end": 690.46,
      "text": " and create a more kind of complex orchestrated way of running the workflow,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 690.58,
      "end": 692.58,
      "text": " which can be very convenient in some cases."
    },
    {
      "speakerLabel": "spk_0",
      "start": 692.72,
      "end": 694.76,
      "text": " Again, I'm thinking risk modeling,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 694.88,
      "end": 698.88,
      "text": " where maybe you have data that needs to flow from one deal to another"
    },
    {
      "speakerLabel": "spk_0",
      "start": 699.02,
      "end": 701.46,
      "text": " for that compute issue to make sense."
    },
    {
      "speakerLabel": "spk_0",
      "start": 701.58,
      "end": 706.48,
      "text": " And another thing is that you cannot dynamically add items to the execution run,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 706.62,
      "end": 708.42,
      "text": " which basically means that even if you wanted to have"
    },
    {
      "speakerLabel": "spk_0",
      "start": 708.42,
      "end": 711.0799999999999,
      "text": " your own custom orchestration logic from the outside"
    },
    {
      "speakerLabel": "spk_0",
      "start": 711.2199999999999,
      "end": 714.52,
      "text": " and push things into this pool of things to process,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 714.64,
      "end": 716.54,
      "text": " that's not really something that is supported today."
    },
    {
      "speakerLabel": "spk_0",
      "start": 716.68,
      "end": 718.52,
      "text": " You just need to define everything in advance"
    },
    {
      "speakerLabel": "spk_0",
      "start": 718.64,
      "end": 721.14,
      "text": " and the Step Function is just going to take that input,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 721.28,
      "end": 725.28,
      "text": " create this kind of execution and run it,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 725.42,
      "end": 727.7199999999999,
      "text": " and then eventually you'll get your results."
    },
    {
      "speakerLabel": "spk_0",
      "start": 727.8399999999999,
      "end": 729.7199999999999,
      "text": " And also cost might be an issue"
    },
    {
      "speakerLabel": "spk_0",
      "start": 729.8399999999999,
      "end": 733.28,
      "text": " because you are basically doing a huge amount of stage transitions,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 733.42,
      "end": 735.2199999999999,
      "text": " step transition in the Step Function."
    },
    {
      "speakerLabel": "spk_0",
      "start": 735.22,
      "end": 739.76,
      "text": " So you need to be careful and try to come up with some numbers"
    },
    {
      "speakerLabel": "spk_0",
      "start": 739.9,
      "end": 742.26,
      "text": " to make sure that the cost is going to be reasonable for you,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 742.4,
      "end": 744.1,
      "text": " depending on the type of computation you're going to do"
    },
    {
      "speakerLabel": "spk_0",
      "start": 744.22,
      "end": 746.82,
      "text": " and the number of files that you're going to process."
    },
    {
      "speakerLabel": "spk_0",
      "start": 746.96,
      "end": 750.62,
      "text": " So that's everything I have about distributed map."
    },
    {
      "speakerLabel": "spk_0",
      "start": 750.76,
      "end": 754.9200000000001,
      "text": " I don't know if you want to add anything that I might have missed."
    },
    {
      "speakerLabel": "spk_1",
      "start": 758.32,
      "end": 761.2,
      "text": " It's a bit like the first one in that it's also something that could potentially allow you to remove a huge amount of glue code"
    },
    {
      "speakerLabel": "spk_1",
      "start": 761.32,
      "end": 762.32,
      "text": " and orchestration logic."
    },
    {
      "speakerLabel": "spk_1",
      "start": 762.32,
      "end": 765.1600000000001,
      "text": " So I think it's really, really a great step in the right direction."
    },
    {
      "speakerLabel": "spk_1",
      "start": 765.2800000000001,
      "end": 766.98,
      "text": " And I think those wish list items you mentioned"
    },
    {
      "speakerLabel": "spk_1",
      "start": 767.12,
      "end": 769.5200000000001,
      "text": " would just really make it fantastic altogether."
    },
    {
      "speakerLabel": "spk_1",
      "start": 769.6600000000001,
      "end": 771.46,
      "text": " The price issue is definitely a concern"
    },
    {
      "speakerLabel": "spk_1",
      "start": 771.58,
      "end": 774.38,
      "text": " because it's a bit like the pricing model for Step Functions"
    },
    {
      "speakerLabel": "spk_1",
      "start": 774.5200000000001,
      "end": 776.88,
      "text": " wasn't designed for this level of scale."
    },
    {
      "speakerLabel": "spk_1",
      "start": 777.0200000000001,
      "end": 779.58,
      "text": " But you're still paying like two and a half cents"
    },
    {
      "speakerLabel": "spk_1",
      "start": 779.72,
      "end": 782.7800000000001,
      "text": " for thousands state transitions in Step Functions."
    },
    {
      "speakerLabel": "spk_1",
      "start": 782.9200000000001,
      "end": 785.6600000000001,
      "text": " So you can imagine if you've got a million state transitions,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 785.7800000000001,
      "end": 788.58,
      "text": " it's now quite possible to reach that. That's $25."
    },
    {
      "speakerLabel": "spk_1",
      "start": 788.72,
      "end": 790.8800000000001,
      "text": " So if you're running that multiple times a day,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 790.88,
      "end": 792.34,
      "text": " it adds up over the month."
    },
    {
      "speakerLabel": "spk_1",
      "start": 792.48,
      "end": 794.52,
      "text": " So you have to work that out."
    },
    {
      "speakerLabel": "spk_1",
      "start": 794.64,
      "end": 796.64,
      "text": " See our previous episode on pricing."
    },
    {
      "speakerLabel": "spk_1",
      "start": 796.78,
      "end": 797.78,
      "text": " Absolutely."
    },
    {
      "speakerLabel": "spk_1",
      "start": 797.92,
      "end": 800.22,
      "text": " Okay, well, maybe we could talk about number three"
    },
    {
      "speakerLabel": "spk_1",
      "start": 800.34,
      "end": 801.74,
      "text": " in our top three lists then."
    },
    {
      "speakerLabel": "spk_1",
      "start": 801.88,
      "end": 804.84,
      "text": " And it's pretty hard to choose"
    },
    {
      "speakerLabel": "spk_1",
      "start": 804.98,
      "end": 807.72,
      "text": " because there were some pretty good announcements elsewhere."
    },
    {
      "speakerLabel": "spk_1",
      "start": 807.84,
      "end": 810.22,
      "text": " Code Catalyst is another one that's worth a mention."
    },
    {
      "speakerLabel": "spk_1",
      "start": 810.34,
      "end": 813.42,
      "text": " But we're going to talk about Application Composer."
    },
    {
      "speakerLabel": "spk_1",
      "start": 813.54,
      "end": 817.14,
      "text": " So Application Composer is a completely new tool in the AWS console"
    },
    {
      "speakerLabel": "spk_1",
      "start": 817.28,
      "end": 819.74,
      "text": " for visually designing new applications."
    },
    {
      "speakerLabel": "spk_1",
      "start": 819.74,
      "end": 822.3,
      "text": " Or visualizing existing applications."
    },
    {
      "speakerLabel": "spk_1",
      "start": 822.44,
      "end": 823.8,
      "text": " So this is in preview right now."
    },
    {
      "speakerLabel": "spk_1",
      "start": 823.94,
      "end": 825.3,
      "text": " So it's not generally available,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 825.44,
      "end": 826.78,
      "text": " but you can try it out and give it a go."
    },
    {
      "speakerLabel": "spk_1",
      "start": 826.9,
      "end": 829.5,
      "text": " And I've done that and I've found it to be much,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 829.64,
      "end": 831.84,
      "text": " much better than previous attempts at this kind of thing,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 831.98,
      "end": 835.1800000000001,
      "text": " like the CloudFormation designer."
    },
    {
      "speakerLabel": "spk_1",
      "start": 835.3,
      "end": 839.6800000000001,
      "text": " Now, it's really focused on serverless applications right now."
    },
    {
      "speakerLabel": "spk_1",
      "start": 839.8,
      "end": 842.24,
      "text": " But the way it works is that you can build an application"
    },
    {
      "speakerLabel": "spk_1",
      "start": 842.38,
      "end": 844.6800000000001,
      "text": " from scratch using a drag and drop interface."
    },
    {
      "speakerLabel": "spk_1",
      "start": 844.8,
      "end": 847.3,
      "text": " Visually, it looks good. It makes sense."
    },
    {
      "speakerLabel": "spk_1",
      "start": 847.44,
      "end": 849,
      "text": " It's reasonably simple to use."
    },
    {
      "speakerLabel": "spk_1",
      "start": 849,
      "end": 852.46,
      "text": " And it will generate the CloudFormation template for you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 852.6,
      "end": 855.46,
      "text": " and also generate things like IAM policies you will need."
    },
    {
      "speakerLabel": "spk_1",
      "start": 855.6,
      "end": 860.96,
      "text": " Now, it doesn't support all of the CloudFormation resources."
    },
    {
      "speakerLabel": "spk_1",
      "start": 861.1,
      "end": 863.96,
      "text": " So there's a set of about 12 or 15 services."
    },
    {
      "speakerLabel": "spk_1",
      "start": 864.1,
      "end": 867.66,
      "text": " So classic things you'll find in a basic serverless application,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 867.8,
      "end": 872.14,
      "text": " like an API gateway, Cognito user pools, tables in DynamoDB,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 872.26,
      "end": 877.76,
      "text": " EventBridge rules, Kinesis, Lambda, S3, SNS, SQS and Step Functions."
    },
    {
      "speakerLabel": "spk_1",
      "start": 877.76,
      "end": 883.42,
      "text": " And I would love if it supported the many hundreds of resources,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 883.56,
      "end": 885.76,
      "text": " there are thousands even, that you can get in CloudFormation"
    },
    {
      "speakerLabel": "spk_1",
      "start": 885.9,
      "end": 888.86,
      "text": " and maybe we'll get there. But it's a pretty good start."
    },
    {
      "speakerLabel": "spk_1",
      "start": 889,
      "end": 890.8199999999999,
      "text": " So one of the things it can do then as well,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 890.96,
      "end": 893.8199999999999,
      "text": " if you're using Chrome or Edge browsers,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 893.96,
      "end": 896.6,
      "text": " is it can actually synchronize with your code on the file system."
    },
    {
      "speakerLabel": "spk_1",
      "start": 896.72,
      "end": 899.72,
      "text": " So if you're taking the approach of visualizing an existing application,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 899.86,
      "end": 902,
      "text": " you can point it to the directory, pick your template,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 902.12,
      "end": 903.52,
      "text": " and it will visualize that for you."
    },
    {
      "speakerLabel": "spk_1",
      "start": 903.66,
      "end": 906.52,
      "text": " And if you make changes, it will sync them back to the file system."
    },
    {
      "speakerLabel": "spk_1",
      "start": 906.52,
      "end": 908.5799999999999,
      "text": " So that's using File System API in the browser."
    },
    {
      "speakerLabel": "spk_1",
      "start": 909.72,
      "end": 912.18,
      "text": " It doesn't work in Firefox because Firefox doesn't support that."
    },
    {
      "speakerLabel": "spk_1",
      "start": 912.3199999999999,
      "end": 914.86,
      "text": " And in that case, you just have to load your template manually."
    },
    {
      "speakerLabel": "spk_1",
      "start": 916.28,
      "end": 917.62,
      "text": " I did try out an example."
    },
    {
      "speakerLabel": "spk_1",
      "start": 917.76,
      "end": 920.48,
      "text": " So I was building a recent service application."
    },
    {
      "speakerLabel": "spk_1",
      "start": 920.62,
      "end": 921.78,
      "text": " It had two features."
    },
    {
      "speakerLabel": "spk_1",
      "start": 921.92,
      "end": 925.38,
      "text": " I was using AWS SAM and this supports AWS SAM, so that was a good fit."
    },
    {
      "speakerLabel": "spk_1",
      "start": 926.98,
      "end": 929.62,
      "text": " My application was using nested stacks."
    },
    {
      "speakerLabel": "spk_1",
      "start": 930.38,
      "end": 933.28,
      "text": " And it was also using Step Functions"
    },
    {
      "speakerLabel": "spk_1",
      "start": 933.28,
      "end": 937.28,
      "text": " where the state machine definition was loaded separately from a JSON file."
    },
    {
      "speakerLabel": "spk_1",
      "start": 938.28,
      "end": 941.28,
      "text": " In that case, it doesn't support nested stacks."
    },
    {
      "speakerLabel": "spk_1",
      "start": 941.42,
      "end": 942.62,
      "text": " I mean, it could load the file,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 942.74,
      "end": 944.28,
      "text": " but it just showed me that there were a number of stacks."
    },
    {
      "speakerLabel": "spk_1",
      "start": 944.42,
      "end": 946.74,
      "text": " It couldn't show me the resources within the nested stacks."
    },
    {
      "speakerLabel": "spk_1",
      "start": 946.88,
      "end": 948.4399999999999,
      "text": " So I thought, I said, okay, that's fine."
    },
    {
      "speakerLabel": "spk_1",
      "start": 948.5799999999999,
      "end": 950.4399999999999,
      "text": " So I'll just load the individual stack template."
    },
    {
      "speakerLabel": "spk_1",
      "start": 950.5799999999999,
      "end": 953.52,
      "text": " And I did that and I was able to load up all my Lambda functions."
    },
    {
      "speakerLabel": "spk_1",
      "start": 953.64,
      "end": 955.62,
      "text": " And it was able to recognize that there was a state machine,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 955.74,
      "end": 957.42,
      "text": " but it didn't parse the state machine definition."
    },
    {
      "speakerLabel": "spk_1",
      "start": 957.54,
      "end": 960.9399999999999,
      "text": " So it wasn't able to draw the lines between my state machine definition"
    },
    {
      "speakerLabel": "spk_1",
      "start": 960.94,
      "end": 965.6,
      "text": " and the tasks that were invoked in the Step Function stages."
    },
    {
      "speakerLabel": "spk_1",
      "start": 966.74,
      "end": 969.1800000000001,
      "text": " I did try building from scratch and creating a Step Function."
    },
    {
      "speakerLabel": "spk_1",
      "start": 969.3000000000001,
      "end": 972.9000000000001,
      "text": " And in that case, you can put the definition in,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 973.0400000000001,
      "end": 976.1,
      "text": " in line, basically in state machine resource,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 976.24,
      "end": 977.74,
      "text": " and that seems to work fine."
    },
    {
      "speakerLabel": "spk_1",
      "start": 978.3800000000001,
      "end": 979.94,
      "text": " But I was thinking as I was doing that,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 980.08,
      "end": 981.94,
      "text": " wouldn't be nice if it's seamlessly integrated"
    },
    {
      "speakerLabel": "spk_1",
      "start": 982.08,
      "end": 984.74,
      "text": " with the Step Functions Workflow Studio,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 984.8800000000001,
      "end": 989.3800000000001,
      "text": " so that you can go directly from designing your state machine"
    },
    {
      "speakerLabel": "spk_1",
      "start": 989.38,
      "end": 994.46,
      "text": " and your CloudFormation resources and your serverless SAM resources"
    },
    {
      "speakerLabel": "spk_1",
      "start": 994.58,
      "end": 997.16,
      "text": " directly into the actual state machine design."
    },
    {
      "speakerLabel": "spk_1",
      "start": 997.28,
      "end": 999.48,
      "text": " And if those two tools blended well together,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 999.62,
      "end": 1001.22,
      "text": " that could be really, really powerful."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1001.92,
      "end": 1002.92,
      "text": " I think this is really good thing,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1003.06,
      "end": 1004.86,
      "text": " because one of the things about serverless applications"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1004.98,
      "end": 1007.58,
      "text": " is that they can be hard to kind of understand"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1007.72,
      "end": 1010.02,
      "text": " how everything fits together, because you've got lots of resources"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1010.16,
      "end": 1011.76,
      "text": " that are sometimes loosely coupled."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1011.88,
      "end": 1013.36,
      "text": " This is a good step in the right direction."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1013.48,
      "end": 1015.02,
      "text": " And I think it's going to be really useful,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1015.16,
      "end": 1017.52,
      "text": " very good for people starting off, I would say as well,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1017.66,
      "end": 1018.66,
      "text": " with serverless development,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1018.66,
      "end": 1021.24,
      "text": " because when you're just looking at lines and lines of YAML,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1021.36,
      "end": 1022.36,
      "text": " it can be a bit of a headache,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1022.5,
      "end": 1024.84,
      "text": " but when you can visualize it nicely and talk through it,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1024.96,
      "end": 1028.46,
      "text": " it's like having a live kind of physical architecture diagram"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1028.6,
      "end": 1029.6,
      "text": " for your solution."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1030.24,
      "end": 1031.24,
      "text": " Yeah, totally agree."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1031.36,
      "end": 1033.2,
      "text": " And I think this is one of the pain points"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1033.34,
      "end": 1037.06,
      "text": " that we hear the most about when talking with people in the industry"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1037.2,
      "end": 1039.76,
      "text": " or our customers, that it's always very hard to keep"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1039.8999999999999,
      "end": 1041.6,
      "text": " in sync your architecture diagrams"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1041.74,
      "end": 1044.34,
      "text": " with your actual architecture running on AWS."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1044.74,
      "end": 1047.1399999999999,
      "text": " So this might be a step forward in that direction."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1047.14,
      "end": 1049.0200000000002,
      "text": " It could be a tool that kind of gives you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1049.14,
      "end": 1052.0800000000002,
      "text": " that automatic visualization of your actual stacks,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1052.22,
      "end": 1055.42,
      "text": " rather than trying to keep two different things in sync."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1055.5400000000002,
      "end": 1058.24,
      "text": " And you know that that's really, really hard to do it well."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1058.8400000000001,
      "end": 1061.98,
      "text": " So really happy to see this being announced,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1062.1200000000001,
      "end": 1065.1200000000001,
      "text": " even if it's not perfect, I think it's a great one to mention,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1065.24,
      "end": 1066.64,
      "text": " and it's a step forward for sure."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1067.7800000000002,
      "end": 1070.0800000000002,
      "text": " So just to try to wrap things up here,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1070.22,
      "end": 1072.88,
      "text": " I want to mention that we will have the links"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1073.0200000000002,
      "end": 1076.18,
      "text": " for the individual announcements, EventBridge Pipes."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1076.18,
      "end": 1077.64,
      "text": " Step Functions Distributed Map,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1077.78,
      "end": 1079.8,
      "text": " and application composer in the show notes."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1079.94,
      "end": 1082.64,
      "text": " But also there are three things, three additional things"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1082.78,
      "end": 1085.3,
      "text": " that we were kind of discussing,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1085.44,
      "end": 1086.9,
      "text": " and they were in our shortlist as well."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1087.04,
      "end": 1089.44,
      "text": " So maybe just worth a quick mention."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1089.5800000000002,
      "end": 1091.94,
      "text": " So we have SNS payload message filtering,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1092.0800000000002,
      "end": 1095.5800000000002,
      "text": " verified access, CloudWatch cross-account observability."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1095.7,
      "end": 1098.0800000000002,
      "text": " We are not going to spend more time on those,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1098.2,
      "end": 1100.3400000000001,
      "text": " but you can find the links in the show notes as well,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1100.48,
      "end": 1102.98,
      "text": " if you want to deep dive on these other announcements."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1103.1000000000001,
      "end": 1105.9,
      "text": " We will also have another link, which is our unofficial blog post"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1105.9,
      "end": 1108.8000000000002,
      "text": " which highlights all the top announcements"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1108.94,
      "end": 1112.24,
      "text": " of AWS reInvent 2022 directly from AWS."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1112.3600000000001,
      "end": 1115.24,
      "text": " So that's another great source if you have missed something"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1115.3600000000001,
      "end": 1117.8000000000002,
      "text": " and you just want to see exactly what was announced"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1117.94,
      "end": 1120.24,
      "text": " and deep dive on what's more interesting for you."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1120.3600000000001,
      "end": 1123.26,
      "text": " And with that, I think we are at the end of this episode."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1123.4,
      "end": 1124.8400000000001,
      "text": " We are really curious to hear"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1124.96,
      "end": 1127.3600000000001,
      "text": " what are your top three favorite announcements."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1127.5,
      "end": 1130.0400000000002,
      "text": " I realize that as probably our background,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1130.16,
      "end": 1133.64,
      "text": " we have been mostly focused around the area of application development,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1133.64,
      "end": 1136.0800000000002,
      "text": " but probably in the audience we have people that are more focused"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1136.22,
      "end": 1138.8200000000002,
      "text": " on networking, ML, data analytics,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1138.94,
      "end": 1141.3200000000002,
      "text": " and there were a lot of announcements in those areas."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1141.44,
      "end": 1143.48,
      "text": " So I'm really curious to see what you liked the most"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1143.6200000000001,
      "end": 1147.3200000000002,
      "text": " and if you were excited about the new things that were announced."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1147.44,
      "end": 1150.3200000000002,
      "text": " So definitely leave us a comment, chat to us on Twitter,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1150.44,
      "end": 1152.1200000000001,
      "text": " and let's be in touch."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1152.12,
      "end": 1171.6,
      "text": " Until then, see you in the next episode. Bye."
    }
  ]
}