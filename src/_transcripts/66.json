{
  "speakers": {
    "spk_0": "Luciano",
    "spk_1": "Eoin"
  },
  "segments": [
    {
      "speakerLabel": "spk_0",
      "start": 0,
      "end": 5.28,
      "text": " There is a growing number of tools for building and deploying serverless applications in the cloud."
    },
    {
      "speakerLabel": "spk_0",
      "start": 5.84,
      "end": 11.040000000000001,
      "text": " We are going to focus on two of the main alternatives, AWS SAM and the Serverless Framework."
    },
    {
      "speakerLabel": "spk_0",
      "start": 11.040000000000001,
      "end": 15.120000000000001,
      "text": " We are going to compare the features, the usability, and also make some speculation about"
    },
    {
      "speakerLabel": "spk_0",
      "start": 15.120000000000001,
      "end": 19.76,
      "text": " the future of these two different products. If we do a good job by the end of today's episode,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 19.76,
      "end": 22.96,
      "text": " you should know which one you are going to choose for your next project."
    },
    {
      "speakerLabel": "spk_0",
      "start": 22.96,
      "end": 30.880000000000003,
      "text": " My name is Luciano and I'm here with Eoin and this is AWS Bites podcast."
    },
    {
      "speakerLabel": "spk_0",
      "start": 34.480000000000004,
      "end": 40.32,
      "text": " AWS Bites is sponsored by fourTheorem. fourTheorem is an AWS consulting partner offering training,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 40.32,
      "end": 45.28,
      "text": " cloud migration, and modern application architecture. Find out more at fourtheorem.com."
    },
    {
      "speakerLabel": "spk_0",
      "start": 45.28,
      "end": 47.040000000000006,
      "text": " You will find this link in the show notes."
    },
    {
      "speakerLabel": "spk_0",
      "start": 48.08,
      "end": 52.64,
      "text": " So, we are ready to get started and let's talk about Serverless Framework and SAM,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 52.64,
      "end": 54.08,
      "text": " what are these tools for?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 54.08,
      "end": 57.6,
      "text": " Serverless Framework and SAM, they are both infrastructure as code tools."
    },
    {
      "speakerLabel": "spk_1",
      "start": 57.6,
      "end": 62.4,
      "text": " I suppose that's the first thing we can say then. They are geared towards serverless applications, but the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 62.4,
      "end": 67.44,
      "text": " applications you build and deploy with them, they don't have to be serverless. They are useful for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 67.44,
      "end": 72.24000000000001,
      "text": " deploying AWS infrastructure in general and just providing kind of a layer of convenience over CloudFormation. "
    },
    {
      "speakerLabel": "spk_1",
      "start": 72.24000000000001,
      "end": 77.2,
      "text": " So, CloudFormation, we have covered this in previous episodes, especially"
    },
    {
      "speakerLabel": "spk_1",
      "start": 77.2,
      "end": 81.68,
      "text": " in our very popular CloudFormation versus Terraform episode."
    },
    {
      "speakerLabel": "spk_1",
      "start": 81.68,
      "end": 86.08000000000001,
      "text": " CloudFormation is very explicit and it can be very verbose. So, with Serverless Framework and SAM, you're providing"
    },
    {
      "speakerLabel": "spk_1",
      "start": 86.08000000000001,
      "end": 91.52000000000001,
      "text": " a more concise user-friendly interface that's just a little bit more implicit and provides a lot of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 91.52000000000001,
      "end": 97.36000000000001,
      "text": " shortcuts and defaults for you. They are designed, I would say, to make the process of writing"
    },
    {
      "speakerLabel": "spk_1",
      "start": 98.56,
      "end": 104.64000000000001,
      "text": " FaaS functions, so Lambda functions easier, but they also provide some convenient wrappers for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 104.64000000000001,
      "end": 110.24000000000001,
      "text": " APIs and step functions and things like that. And they also not just allow you to write the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 110.24,
      "end": 114.96,
      "text": " infrastructure as code template in an easier way, but they provide certain tools for building,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 114.96,
      "end": 120.32,
      "text": " packaging, deployment and local invocation as well. Doing all that stuff manually is a lot of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 120.32,
      "end": 125.52,
      "text": " work. So, maybe at this point, we can just give a quick run through what are the highlights of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 125.52,
      "end": 128.24,
      "text": " Serverless Framework, what are the highlights of SAM, and then we can dive into some of the,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 129.04,
      "end": 133.35999999999999,
      "text": " I suppose, the more detailed differences between the two. So, let's talk about Serverless Framework"
    },
    {
      "speakerLabel": "spk_1",
      "start": 133.35999999999999,
      "end": 139.76,
      "text": " and for many, this is still the original and best. It was very popular when it first came out and it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 139.76,
      "end": 144.48,
      "text": " was probably, I would say, very instrumental in helping many people get excited and start adopting"
    },
    {
      "speakerLabel": "spk_1",
      "start": 144.48,
      "end": 150.48,
      "text": " serverless in the first place. I would say the community, all of us serverless developers owe"
    },
    {
      "speakerLabel": "spk_1",
      "start": 150.48,
      "end": 156.07999999999998,
      "text": " quite a lot to it and to the maintainers. It supports multiple cloud providers, which sometimes"
    },
    {
      "speakerLabel": "spk_1",
      "start": 156.07999999999998,
      "end": 160.79999999999998,
      "text": " we forget about, especially if you're working in AWS all the time, but it has backends for Azure"
    },
    {
      "speakerLabel": "spk_1",
      "start": 160.8,
      "end": 170.24,
      "text": " and Alibaba cloud and Cloudflare as well. So, you can deploy to multiple cloud providers with it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 170.24,
      "end": 174.08,
      "text": " What that means really is that the tooling remains the same, but of course, your code and your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 174.08,
      "end": 178.48000000000002,
      "text": " configuration syntax will be significantly different depending on the provider you choose."
    },
    {
      "speakerLabel": "spk_1",
      "start": 179.28,
      "end": 183.68,
      "text": " And a big thing about Serverless Framework is its plugin ecosystem. And we'll talk a little bit more"
    },
    {
      "speakerLabel": "spk_1",
      "start": 183.68,
      "end": 189.52,
      "text": " about that. So, that's the Serverless Framework. And then a couple of years ago, SAM came along."
    },
    {
      "speakerLabel": "spk_1",
      "start": 189.52,
      "end": 194.64000000000001,
      "text": " So, SAM has only been generally available since 2020. And it's an open source project as well,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 194.64000000000001,
      "end": 200.24,
      "text": " but it's developed and managed by AWS and it targets AWS as a cloud provider alone."
    },
    {
      "speakerLabel": "spk_1",
      "start": 200.88,
      "end": 205.20000000000002,
      "text": " So, the way they implement it is as an extension to CloudFormation using something called cloud"
    },
    {
      "speakerLabel": "spk_1",
      "start": 205.20000000000002,
      "end": 211.44,
      "text": " formation macros. What that means is that more of the deployment with SAM is happening cloud side."
    },
    {
      "speakerLabel": "spk_1",
      "start": 211.44,
      "end": 215.60000000000002,
      "text": " So, it's managed by the CloudFormation service for you. Whereas with Serverless Framework,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 215.6,
      "end": 220.07999999999998,
      "text": " the template is compiled wherever you're doing your build and deployment on your laptop or on"
    },
    {
      "speakerLabel": "spk_1",
      "start": 220.07999999999998,
      "end": 226.64,
      "text": " your CI CD server. So, you could say that the SAM approach is purer in that it's one that pushes"
    },
    {
      "speakerLabel": "spk_1",
      "start": 226.64,
      "end": 233.76,
      "text": " more of the deployment responsibility to AWS to manage. An interesting point to know, we've talked"
    },
    {
      "speakerLabel": "spk_1",
      "start": 233.76,
      "end": 237.92,
      "text": " a lot about CloudFormation here. Recently, they announced SAM Terraform support. Now,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 238.56,
      "end": 243.04,
      "text": " that might excite a lot of people. It's in preview at the moment, but it isn't trying to allow you to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 243.04,
      "end": 249.2,
      "text": " do everything you can do with SAM with Terraform. It just allows you to run a limited subset of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 249.2,
      "end": 253.51999999999998,
      "text": " features. So, if you've got Lambda functions in a Terraform project, you can use the SAM"
    },
    {
      "speakerLabel": "spk_1",
      "start": 254.23999999999998,
      "end": 259.03999999999996,
      "text": " CLI tooling to build and invoke them locally. That's all it's doing for you."
    },
    {
      "speakerLabel": "spk_1",
      "start": 260.56,
      "end": 264.8,
      "text": " That's the headline features for SAM and Serverless Framework. Luciano, do you want"
    },
    {
      "speakerLabel": "spk_1",
      "start": 264.8,
      "end": 268.88,
      "text": " to dive into some of the ways we can compare and contrast SAM and Serverless Framework?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 268.88,
      "end": 275.92,
      "text": " Of course. I will say that the first main difference is a little bit conceptual."
    },
    {
      "speakerLabel": "spk_0",
      "start": 276.48,
      "end": 281.76,
      "text": " I think it's kind of that difference between opinionated versus less opinionated and more flexible."
    },
    {
      "speakerLabel": "spk_0",
      "start": 281.76,
      "end": 286.96,
      "text": " I would probably put SAM into the more opinionated bucket while serverless tries to be a lot more"
    },
    {
      "speakerLabel": "spk_0",
      "start": 286.96,
      "end": 293.36,
      "text": " generic and flexible. And just to give you an example, SAM doesn't allow you to modify a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 293.36,
      "end": 299.2,
      "text": " resource if it's not effectively declared in your stack. So, you need to be a lot more explicit."
    },
    {
      "speakerLabel": "spk_0",
      "start": 299.2,
      "end": 303.68,
      "text": " And this is not something you can work around. It's just the way that the framework is designed."
    },
    {
      "speakerLabel": "spk_0",
      "start": 303.68,
      "end": 312,
      "text": " While SLS will give you ways to do that if you need to. And there are other differences that go"
    },
    {
      "speakerLabel": "spk_0",
      "start": 312,
      "end": 317.36,
      "text": " in this direction. For instance, a lot of things in serverless are done through plugins. So, there"
    },
    {
      "speakerLabel": "spk_0",
      "start": 317.36,
      "end": 322.56,
      "text": " is a natural approach to just build a plugin and you can extend with additional functionality if"
    },
    {
      "speakerLabel": "spk_0",
      "start": 322.56,
      "end": 327.28000000000003,
      "text": " you want to. It's not as easy to write plugins in SAM. And we will talk a little bit more about that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 327.28000000000003,
      "end": 334.4,
      "text": " as well. Another big difference is the template syntax. Even though they both use mainly YAML,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 334.4,
      "end": 340.24,
      "text": " or at least by default YAML is the main thing you would use to write the SAM templates or the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 340.24,
      "end": 346,
      "text": " Serverless Framework templates, I would say the Serverless Framework is, again, way more flexible"
    },
    {
      "speakerLabel": "spk_0",
      "start": 346,
      "end": 351.68,
      "text": " than SAM. In Serverless Framework templates, you have a very expressive sublanguage. Like,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 351.68,
      "end": 356.72,
      "text": " you can nest expressions into the YAML. And these expressions can basically allow you to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 356.72,
      "end": 361.84000000000003,
      "text": " interpret data from different sources. And one of the most impressive ones, and you can just say,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 361.84000000000003,
      "end": 365.84000000000003,
      "text": " get data from this JavaScript file. And what happens behind the scenes is that it's going"
    },
    {
      "speakerLabel": "spk_0",
      "start": 365.84000000000003,
      "end": 370.56,
      "text": " to literally invoke the JavaScript file so you can build your own custom logic. And then whatever"
    },
    {
      "speakerLabel": "spk_0",
      "start": 370.56,
      "end": 377.36,
      "text": " the JavaScript file is exporting is the data that gets interpolated in your own template. So, that's"
    },
    {
      "speakerLabel": "spk_0",
      "start": 377.36,
      "end": 382.16,
      "text": " one of the easiest ways that I've seen in any system to basically, in any configuration-based"
    },
    {
      "speakerLabel": "spk_0",
      "start": 382.16,
      "end": 386.16,
      "text": " system to allow you to write your own dynamic code whenever you need something a little bit more"
    },
    {
      "speakerLabel": "spk_0",
      "start": 386.16,
      "end": 391.36,
      "text": " bespoke. And what's even more interesting is that in recent versions of Serverless Framework,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 391.36,
      "end": 397.28000000000003,
      "text": " you can even avoid YAML entirely. And you can write the configuration template in JavaScript"
    },
    {
      "speakerLabel": "spk_0",
      "start": 397.28000000000003,
      "end": 402.56,
      "text": " itself or even in TypeScript if you want to. And that opens up for even more dynamic scenarios,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 402.56,
      "end": 408.72,
      "text": " because of course that's JavaScript code that gets interpreted when the template is executed."
    },
    {
      "speakerLabel": "spk_0",
      "start": 408.72,
      "end": 413.2,
      "text": " So, you can effectively run JavaScript code at that point in time if you need to do something"
    },
    {
      "speakerLabel": "spk_0",
      "start": 413.2,
      "end": 417.76,
      "text": " even more custom. And I've seen some interesting examples where people will use that, for instance,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 417.76,
      "end": 424.4,
      "text": " to use to generate OpenAPI documentation using maybe schema definition that they have defined"
    },
    {
      "speakerLabel": "spk_0",
      "start": 424.4,
      "end": 428.96,
      "text": " already in JavaScript or TypeScript. So, this is just to give you a feeling of how powerful"
    },
    {
      "speakerLabel": "spk_0",
      "start": 428.96,
      "end": 434.23999999999995,
      "text": " that approach is. You might argue that it's not like it loses a lot of the declarative that's"
    },
    {
      "speakerLabel": "spk_0",
      "start": 434.23999999999995,
      "end": 439.03999999999996,
      "text": " typical of this kind of systems, but it's an interesting trade-off and in some cases it might"
    },
    {
      "speakerLabel": "spk_0",
      "start": 439.03999999999996,
      "end": 445.84,
      "text": " be worth exploring this particular approach. Now, going back to SAM, SAM, as we say, is a lot more"
    },
    {
      "speakerLabel": "spk_0",
      "start": 445.84,
      "end": 452.56,
      "text": " strict. It gives you a syntax that is much closer to the CloudFormation syntax. And it's basically"
    },
    {
      "speakerLabel": "spk_0",
      "start": 452.56,
      "end": 456.79999999999995,
      "text": " kind of a trimmed-down version of that CloudFormation syntax because it's just giving"
    },
    {
      "speakerLabel": "spk_0",
      "start": 456.8,
      "end": 462.56,
      "text": " you some macros that will be later on expanded in the cloud into proper CloudFormation syntax."
    },
    {
      "speakerLabel": "spk_0",
      "start": 463.2,
      "end": 469.68,
      "text": " So, it's just a way to basically allow you to write more concise syntax for functions,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 469.68,
      "end": 476.16,
      "text": " event triggers, step functions, APIs, policies. But at the end of the day, when the code is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 476.16,
      "end": 480.56,
      "text": " getting prepared to be deployed in the cloud, it will be expanded again to a fully-fledged"
    },
    {
      "speakerLabel": "spk_0",
      "start": 480.56,
      "end": 488.16,
      "text": " CloudFormation. The way that you can interpolate variables is much more limited than Serverless"
    },
    {
      "speakerLabel": "spk_0",
      "start": 488.16,
      "end": 492.88,
      "text": " Framework because you can only use parameters and variables that are the standard ones available"
    },
    {
      "speakerLabel": "spk_0",
      "start": 492.88,
      "end": 498.32,
      "text": " already in CloudFormation. You could be hacking that a little bit if you create your own pre-processing"
    },
    {
      "speakerLabel": "spk_0",
      "start": 498.32,
      "end": 504.96,
      "text": " step. For instance, you could use any templating language that will eventually emit that SAM yaml,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 504.96,
      "end": 508.72,
      "text": " but of course it's a bit of a hacky way and this is something that you will need to build yourself."
    },
    {
      "speakerLabel": "spk_0",
      "start": 508.72,
      "end": 514.8000000000001,
      "text": " It's not built-in in the tool. Another interesting thing regarding syntax is the recently SAM"
    },
    {
      "speakerLabel": "spk_0",
      "start": 514.8000000000001,
      "end": 520,
      "text": " introduced cfn lint, which is a tool that has been available for a while but now is kind of built-in"
    },
    {
      "speakerLabel": "spk_0",
      "start": 520,
      "end": 524.64,
      "text": " into the SAM experience and it's a very nice tool that allows you to validate templates just to make"
    },
    {
      "speakerLabel": "spk_0",
      "start": 524.64,
      "end": 530.24,
      "text": " sure that the syntax that you are writing in that yaml is conformed to whatever syntax CloudFormation"
    },
    {
      "speakerLabel": "spk_0",
      "start": 530.24,
      "end": 536.48,
      "text": " is going to be able to accept. So, it's an extra validation layer that is closer to effectively the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 536.48,
      "end": 543.52,
      "text": " target that you have there. Now, let's talk a little bit about languages that are supported"
    },
    {
      "speakerLabel": "spk_0",
      "start": 544.48,
      "end": 548.8000000000001,
      "text": " and the languages that are actually used to write these tools because I think that gives you some"
    },
    {
      "speakerLabel": "spk_0",
      "start": 548.8000000000001,
      "end": 554.48,
      "text": " ideas also why one is more flexible than the other, at least in my opinion. Serverless Framework,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 556.4,
      "end": 561.36,
      "text": " you will probably notice using it that it's very well built for the Node.js experience."
    },
    {
      "speakerLabel": "spk_0",
      "start": 561.36,
      "end": 566,
      "text": " Like, kind of everything works out of the box if you're writing Lambdas in Node.js"
    },
    {
      "speakerLabel": "spk_0",
      "start": 566.64,
      "end": 572.5600000000001,
      "text": " and I don't think this is a coincidence. I think it's probably a natural consequence of the fact"
    },
    {
      "speakerLabel": "spk_0",
      "start": 572.5600000000001,
      "end": 576.8000000000001,
      "text": " that Serverless Framework itself is written in JavaScript so the authors of the framework"
    },
    {
      "speakerLabel": "spk_0",
      "start": 576.8000000000001,
      "end": 580.4,
      "text": " probably had a lot of expertise with that particular language and they probably spend"
    },
    {
      "speakerLabel": "spk_0",
      "start": 580.4,
      "end": 586.16,
      "text": " a lot more time fine-tuning the experience of using Serverless Framework for writing JavaScript code."
    },
    {
      "speakerLabel": "spk_0",
      "start": 586.16,
      "end": 591.6,
      "text": " But, of course, other languages are supported but generally they require plugins."
    },
    {
      "speakerLabel": "spk_0",
      "start": 591.6,
      "end": 597.12,
      "text": " Again, that idea of extensibility through plugins. So, your mileage might vary depending on whoever is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 597.12,
      "end": 601.76,
      "text": " writing these plugins, the community that is maintaining them and how much effort was already"
    },
    {
      "speakerLabel": "spk_0",
      "start": 601.76,
      "end": 611.68,
      "text": " put into these particular plugins. SAM is well known to work well with JavaScript and Python"
    },
    {
      "speakerLabel": "spk_0",
      "start": 611.68,
      "end": 617.76,
      "text": " but supports other languages natively and just if you're curious to know, if you can check out"
    },
    {
      "speakerLabel": "spk_0",
      "start": 617.76,
      "end": 623.5999999999999,
      "text": " the SAM repository, you will notice that SAM is written in Python. So, not surprising that it"
    },
    {
      "speakerLabel": "spk_0",
      "start": 623.5999999999999,
      "end": 627.28,
      "text": " doesn't allow you, for instance, to embed JavaScript files into the configuration file"
    },
    {
      "speakerLabel": "spk_0",
      "start": 628.2399999999999,
      "end": 632.64,
      "text": " because it would be a lot trickier to kind of execute them with something written in Python."
    },
    {
      "speakerLabel": "spk_0",
      "start": 634.16,
      "end": 638.64,
      "text": " How do you get started? Let's compare the experience between SAM and Serverless Framework."
    },
    {
      "speakerLabel": "spk_0",
      "start": 638.64,
      "end": 647.84,
      "text": " Serverless Framework is a JavaScript project and as such is provided as a Node.js module"
    },
    {
      "speakerLabel": "spk_0",
      "start": 647.84,
      "end": 653.52,
      "text": " which basically means that if you are well used to the Node.js ecosystem and all its tooling,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 653.52,
      "end": 658.4,
      "text": " you can just do npm install serverless and basically you have Serverless Framework available."
    },
    {
      "speakerLabel": "spk_0",
      "start": 659.4399999999999,
      "end": 664.4,
      "text": " And that means that you can even easily embed Serverless as a development dependency for one"
    },
    {
      "speakerLabel": "spk_0",
      "start": 664.4,
      "end": 669.36,
      "text": " of your projects. So that way you can have, for instance, two different projects, two different"
    },
    {
      "speakerLabel": "spk_0",
      "start": 669.36,
      "end": 674.16,
      "text": " serverless projects and one project could use Serverless v3 for instance, another project could"
    },
    {
      "speakerLabel": "spk_0",
      "start": 674.16,
      "end": 679.84,
      "text": " use Serverless v2 and all of that is managed seamlessly by npm. So you can have two different"
    },
    {
      "speakerLabel": "spk_0",
      "start": 679.84,
      "end": 685.76,
      "text": " deployment scripts and the two executables, Serverless v2 and Serverless v3, are totally"
    },
    {
      "speakerLabel": "spk_0",
      "start": 685.76,
      "end": 692.64,
      "text": " managed independently and they are logged in into their own projects."
    },
    {
      "speakerLabel": "spk_0",
      "start": 692.64,
      "end": 698,
      "text": " With SAM, it's a little bit different because SAM provides you native binaries for the major operating systems, Windows, Mac and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 698,
      "end": 708.24,
      "text": " Linux, so you'll need to download them and install them in your own system. SLS is well known to have"
    },
    {
      "speakerLabel": "spk_0",
      "start": 708.24,
      "end": 713.84,
      "text": " kind of templates for serverless projects so you have this command, this sub-command in the SLS"
    },
    {
      "speakerLabel": "spk_0",
      "start": 713.84,
      "end": 720.08,
      "text": " CLI called sls create which can be used to say, for instance, I want to start an API in TypeScript"
    },
    {
      "speakerLabel": "spk_0",
      "start": 720.08,
      "end": 725.76,
      "text": " and there will be a specific command that you can run that is just going to scaffold all of that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 726.5600000000001,
      "end": 732.64,
      "text": " boilerplate code for you. There is something similar in SAM called SAM init so you might get"
    },
    {
      "speakerLabel": "spk_0",
      "start": 732.64,
      "end": 737.44,
      "text": " slightly different templates of course but the idea is that you don't have to start from scratch,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 737.44,
      "end": 742.24,
      "text": " just pick a set of technologies and probably there is a template ready for you that gives you most of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 742.24,
      "end": 751.44,
      "text": " that boilerplate. Now, SAM might be a little bit more user-flendy because when you run SAM init"
    },
    {
      "speakerLabel": "spk_0",
      "start": 751.44,
      "end": 756.96,
      "text": " it's interactive so it will let you pick different options in a more interactive way,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 756.96,
      "end": 762.5600000000001,
      "text": " while SLS is just probably cloning a git repository where all the code gets provided to you."
    },
    {
      "speakerLabel": "spk_0",
      "start": 762.56,
      "end": 772.88,
      "text": " Build and deployment might be another interesting topic and in this case I think SAM is probably a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 772.88,
      "end": 778.64,
      "text": " little bit ahead than Serverless Framework because the first thing is that SAM uses"
    },
    {
      "speakerLabel": "spk_0",
      "start": 778.64,
      "end": 783.3599999999999,
      "text": " CloudFormation change sets and this is something that serverless didn't do for a long time,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 783.3599999999999,
      "end": 788,
      "text": " only recently they added support for that but there are important differences there."
    },
    {
      "speakerLabel": "spk_0",
      "start": 788,
      "end": 793.04,
      "text": " If you don't know, CloudFormation change set is basically a feature of CloudFormation that allows"
    },
    {
      "speakerLabel": "spk_0",
      "start": 793.04,
      "end": 799.92,
      "text": " you to, rather than just deploying the differences in a template, it will basically do a preview for"
    },
    {
      "speakerLabel": "spk_0",
      "start": 799.92,
      "end": 805.04,
      "text": " you, it's basically going to assess what is going to change and then it's something that you can"
    },
    {
      "speakerLabel": "spk_0",
      "start": 805.04,
      "end": 809.52,
      "text": " effectively decide I want to go ahead and deploy this or maybe you realize it's not really doing"
    },
    {
      "speakerLabel": "spk_0",
      "start": 809.52,
      "end": 815.52,
      "text": " what you expected so you can just stop that particular deployment. So with SAM, basically in"
    },
    {
      "speakerLabel": "spk_0",
      "start": 815.52,
      "end": 821.84,
      "text": " your deployment process through SAM it will very obviously show exactly the effect of this change"
    },
    {
      "speakerLabel": "spk_0",
      "start": 821.84,
      "end": 827.68,
      "text": " set so it's very easy for you to visualize that something has changed which is actually going to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 827.68,
      "end": 834.48,
      "text": " be deployed and decide whether you want to proceed or not. With SLS that kind of happens as well but"
    },
    {
      "speakerLabel": "spk_0",
      "start": 834.48,
      "end": 839.52,
      "text": " a little bit more behind the scenes so you'll need to go into the AWS console to actually see"
    },
    {
      "speakerLabel": "spk_0",
      "start": 839.52,
      "end": 844.72,
      "text": " what's going to be the effect of the change set so it's a little bit more involved while I think"
    },
    {
      "speakerLabel": "spk_0",
      "start": 844.72,
      "end": 852.32,
      "text": " the experience with SAM is much smoother and user-friendly. Another interesting thing in terms"
    },
    {
      "speakerLabel": "spk_0",
      "start": 852.32,
      "end": 858.96,
      "text": " of building is that SAM uses Docker out of the box which can be very convenient when in your project"
    },
    {
      "speakerLabel": "spk_0",
      "start": 858.96,
      "end": 865.0400000000001,
      "text": " you have native dependencies for instance in Python or Node.js. If you are working on a Mac"
    },
    {
      "speakerLabel": "spk_0",
      "start": 865.0400000000001,
      "end": 870.32,
      "text": " machine or a Windows machine probably the local files that you have for these native dependencies"
    },
    {
      "speakerLabel": "spk_0",
      "start": 870.32,
      "end": 875.2,
      "text": " are not going to work out of the box in a Lambda environment which is a Linux-based environment"
    },
    {
      "speakerLabel": "spk_0",
      "start": 875.2,
      "end": 878.72,
      "text": " and maybe with a very specific architecture that might be different from the one in your"
    },
    {
      "speakerLabel": "spk_0",
      "start": 878.72,
      "end": 885.0400000000001,
      "text": " particular development machine. So when you use Docker the build process is actually done in an"
    },
    {
      "speakerLabel": "spk_0",
      "start": 885.0400000000001,
      "end": 890.4000000000001,
      "text": " environment that is going to be much closer to the environment of Lambda so the risk of packaging"
    },
    {
      "speakerLabel": "spk_0",
      "start": 890.4000000000001,
      "end": 895.44,
      "text": " something that is not going to work in the target architecture is much more reduced. So this is very"
    },
    {
      "speakerLabel": "spk_0",
      "start": 895.44,
      "end": 901.12,
      "text": " convenient. You could do the same thing with serverless but it's not really a well-known feature"
    },
    {
      "speakerLabel": "spk_0",
      "start": 901.12,
      "end": 909.6800000000001,
      "text": " because you'll need to explicitly pass a flag to enable that. Another final point about deployment"
    },
    {
      "speakerLabel": "spk_0",
      "start": 909.6800000000001,
      "end": 916,
      "text": " which is really interesting I think is one of the most innovative features of SAM and one of the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 916,
      "end": 921.36,
      "text": " strong points of SAM is a feature called SAM Accelerate which is relatively new. We mentioned it"
    },
    {
      "speakerLabel": "spk_0",
      "start": 921.36,
      "end": 928.08,
      "text": " in one of our previous episodes, episode 19 where we talk about the serverless development experience."
    },
    {
      "speakerLabel": "spk_0",
      "start": 928.08,
      "end": 933.6,
      "text": " So basically SAM Accelerate is something that is meant to reduce the feedback loop that you have"
    },
    {
      "speakerLabel": "spk_0",
      "start": 933.6,
      "end": 938.4,
      "text": " when you are developing a new feature. You do some changes and in order to see if these changes in"
    },
    {
      "speakerLabel": "spk_0",
      "start": 938.4,
      "end": 942.96,
      "text": " your code actually do what you are expecting them to do you probably need to do a deployment and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 942.96,
      "end": 947.12,
      "text": " test it in the cloud and this is generally something that takes minutes so it's kind of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 947.12,
      "end": 952.4,
      "text": " interrupting your development loop. It's distracting and it might be frustrating if you have to do it over and over. "
    },
    {
      "speakerLabel": "spk_0",
      "start": 952.4,
      "end": 958.16,
      "text": "What SAM Accelerate does is basically automatically syncing your code as you do changes."
    },
    {
      "speakerLabel": "spk_0",
      "start": 958.16,
      "end": 963.28,
      "text": " You lose some of the guarantees like you are not for instance able to do rollbacks"
    },
    {
      "speakerLabel": "spk_0",
      "start": 963.92,
      "end": 968.48,
      "text": " as easily as you would do with a full deployment but it gives you a very quick feedback loop to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 968.48,
      "end": 973.92,
      "text": " see these changes almost in real time so it might be really a big accelerator in that development life cycle. "
    },
    {
      "speakerLabel": "spk_0",
      "start": 973.92,
      "end": 977.4399999999999,
      "text": "So definitely a really interesting feature that if you haven't tried yet I really"
    },
    {
      "speakerLabel": "spk_0",
      "start": 977.4399999999999,
      "end": 982.4,
      "text": " recommend you to try because you can have that feeling that you are developing locally while"
    },
    {
      "speakerLabel": "spk_0",
      "start": 982.4,
      "end": 987.04,
      "text": " almost immediately being able to see the changes reflected in a real cloud environment."
    },
    {
      "speakerLabel": "spk_0",
      "start": 987.04,
      "end": 993.1999999999999,
      "text": " What do you think? Is there anything else worth mentioning in the difference between SLS and SAM?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 994,
      "end": 999.76,
      "text": " Yeah that was really a comprehensive set of differences."
    },
    {
      "speakerLabel": "spk_1",
      "start": 999.76,
      "end": 1004.64,
      "text": " Maybe a few small things I could add on. One that really bugs me is that with service framework it still doesn't work with"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1004.64,
      "end": 1009.12,
      "text": " SSO credentials which is like I think a lot more people are using SSO for sign-on now"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1009.84,
      "end": 1014.3199999999999,
      "text": " or IAM identity center as it's now called. There's been a GitHub issue open on the serverless"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1014.3199999999999,
      "end": 1020.4,
      "text": " framework for a couple of years and recently they've commented on that issue that they just"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1020.4,
      "end": 1025.44,
      "text": " don't have time to add the support. It's been unfortunate SAM supports SSO credentials already."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1025.44,
      "end": 1030.72,
      "text": " Maybe as well for people who are thinking about how they structure their project and dividing"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1030.72,
      "end": 1038.3200000000002,
      "text": " their project in a repo into multiple services or stacks. SAM supports nested stacks. That's a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1038.3200000000002,
      "end": 1043.28,
      "text": " reasonably recent addition I believe. It's a nice way of organizing your project and you can deploy"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1043.28,
      "end": 1047.3600000000001,
      "text": " the top level stack and it will deploy whatever changes are necessary within all the stacks"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1047.3600000000001,
      "end": 1052,
      "text": " underneath. Serverless Framework did have a plugin to support that but it's not really not maintained"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1052,
      "end": 1056.88,
      "text": " like a lot of the less used plugins. But it does have a really good new feature called serverless"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1056.88,
      "end": 1061.92,
      "text": " compose that allows you to manage and deploy multiple stacks together. So that was a really"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1061.92,
      "end": 1068.4,
      "text": " nice one. Might also be worthwhile talking about how good these two tools are at supporting new"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1068.4,
      "end": 1073.6,
      "text": " AWS features as AWS changes and I think for both it's pretty good actually. SAM support is"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1073.6,
      "end": 1079.2,
      "text": " generally pretty good now. CloudFormation support is usually a lot faster than it used to be when it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1079.2,
      "end": 1083.92,
      "text": " comes to supporting new features in AWS services. But the serverless maintainers when it comes to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1083.92,
      "end": 1088.72,
      "text": " new features like when container image support came out or ARM graviton processor support came"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1088.72,
      "end": 1093.2,
      "text": " out for Lambda, those are significant chunks of work for those teams but they really seem to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1094,
      "end": 1098.72,
      "text": " pull those out really quickly and get them released out to the community which is pretty fantastic."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1101.44,
      "end": 1105.68,
      "text": " When it comes to permissions, getting permissions right is always a tricky thing about building"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1105.68,
      "end": 1110.8,
      "text": " AWS applications and serverless applications. Now SAM has a few things that are attempts at making"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1110.8,
      "end": 1115.68,
      "text": " this easier. One is they have some pre-baked policy templates. So these are just ways of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1115.68,
      "end": 1120.4,
      "text": " kind of reducing the amount of boilerplate you have to write for IAM. And the other one is a new"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1120.4,
      "end": 1125.76,
      "text": " feature called SAM connectors and this is when you've got this kind of pseudo resource called"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1125.76,
      "end": 1132.16,
      "text": " our connector that you create and it allows you to say for this DynamoDB table give access to this"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1132.16,
      "end": 1138.24,
      "text": " function and make it give it write access or read access. So the idea is to make it a little bit"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1138.24,
      "end": 1143.2,
      "text": " more understandable I suppose for people who don't understand IAM. I'm kind of in two minds about it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1143.2,
      "end": 1148.0800000000002,
      "text": " really I'm not sure I like any of these things. I think when it comes to IAM it's much better to be"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1148.0800000000002,
      "end": 1153.1200000000001,
      "text": " explicit even if it means more verbose syntax and just understand what you're doing and be very"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1153.1200000000001,
      "end": 1158.48,
      "text": " fine-grained. With the Serverless Framework you've got a nice way to specify IAM statements for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1158.48,
      "end": 1165.3600000000001,
      "text": " functions especially if you add in the very common IAM roles per function plugin. So I would much"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1165.3600000000001,
      "end": 1170.56,
      "text": " favor that approach to it and not to try and dumb it down and provide this kind of half solution to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1170.56,
      "end": 1178.64,
      "text": " simplifying IAM. Let's talk you mentioned JavaScript so I might just talk about"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1178.64,
      "end": 1185.28,
      "text": " transpilation. If we've got esbuild that's supported in SAM already for TypeScript and JavaScript"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1185.28,
      "end": 1191.52,
      "text": " new versions of the language so the Serverless Framework you can add the serverless esbuild"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1191.52,
      "end": 1196.3999999999999,
      "text": " plugin and it works too. So you're generally set for both of them and then both of them provide"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1196.3999999999999,
      "end": 1203.6,
      "text": " local development experience so you can do local invoke on both of them and you can use a local API"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1203.6,
      "end": 1207.92,
      "text": " gateway simulation. The only difference with Serverless Framework is that the API simulation"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1207.92,
      "end": 1214.32,
      "text": " is provided with a plugin serverless offline where SAM runs it locally for you automatically"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1214.32,
      "end": 1220.32,
      "text": " and then I suppose there's a big standout one with CI-CD for SAM and I really like this one"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1220.32,
      "end": 1225.28,
      "text": " now because it allows you to basically bootstrap a complete continuous integration pipeline and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1225.28,
      "end": 1232.24,
      "text": " deployment pipeline using any of a large set of providers so CodeBuild and CodePipeline within AWS"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1232.24,
      "end": 1238.6399999999999,
      "text": " but it can also support Jenkins or GitLab CI-CD, Bitbucket and GitHub Actions. So this will create"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1238.6399999999999,
      "end": 1243.4399999999998,
      "text": " a pipeline which will deploy to multiple environments and also supports feature branch"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1243.44,
      "end": 1249.6000000000001,
      "text": " deployments. We had an episode a while back about OIDC providers and why you should use that method"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1249.6000000000001,
      "end": 1254.64,
      "text": " for getting your GitHub Actions to authenticate with AWS. SAM will create that for you so all of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1254.64,
      "end": 1258.64,
      "text": " the complexity of creating that and creating the associated role is managed when you bootstrap your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1258.64,
      "end": 1266.96,
      "text": " SAM pipeline so that's really nice one. And maybe just lastly before we start wrapping up and giving"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1266.96,
      "end": 1272.88,
      "text": " our more opinionated view on which you should choose when it comes to just extensibility you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1272.88,
      "end": 1279.1200000000001,
      "text": " mentioned the plugin ecosystem in Serverless piano and we can give an example because you and I and a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1279.1200000000001,
      "end": 1284.4,
      "text": " few other the fourTheorem team are working on a really significant plugin for Serverless Framework which"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1284.4,
      "end": 1288.72,
      "text": " now supports SAM as well it's called SLIC Watch and it's for adding alarms and dashboards into"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1288.72,
      "end": 1294.72,
      "text": " these projects automatically. It has to basically look at your whole template find out what functions"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1294.72,
      "end": 1299.3600000000001,
      "text": " API step functions DynamoDB tables you have and creates alarms and dashboards for you."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1299.36,
      "end": 1304.08,
      "text": " When it comes to Serverless Framework it's pretty easy to write a plugin. The documentation is a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1304.08,
      "end": 1307.1999999999998,
      "text": " bit hairy but there's enough examples out there where you can figure out how to use it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1307.76,
      "end": 1311.52,
      "text": " When it comes to SAM your only option really is to create another CloudFormation macro"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1312.1599999999999,
      "end": 1319.1999999999998,
      "text": " and then I suppose that's in it's nice in some ways because it's similar syntax to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1319.1999999999998,
      "end": 1324.24,
      "text": " SAM itself you just add another macro and CloudFormation service is going to do that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1324.24,
      "end": 1330.56,
      "text": " transformation for you but the thing is deploying macros into people's accounts it takes a bit of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1330.56,
      "end": 1334.4,
      "text": " work a little bit more work than just adding a serverless plugin because you have to deploy them"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1334.4,
      "end": 1338.56,
      "text": " we can't just publish a macro to the public registry in CloudFormation you can't do that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1338.56,
      "end": 1343.84,
      "text": " only AWS can do that so it's a pity we can't do that and it just makes it a little bit more of a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1343.84,
      "end": 1350.32,
      "text": " step but once you do that it works the same you know we can use 90 of the same code to deliver"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1350.32,
      "end": 1354.72,
      "text": " to deliver a slick watch whether you're using Serverless Framework or SAM because the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1354.72,
      "end": 1359.28,
      "text": " macros are just implemented as Lambda functions and we can run them as JavaScript, same JavaScript"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1359.28,
      "end": 1364.32,
      "text": " code, so I think we've covered fairly exhaustively all the differences between these two tools"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1364.32,
      "end": 1369.12,
      "text": " so maybe this is the part that people really want to know which should they use which direct which"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1369.12,
      "end": 1373.6799999999998,
      "text": " which one is the one that people should choose for the project today and what's the future look like, where are they going?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1378.56,
      "end": 1384.8,
      "text": " Yeah that's that's definitely I know opinionated piece but we're going to try to bring some evidence into the answer like we're not going to say pick one or the other but we are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1384.8,
      "end": 1389.6799999999998,
      "text": " just going to give you some indications like if you favor a specific thing maybe one tool is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1389.6799999999998,
      "end": 1395.52,
      "text": " better than the other so definitely I like the sum generation of pipelines that you mentioned this"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1395.52,
      "end": 1401.2,
      "text": " is a really amazing feature it is always quite painful to generate pipeline codes and then"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1401.2,
      "end": 1406.8,
      "text": " testing it you probably end up doing millions of deployments just trying to figure out is my syntax"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1406.8,
      "end": 1410.6399999999999,
      "text": " correct does it really do what it wants it to do so the opportunity to just bootstrap something"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1410.6399999999999,
      "end": 1416.56,
      "text": " that it's reasonably doing most of that work and for different kind of cicds it's an amazing feature"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1416.56,
      "end": 1420.48,
      "text": " so if that's something that you really care about and something that you have been spending a lot of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1420.48,
      "end": 1425.2,
      "text": " time in the past probably going with some and leveraging this feature can be a big enabler"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1425.2,
      "end": 1434.08,
      "text": " for you and your team if you are targeting other cloud providers not just AWS that's an argument"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1434.08,
      "end": 1437.9199999999998,
      "text": " for for Serverless Framework because of course some doesn't even try to support other cloud"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1437.9199999999998,
      "end": 1442.3999999999999,
      "text": " providers so your only option really is to use Serverless Framework there between the two"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1442.96,
      "end": 1447.9199999999998,
      "text": " so again worth remarking that your code and your configuration are going to be significantly"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1447.9199999999998,
      "end": 1452.72,
      "text": " different there is no magic cloud abstraction cloud provider abstraction but the tooling"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1452.72,
      "end": 1457.12,
      "text": " remains most of the same so you could be using the same tool for both let's say AWS and Azure"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1457.12,
      "end": 1464.56,
      "text": " if you go with Serverless Framework then if you really want flexibility of configuration again"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1464.56,
      "end": 1469.52,
      "text": " this is another point in favor of Serverless Framework like if you really have requirements"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1469.52,
      "end": 1474.32,
      "text": " that force you to have very dynamic data that gets interpolated into your templates you're going to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1474.32,
      "end": 1478.56,
      "text": " have an easier time just going with Serverless Framework because with some you'll need to figure"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1478.56,
      "end": 1483.1999999999998,
      "text": " out your own pre-processing logic if you want to do something like that and this is also similar"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1483.2,
      "end": 1487.8400000000001,
      "text": " if you need to write custom extensions maybe you want to do something special at build time"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1487.8400000000001,
      "end": 1492.24,
      "text": " you have I don't know very specific build requirements or maybe you need to generate"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1492.24,
      "end": 1497.8400000000001,
      "text": " pieces of CloudFormation dynamically depending on different parameters it would be much easier"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1497.8400000000001,
      "end": 1503.04,
      "text": " to write your own custom plugin for Serverless Framework rather than having to create your own"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1503.04,
      "end": 1509.1200000000001,
      "text": " CloudFormation macro get it that deployed and then integrate it with some so another point in"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1509.12,
      "end": 1515.28,
      "text": " favor of Serverless Framework if you care about that kind of degree of extensibility so I would"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1515.28,
      "end": 1521.12,
      "text": " say that all in all Serverless Framework used to be a lot more mature than some so there might be"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1521.12,
      "end": 1527.28,
      "text": " a little bit of an opinion if you search around that some still new and not mature enough but i"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1527.28,
      "end": 1532.3999999999999,
      "text": " think this is kind of slowly changing because these days some really has caught up with all"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1532.3999999999999,
      "end": 1537.4399999999998,
      "text": " the features of well at least most of the features or the main features of Serverless Framework and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1537.44,
      "end": 1542.48,
      "text": " it has even some new features like the pipelines that we mentioned or the ability to synchronize"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1542.48,
      "end": 1550.72,
      "text": " your code with the cloud in real time that makes it really a well-worthy choice I personally used"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1550.72,
      "end": 1555.6000000000001,
      "text": " to choose a lot Serverless Framework as a default in the past these days i'm kind of always thinking"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1555.6000000000001,
      "end": 1560.4,
      "text": " a little bit more about it like if I don't really need that level of extensibility i'm probably"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1560.4,
      "end": 1567.2,
      "text": " going to default to some because it feels like a safer choice going forward and this is probably"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1567.2,
      "end": 1571.76,
      "text": " a good pivot point where we try to speculate a little bit more about what is going to be the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1571.76,
      "end": 1577.44,
      "text": " future of these two projects because this might inform your decision on whether you want to pick"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1577.44,
      "end": 1584.0800000000002,
      "text": " one or the other for a given project so again this is probably the most opinionated piece of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1584.72,
      "end": 1591.52,
      "text": " this episode so take it with a pinch of salt but our opinion is that it feels that AWS is investing"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1591.52,
      "end": 1599.52,
      "text": " a lot on some so we expected that it's only going to get better and better and they are both open"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1599.52,
      "end": 1607.2,
      "text": " source projects but it's important to see that ownership piece like while some is clearly owned"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1607.2,
      "end": 1612.56,
      "text": " by AWS and it's in the best interest of AWS to keep it up to date and add more feature and make"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1612.56,
      "end": 1618.16,
      "text": " that development experience as nicer as possible because it brings more business to AWS itself"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1618.16,
      "end": 1624.72,
      "text": " the Serverless Framework is a lot more open and as a community but at the same time the project"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1624.72,
      "end": 1630.0800000000002,
      "text": " itself is backed by a company so it's a little bit difficult to understand how is this company"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1630.0800000000002,
      "end": 1636.72,
      "text": " going to get a return there are investors of course they need to pay back on that investment"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1636.72,
      "end": 1640.3200000000002,
      "text": " and even if they care about the community and the user experience there might be decisions there"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1640.3200000000002,
      "end": 1646.8000000000002,
      "text": " that we cannot predict that will affect negatively or positively the experience of the user in the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1646.8,
      "end": 1651.9199999999998,
      "text": " end so I think there is a bigger question mark there on what's going to be the future of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1651.9199999999998,
      "end": 1658.08,
      "text": " Serverless Framework when we compare it with some and I have a slightly related note to that point"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1658.08,
      "end": 1664.3999999999999,
      "text": " which again is just my own bugbear with Serverless Framework I used to think that the serverless"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1664.3999999999999,
      "end": 1669.9199999999998,
      "text": " documentation was quite good like the documentation itself on the website but also a lot of related"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1669.9199999999998,
      "end": 1675.12,
      "text": " blog posts and it was very easy when I was doing serverless in the very early days and using"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1675.12,
      "end": 1679.6799999999998,
      "text": " Serverless Framework to just search for anything and you will easily find either a documentation"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1679.6799999999998,
      "end": 1684.8799999999999,
      "text": " or a blog post and find the answers you were looking for these days for some reason and quite"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1684.8799999999999,
      "end": 1690.32,
      "text": " unexpectedly it is not as easy anymore I find myself myself ending up more and more on the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1690.32,
      "end": 1695.1999999999998,
      "text": " commercial side of the offering that Serverless Framework has to give to users rather than"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1695.1999999999998,
      "end": 1699.36,
      "text": " actually finding the documentation for the open source tool that I'm looking for I don't know if"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1699.36,
      "end": 1704.3999999999999,
      "text": " that's intentional just to drive more business to the the commercial offering or it's just a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1704.4,
      "end": 1709.68,
      "text": " side effect of trying to combine a commercial offer together with an open source project so"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1709.68,
      "end": 1715.1200000000001,
      "text": " that the website itself becomes a little bit more convoluted and even organizing the content gets"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1715.1200000000001,
      "end": 1721.6000000000001,
      "text": " of course more difficult so I don't want to blame necessarily the serverless company for trying to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1721.6000000000001,
      "end": 1727.0400000000002,
      "text": " make revenue out of this project but the net effect on the users is that it gets more confusing"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1727.0400000000002,
      "end": 1733.2,
      "text": " to figure out how to use the open source part of the project so just to conclude I will say that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1733.2,
      "end": 1739.1200000000001,
      "text": " it is also fair to say that SAM doesn't really have a great documentation either it's probably okay"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1739.1200000000001,
      "end": 1743.6000000000001,
      "text": " but sometimes when you want to do something that is slightly off the standard it's not very easy"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1743.6000000000001,
      "end": 1748.56,
      "text": " to understand how to do that so maybe this is just a suggestion for AWS to try to invest a little bit"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1748.56,
      "end": 1753.92,
      "text": " more time in trying to document different kinds of setups different more advanced features that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1753.92,
      "end": 1758.16,
      "text": " you might have with SAM and maybe provide a lot more examples because those will will"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1758.16,
      "end": 1763.1200000000001,
      "text": " definitely help people to get started with all the different features that you might have"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1763.12,
      "end": 1765.84,
      "text": " issues and all the different kinds of permutations of projects."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1768.08,
      "end": 1774.56,
      "text": " Okay I think that that's probably more than enough that we want to cover for this episode and we gave"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1774.56,
      "end": 1779.6,
      "text": " you a lot of opinions but of course we will be curious to know what is your opinion do you prefer"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1779.6,
      "end": 1783.76,
      "text": " some do you prefer serverless what are you using for your current projects and are you going to be"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1783.76,
      "end": 1789.36,
      "text": " using something different in your next project and of course this is only a portion of this"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1789.36,
      "end": 1793.4399999999998,
      "text": " conversation because of course there are other tools there is CDK there is Pulumi there is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1793.4399999999998,
      "end": 1798.7199999999998,
      "text": " Terraform so if you don't use either SAM or Serverless and you end up using other tools,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1798.7199999999998,
      "end": 1802.8,
      "text": " we would love to know why what are your requirements why did you make this choice."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1802.8,
      "end": 1806.9599999999998,
      "text": " And maybe we can do another episode in the future where we try to explore some other of these tools"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1806.9599999999998,
      "end": 1811.04,
      "text": " and compare the differences. So thank you very much for being with us today"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1811.04,
      "end": 1820.24,
      "text": " and we look forward to seeing you in the next episode."
    }
  ]
}
