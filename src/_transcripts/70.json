{
  "speakers": {
    "spk_0": "spk_0",
    "spk_1": "spk_1"
  },
  "segments": [
    {
      "speakerLabel": "spk_0",
      "start": 0,
      "end": 4.96,
      "text": " In today's world of cloud development, collaboration is key and communication is critical."
    },
    {
      "speakerLabel": "spk_0",
      "start": 4.96,
      "end": 9.44,
      "text": " Unfortunately, sometimes work can be boring and ineffective when trying to describe complex"
    },
    {
      "speakerLabel": "spk_0",
      "start": 9.44,
      "end": 13.68,
      "text": " systems and their components. And this is especially true in AWS where you have hundreds"
    },
    {
      "speakerLabel": "spk_0",
      "start": 13.68,
      "end": 18.88,
      "text": " or even thousands of different kinds of resources to deal with. This is where diagrams comes in."
    },
    {
      "speakerLabel": "spk_0",
      "start": 19.44,
      "end": 24.240000000000002,
      "text": " Being able to sketch and understand diagrams is an essential part of the work of any cloud developer."
    },
    {
      "speakerLabel": "spk_0",
      "start": 24.240000000000002,
      "end": 29.6,
      "text": " I'm Luciano here with Eoin and this is AWS Bites Podcast. And today we'll explore why diagrams are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 29.6,
      "end": 34.480000000000004,
      "text": " so essential and how to create effective ones. We will also look at different tools available"
    },
    {
      "speakerLabel": "spk_0",
      "start": 34.480000000000004,
      "end": 38.24,
      "text": " to make the process easier from manual tools to programmatic ones. And finally,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 38.24,
      "end": 42.56,
      "text": " we will discuss how to share your diagrams with your team and stakeholders effectively."
    },
    {
      "speakerLabel": "spk_0",
      "start": 42.56,
      "end": 43.52,
      "text": " So let's dive in."
    },
    {
      "speakerLabel": "spk_0",
      "start": 52.64,
      "end": 58,
      "text": " AWS Bites is sponsored by Fortier. Fortier is an AWS partner for migration, architecture,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 58,
      "end": 62.96,
      "text": " and training. Find out more at fortierm.com. You will find this link in the show notes."
    },
    {
      "speakerLabel": "spk_0",
      "start": 64,
      "end": 69.36,
      "text": " So just to get started, I want to clarify why are we even doing diagrams. And of course,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 69.36,
      "end": 75.76,
      "text": " communication is key. Unfortunately, we cannot always write software alone. We need to work in"
    },
    {
      "speakerLabel": "spk_0",
      "start": 75.76,
      "end": 80.56,
      "text": " a team. So we need to figure out how to collaborate and communicate effectively with other humans."
    },
    {
      "speakerLabel": "spk_0",
      "start": 81.44,
      "end": 87.28,
      "text": " So words sometimes are really boring and pictures can tell us a lot of things. As we say,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 87.28,
      "end": 95.2,
      "text": " a picture is sometimes worth a thousand words. So in general, when you are trying to describe"
    },
    {
      "speakerLabel": "spk_0",
      "start": 95.2,
      "end": 99.28,
      "text": " a complex architecture with lots of moving parts, lots of components,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 99.28,
      "end": 103.28,
      "text": " if you can provide a visual representation of that, it's going to be much easier,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 103.28,
      "end": 107.76,
      "text": " first of all, for yourself to understand it, but also for other people to understand what's going"
    },
    {
      "speakerLabel": "spk_0",
      "start": 107.76,
      "end": 114.96000000000001,
      "text": " on and being able to contribute. So the next question is where do we start? What do we even"
    },
    {
      "speakerLabel": "spk_0",
      "start": 114.96,
      "end": 121.91999999999999,
      "text": " put in our diagrams?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 121.91999999999999,
      "end": 126.24,
      "text": " When we're talking about AWS diagrams, maybe we should talk about where those sit and the other type of diagrams you might create. So if we think about the resolution and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 126.24,
      "end": 131.44,
      "text": " what kind of a message we're trying to get across, we could go back to the, there's a standard out"
    },
    {
      "speakerLabel": "spk_1",
      "start": 131.44,
      "end": 137.35999999999999,
      "text": " there, which is reasonably well known called the C4 standard for diagrams. And it describes,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 137.36,
      "end": 145.28,
      "text": " you know, component level, context level, container level, and code level. And so it basically"
    },
    {
      "speakerLabel": "spk_1",
      "start": 145.28,
      "end": 150.16000000000003,
      "text": " describes four different hierarchical levels of detail you can put into architecture diagrams."
    },
    {
      "speakerLabel": "spk_1",
      "start": 150.16000000000003,
      "end": 155.68,
      "text": " Now, I wouldn't follow that model necessarily all the time, but I think it's useful just as a,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 155.68,
      "end": 159.28000000000003,
      "text": " to give you a bit of context so you can start thinking about the different levels. So"
    },
    {
      "speakerLabel": "spk_1",
      "start": 159.28000000000003,
      "end": 162.96,
      "text": " you might say at one level, you've got like an enterprise level, which just shows all of the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 162.96,
      "end": 169.12,
      "text": " systems in a whole organization. You don't want to have AWS icons in there. That's generally block"
    },
    {
      "speakerLabel": "spk_1",
      "start": 169.12,
      "end": 174,
      "text": " diagrams at a very high level showing very high level interactions between systems. But then you've"
    },
    {
      "speakerLabel": "spk_1",
      "start": 174,
      "end": 180.64000000000001,
      "text": " got maybe a level down from that that shows some detail, still a block diagram on, you know, a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 180.64000000000001,
      "end": 185.76000000000002,
      "text": " domain within that system. But if you get into bounded contexts or very specific workflows,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 185.76000000000002,
      "end": 191.28,
      "text": " that's the level where you will want to probably start showing some of the physical resources that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 191.28,
      "end": 195.68,
      "text": " you're going to be deploying. So it's almost like a deployment diagram. And in some ways,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 195.68,
      "end": 199.44,
      "text": " I would almost say that this is a bit like a component diagram or in the olden days,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 199.44,
      "end": 204.32,
      "text": " I would say when you had monolithic applications in object oriented languages, and you might have"
    },
    {
      "speakerLabel": "spk_1",
      "start": 204.32,
      "end": 209.6,
      "text": " a class diagram. Sometimes that was way too much level of detail in general, it was I would say,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 209.6,
      "end": 215.36,
      "text": " and difficult to keep in sync with your code. But in some ways, AWS resources can be as fine-grained"
    },
    {
      "speakerLabel": "spk_1",
      "start": 215.36,
      "end": 219.76,
      "text": " as classes were back then, because you've got so many of them and there's so many small subtle"
    },
    {
      "speakerLabel": "spk_1",
      "start": 219.76,
      "end": 225.2,
      "text": " interactions between them all. So it's very important to get the right level of resolution"
    },
    {
      "speakerLabel": "spk_1",
      "start": 225.2,
      "end": 231.44,
      "text": " right. If you have hundreds of resources on one diagram, it's very unlikely, it might be useful,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 231.44,
      "end": 238.95999999999998,
      "text": " like a large map of navigating your system. But if you want to portray a message to other developers,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 238.95999999999998,
      "end": 244.64,
      "text": " architectures, architects, business stakeholders, you probably want something smaller. So I would"
    },
    {
      "speakerLabel": "spk_1",
      "start": 244.64,
      "end": 250.23999999999998,
      "text": " say that maybe think about individual stacks or deployments, individual microservices, diagram"
    },
    {
      "speakerLabel": "spk_1",
      "start": 250.23999999999998,
      "end": 256.24,
      "text": " those using your AWS icons, and then look at higher level block diagrams to show the picture"
    },
    {
      "speakerLabel": "spk_1",
      "start": 256.24,
      "end": 263.28,
      "text": " one level up from that. So when we're talking about AWS icons, we see lots of different flavors"
    },
    {
      "speakerLabel": "spk_1",
      "start": 263.28,
      "end": 270.32,
      "text": " of AWS icons. It's a bit of a bugbear of mine for some reason, but you do have older diagram icon"
    },
    {
      "speakerLabel": "spk_1",
      "start": 270.32,
      "end": 277.68,
      "text": " styles and newer ones. I think they came up with a release in 2017, 2019, and 2021. The 2017 ones"
    },
    {
      "speakerLabel": "spk_1",
      "start": 277.68,
      "end": 281.52,
      "text": " look pretty outdated by now, but you still see them a lot in the wild and sometimes mixed with"
    },
    {
      "speakerLabel": "spk_1",
      "start": 281.52,
      "end": 287.12,
      "text": " the new styles. I think it's a good idea to use the latest style where available and also to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 287.12,
      "end": 291.44,
      "text": " include the labels because it's not obvious to everybody what all those icons mean, especially"
    },
    {
      "speakerLabel": "spk_1",
      "start": 291.44,
      "end": 297.28,
      "text": " when you've got 50 different orange icons that look subtly different, just put the label on there."
    },
    {
      "speakerLabel": "spk_1",
      "start": 297.28,
      "end": 303.2,
      "text": " But those are available on the AWS website. So this PowerPoint version, there's PNG and SVG"
    },
    {
      "speakerLabel": "spk_1",
      "start": 303.2,
      "end": 308.47999999999996,
      "text": " download available. And most of the tools include them embedded in, or you can import them."
    },
    {
      "speakerLabel": "spk_1",
      "start": 310.79999999999995,
      "end": 316.4,
      "text": " Maybe before we talk about tools, I would say that the last thing, and one thing I've heard the C4"
    },
    {
      "speakerLabel": "spk_1",
      "start": 316.4,
      "end": 319.52,
      "text": " advocates talk about quite often, which is a really good idea, is always put a title and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 319.52,
      "end": 324.32,
      "text": " description with your diagrams. I've been guilty of creating diagrams in the past and I go back"
    },
    {
      "speakerLabel": "spk_1",
      "start": 324.32,
      "end": 328.4,
      "text": " to read them myself. And because I didn't put a title and description, I'm not sure exactly what"
    },
    {
      "speakerLabel": "spk_1",
      "start": 328.4,
      "end": 333.68,
      "text": " the scope is and what story it's trying to tell. That really helps. And if people read a title and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 333.68,
      "end": 338.48,
      "text": " a two line description, it'll sometimes really do wonders for making sure that people are"
    },
    {
      "speakerLabel": "spk_1",
      "start": 338.48,
      "end": 344.4,
      "text": " communicating at the right level. So that's really what we're trying to achieve. We're trying to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 344.4,
      "end": 349.36,
      "text": " communicate at that level. And the question is, how do you create them? What are the tools to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 349.36,
      "end": 353.84,
      "text": " produce them? Where do we start with that? Yeah."
    },
    {
      "speakerLabel": "spk_0",
      "start": 353.84,
      "end": 359.84,
      "text": " So before we move into that, I just want to mention that I love your comment about icons. And I found very funny that often people confuse the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 359.84,
      "end": 366.64,
      "text": " Lambda icon with the Half-Life video game icon, because they're so similar that it's very easy to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 366.64,
      "end": 370.96,
      "text": " confuse them. But that happens when you just search for Lambda rather than having an icon set"
    },
    {
      "speakerLabel": "spk_0",
      "start": 370.96,
      "end": 376.71999999999997,
      "text": " that is already created for AWS. So that's just another way of saying that if you have an icon set"
    },
    {
      "speakerLabel": "spk_0",
      "start": 376.71999999999997,
      "end": 381.28,
      "text": " already incorporated in your diagramming tool, it's just easier to end up with the right icons"
    },
    {
      "speakerLabel": "spk_0",
      "start": 381.28,
      "end": 384.47999999999996,
      "text": " without having to search a specific icon all the time on the web."
    },
    {
      "speakerLabel": "spk_0",
      "start": 385.28,
      "end": 389.67999999999995,
      "text": " Now, there is a reference set of architecture diagrams AWS have as well."
    },
    {
      "speakerLabel": "spk_1",
      "start": 389.67999999999995,
      "end": 396.4,
      "text": " But one of the things, the icons also come with, you have a resource icon and then the service icon. But not all"
    },
    {
      "speakerLabel": "spk_1",
      "start": 396.4,
      "end": 401.28,
      "text": " resources have both different flavors. So you have one icon, which is for the Lambda function,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 401.28,
      "end": 407.35999999999996,
      "text": " and one which is for the Lambda service. And it can become difficult to use and to know which"
    },
    {
      "speakerLabel": "spk_1",
      "start": 407.36,
      "end": 411.84000000000003,
      "text": " one to pick and to use consistently. But I guess the important thing there is just to pick one"
    },
    {
      "speakerLabel": "spk_1",
      "start": 411.84000000000003,
      "end": 416.96000000000004,
      "text": " approach and stick with it rather than mixing them."
    },
    {
      "speakerLabel": "spk_0",
      "start": 416.96000000000004,
      "end": 423.28000000000003,
      "text": " So going back to tools, I think we just need to discuss, first of all, what are the things that will look into specific tools for diagrams?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 423.28000000000003,
      "end": 426.8,
      "text": " And then we can mention what are some different kinds of tools, because there are different"
    },
    {
      "speakerLabel": "spk_0",
      "start": 426.8,
      "end": 431.52000000000004,
      "text": " approaches to creating diagrams and different tools to try to satisfy these different approaches."
    },
    {
      "speakerLabel": "spk_0",
      "start": 431.52,
      "end": 437.35999999999996,
      "text": " So the first thing for me, at least, is how easy the tool is, especially if you are talking about"
    },
    {
      "speakerLabel": "spk_0",
      "start": 437.35999999999996,
      "end": 443.03999999999996,
      "text": " a visual tool, how easy it is to actually put things on screen, resize things, move them around,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 443.03999999999996,
      "end": 451.12,
      "text": " group them, connect them with arrows or, I don't know, boundaries. And I found that different tools"
    },
    {
      "speakerLabel": "spk_0",
      "start": 451.12,
      "end": 455.84,
      "text": " have very different characteristics in that respect. Some make this process very, very easy."
    },
    {
      "speakerLabel": "spk_0",
      "start": 455.84,
      "end": 459.59999999999997,
      "text": " Other ones are a little bit more cumbersome and you might end up spending a lot of time just"
    },
    {
      "speakerLabel": "spk_0",
      "start": 459.6,
      "end": 465.28000000000003,
      "text": " trying to put things in order in the screen. So that's, for me, a very important dimension."
    },
    {
      "speakerLabel": "spk_0",
      "start": 465.28000000000003,
      "end": 471.44,
      "text": " Then we already mentioned icons. So is that tool something that gives us easy access to AWS icons?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 471.44,
      "end": 477.84000000000003,
      "text": " And if it does, are the icons up to date with the latest versions? Or at least are they categorized"
    },
    {
      "speakerLabel": "spk_0",
      "start": 477.84000000000003,
      "end": 482.16,
      "text": " in such a way that it's going to be easy for me to pick up the right icons? And then finally,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 482.16,
      "end": 487.12,
      "text": " trying to distinguish different kinds of tools, we have manual tools, which is generally the visual"
    },
    {
      "speakerLabel": "spk_0",
      "start": 487.12,
      "end": 491.68,
      "text": " kind of approach that is probably the most common, where you have to draw everything,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 491.68,
      "end": 496.48,
      "text": " but you have these panels with lots of icons and you can drag and drop and move things around."
    },
    {
      "speakerLabel": "spk_0",
      "start": 496.48,
      "end": 500,
      "text": " But we also have other types of tools. We have, for instance, programmatic tools,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 500,
      "end": 505.92,
      "text": " where you use some kind of programming language or maybe declarative language is more correct to say."
    },
    {
      "speakerLabel": "spk_0",
      "start": 506.56,
      "end": 511.92,
      "text": " Something like mermaid or something similar to markdown, where basically with that particular"
    },
    {
      "speakerLabel": "spk_0",
      "start": 511.92,
      "end": 517.6800000000001,
      "text": " syntax, you can express what are the building blocks and how do they connect with each other?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 517.6800000000001,
      "end": 522.32,
      "text": " Generally, these tools are a little bit more generic, but maybe you can also use them to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 522.32,
      "end": 528,
      "text": " build your own AWS architecture diagrams. And finally, there is another category of tools,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 528,
      "end": 533.76,
      "text": " which is probably one of the most interesting, but we'll talk more about the implications of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 533.76,
      "end": 539.12,
      "text": " that approach, which is when you have already your infrastructure defined as infrastructure as code,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 539.12,
      "end": 544.16,
      "text": " and you can use a tool that is able to read and understand that and produce an architecture"
    },
    {
      "speakerLabel": "spk_0",
      "start": 544.16,
      "end": 548.08,
      "text": " diagram from you out of the box. So you don't need to do anything manually. Just give it"
    },
    {
      "speakerLabel": "spk_0",
      "start": 548.08,
      "end": 552.16,
      "text": " your infrastructure as code and the tool is going to produce you. Hopefully a nice diagram."
    },
    {
      "speakerLabel": "spk_0",
      "start": 552.88,
      "end": 556.96,
      "text": " So let's start maybe with the manual tools. Which ones are your favorite, Eoin?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 559.84,
      "end": 564.96,
      "text": " Yeah, when I started creating diagrams, I was using tools like Rational Rows and then Visio."
    },
    {
      "speakerLabel": "spk_1",
      "start": 564.96,
      "end": 572.5600000000001,
      "text": " It's funny that Visio is still around. I try not to use it very often, I guess, because these days"
    },
    {
      "speakerLabel": "spk_1",
      "start": 572.5600000000001,
      "end": 577.84,
      "text": " we're a little bit more focused on collaborative SaaS-based tools. And I've been using Lucidchart"
    },
    {
      "speakerLabel": "spk_1",
      "start": 577.84,
      "end": 584.08,
      "text": " now for over a decade. And it does AWS diagrams really well. It also does higher-level block"
    },
    {
      "speakerLabel": "spk_1",
      "start": 584.08,
      "end": 588.5600000000001,
      "text": " diagrams really well. It's completely browser-based. And you do have to pay for it,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 588.5600000000001,
      "end": 593.9200000000001,
      "text": " but it does have good collaboration tools for teams and different users and permissions"
    },
    {
      "speakerLabel": "spk_1",
      "start": 593.92,
      "end": 597.04,
      "text": " within your organization. Where it can get difficult then is when you're sharing with"
    },
    {
      "speakerLabel": "spk_1",
      "start": 597.04,
      "end": 600.7199999999999,
      "text": " other people outside your company. If you're working on a private project but you can't"
    },
    {
      "speakerLabel": "spk_1",
      "start": 600.7199999999999,
      "end": 604.56,
      "text": " share the diagram publicly, because that means people need to have an account. And with the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 604.56,
      "end": 610,
      "text": " free version, they can't necessarily edit the diagram that you shared with them or add"
    },
    {
      "speakerLabel": "spk_1",
      "start": 610,
      "end": 614,
      "text": " resources to it because they may not have the license. So that's a bit of a challenge with"
    },
    {
      "speakerLabel": "spk_1",
      "start": 614,
      "end": 618.64,
      "text": " Lucidchart, but I'm just so familiar with it after using it for so long. There is a free"
    },
    {
      "speakerLabel": "spk_1",
      "start": 618.64,
      "end": 623.28,
      "text": " alternative, which is I think really popular out there now. It used to be called Drawdown."
    },
    {
      "speakerLabel": "spk_1",
      "start": 623.28,
      "end": 627.36,
      "text": " It used to be called draw.io, but it changed to diagrams.net. And it's very similar to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 627.36,
      "end": 631.8399999999999,
      "text": " Lucidchart, but it's free and open source. The reason I'm kind of drawn to that these"
    },
    {
      "speakerLabel": "spk_1",
      "start": 631.8399999999999,
      "end": 637.12,
      "text": " days, if you'll excuse the pun, it's got a desktop app and also a Visual Studio code"
    },
    {
      "speakerLabel": "spk_1",
      "start": 637.12,
      "end": 641.8399999999999,
      "text": " plugin. And it also allows you to store the diagrams in a variety of different backends."
    },
    {
      "speakerLabel": "spk_1",
      "start": 641.8399999999999,
      "end": 645.92,
      "text": " So you can store it in your Google Drive, but you can also store it locally on your file system."
    },
    {
      "speakerLabel": "spk_1",
      "start": 645.92,
      "end": 650,
      "text": " So if you're imagining that you've got a diagram in your code base sitting alongside your code,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 650,
      "end": 654,
      "text": " if you're using the VS Code plugin, it allows you to version that diagram with your code. And that's"
    },
    {
      "speakerLabel": "spk_1",
      "start": 654,
      "end": 660.4,
      "text": " a really nice benefit. Another one I really like is Excalidraw. And I think this is another browser"
    },
    {
      "speakerLabel": "spk_1",
      "start": 660.4,
      "end": 666.8,
      "text": " based one, but it allows you to create a much more informal style. It isn't big on AWS icons. I think"
    },
    {
      "speakerLabel": "spk_1",
      "start": 666.8,
      "end": 670.96,
      "text": " if you want to get the full set, you kind of have to import them yourself. And there's another one"
    },
    {
      "speakerLabel": "spk_1",
      "start": 670.96,
      "end": 676,
      "text": " which is also reasonably popular. For a long time, I didn't like it. It's called Cloudcraft."
    },
    {
      "speakerLabel": "spk_1",
      "start": 676,
      "end": 682.64,
      "text": " And you might recognize those kind of 3D diagrams that it creates because they were popular with a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 682.64,
      "end": 687.52,
      "text": " lot of blog post authors for a while. I always found it a little bit mind boggling because I"
    },
    {
      "speakerLabel": "spk_1",
      "start": 687.52,
      "end": 692.48,
      "text": " had to kind of crane my neck to view the diagram. I'd much prefer a 2D diagram, but I know that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 692.48,
      "end": 696.48,
      "text": " they've since added support to render them as 2D as well. So that's quite a nice one."
    },
    {
      "speakerLabel": "spk_1",
      "start": 697.2,
      "end": 703.36,
      "text": " And I think Lucidchart and Cloudcraft both have some level of support for importing your diagrams"
    },
    {
      "speakerLabel": "spk_1",
      "start": 703.36,
      "end": 709.12,
      "text": " from AWS. But I have to say, I've tried these things and I've never found it to be effective."
    },
    {
      "speakerLabel": "spk_1",
      "start": 710.72,
      "end": 716.64,
      "text": " On the subject of manual tools, when we were all working in offices back in the day, we just used"
    },
    {
      "speakerLabel": "spk_1",
      "start": 716.64,
      "end": 722.24,
      "text": " to use whiteboard markers, draw these diagrams on a whiteboard, take a picture and maybe digitize"
    },
    {
      "speakerLabel": "spk_1",
      "start": 722.24,
      "end": 727.84,
      "text": " them later with something like Lucidchart. These days, if I have to do something like that, I use"
    },
    {
      "speakerLabel": "spk_1",
      "start": 727.84,
      "end": 733.6,
      "text": " TLDraw, which has a really nice rendering and drawing algorithm. So it feels super smooth and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 733.6,
      "end": 739.44,
      "text": " really as close as I've seen to just a whiteboard marker experience. I use it with a Wacom tablet,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 739.44,
      "end": 744.8000000000001,
      "text": " just a simple basic Wacom tablet. And it works really well. You've actually used it as well,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 744.8000000000001,
      "end": 751.36,
      "text": " Luciano, but I think with a iPad, is that right?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 751.36,
      "end": 757.6,
      "text": " Yeah, that's actually an interesting one because I use it in the iPad using the iOS and just opening a browser. And then you can use the Apple Pencil"
    },
    {
      "speakerLabel": "spk_0",
      "start": 757.6,
      "end": 761.76,
      "text": " and it works really well. But recently I discovered another way of using it, which is even more"
    },
    {
      "speakerLabel": "spk_0",
      "start": 761.76,
      "end": 768.08,
      "text": " convenient because if you use a MacBook, you can connect the iPad as a second screen. Then at that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 768.08,
      "end": 775.28,
      "text": " point you can drag a browser window into the iPad and open TLDraw there. At that point, that's"
    },
    {
      "speakerLabel": "spk_0",
      "start": 775.28,
      "end": 781.28,
      "text": " actually a touch screen. So you can still use the Apple Pencil to draw. And at that point, because"
    },
    {
      "speakerLabel": "spk_0",
      "start": 781.28,
      "end": 785.6800000000001,
      "text": " you are in the same operative system, you can easily copy paste the result or render files"
    },
    {
      "speakerLabel": "spk_0",
      "start": 785.68,
      "end": 791.04,
      "text": " directly into your operative system. And it gets even easier to share the result of your sketches"
    },
    {
      "speakerLabel": "spk_0",
      "start": 791.04,
      "end": 796.7199999999999,
      "text": " in this TLDraw whiteboard. So it's a really convenient way of using it. I'm actually liking"
    },
    {
      "speakerLabel": "spk_0",
      "start": 796.7199999999999,
      "end": 805.4399999999999,
      "text": " it a lot. And the other thing is that there is a beta version. So you can go to beta.tldraw.com,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 805.4399999999999,
      "end": 811.76,
      "text": " which is still not perfect. There are still things that don't work 100%, but that seems like an even"
    },
    {
      "speakerLabel": "spk_0",
      "start": 811.76,
      "end": 817.6,
      "text": " nicer and easier to use version of this tool. So one of my favorites so far in this category."
    },
    {
      "speakerLabel": "spk_0",
      "start": 820.24,
      "end": 826.72,
      "text": " So should we move to programmatic tools maybe? We explored already manual tools and what we can do"
    },
    {
      "speakerLabel": "spk_0",
      "start": 826.72,
      "end": 831.76,
      "text": " with them. So what are some programmatic tools that maybe you can use to sketch diagrams?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 832.56,
      "end": 839.68,
      "text": " One of the most famous that I've seen is called mermaid, which works really well for C4 and ER"
    },
    {
      "speakerLabel": "spk_0",
      "start": 839.68,
      "end": 847.28,
      "text": " type of diagrams. The problem is that to do AWS, really you will need to import icons. And I don't"
    },
    {
      "speakerLabel": "spk_0",
      "start": 847.28,
      "end": 851.68,
      "text": " know if it's even possible to import icons right now. So it is really good for doing the kind of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 851.68,
      "end": 856.88,
      "text": " defining blocks and how these blocks are connected with each other. But then if you want to kind of"
    },
    {
      "speakerLabel": "spk_0",
      "start": 856.88,
      "end": 861.4399999999999,
      "text": " customize the output and maybe style it in different ways, you don't really have a lot"
    },
    {
      "speakerLabel": "spk_0",
      "start": 861.4399999999999,
      "end": 869.1999999999999,
      "text": " of flexibility. Then another one is a Python library that is called diagrams. So the way"
    },
    {
      "speakerLabel": "spk_0",
      "start": 869.2,
      "end": 875.9200000000001,
      "text": " you use it is basically with code. You import this library into a Python script and then this"
    },
    {
      "speakerLabel": "spk_0",
      "start": 875.9200000000001,
      "end": 883.2,
      "text": " library will give you factory classes that allow you to instantiate different things. And you can"
    },
    {
      "speakerLabel": "spk_0",
      "start": 883.2,
      "end": 890.5600000000001,
      "text": " also instantiate resources, classes that represent resources in AWS. So you can use this diagrams"
    },
    {
      "speakerLabel": "spk_0",
      "start": 891.12,
      "end": 894.96,
      "text": " library to basically describe how your architecture is going to look like."
    },
    {
      "speakerLabel": "spk_0",
      "start": 894.96,
      "end": 900.72,
      "text": " And then the outcome of that is that it's going to render kind of a screenshot of an"
    },
    {
      "speakerLabel": "spk_0",
      "start": 900.72,
      "end": 907.44,
      "text": " architectural diagram for you. There are other ones. There is one called picture, which is"
    },
    {
      "speakerLabel": "spk_0",
      "start": 907.44,
      "end": 915.12,
      "text": " spelled P-I-K-C-H-R. And another one called croki, which are online tools. And I don't"
    },
    {
      "speakerLabel": "spk_0",
      "start": 915.12,
      "end": 922.24,
      "text": " remember exactly what picture does, but croki is kind of something that does it all. It basically"
    },
    {
      "speakerLabel": "spk_0",
      "start": 922.24,
      "end": 927.84,
      "text": " supports all the most common programmatic tools for diagrams and basically allows you to easily"
    },
    {
      "speakerLabel": "spk_0",
      "start": 927.84,
      "end": 933.2,
      "text": " see examples of each and every one of them. And also a very nice feature that basically allows"
    },
    {
      "speakerLabel": "spk_0",
      "start": 933.2,
      "end": 938.88,
      "text": " you to render all the different kinds of diagrams that are supported by just constructing a URL that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 938.88,
      "end": 944.08,
      "text": " contains basically the entire content of the diagram as code. And then you can easily share"
    },
    {
      "speakerLabel": "spk_0",
      "start": 944.08,
      "end": 949.12,
      "text": " that URL with anyone and they will see the diagram rendered. So definitely an interesting tool to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 949.12,
      "end": 955.12,
      "text": " explore if you just want to easily give a preview to somebody for an architectural diagram, or maybe"
    },
    {
      "speakerLabel": "spk_0",
      "start": 955.12,
      "end": 959.52,
      "text": " if you want to embed this in a repository just to get a preview of that particular diagram."
    },
    {
      "speakerLabel": "spk_0",
      "start": 960.5600000000001,
      "end": 966.48,
      "text": " Now, in general, we'll say that the advantage of using these tools is that you can easily keep the"
    },
    {
      "speakerLabel": "spk_0",
      "start": 967.04,
      "end": 971.44,
      "text": " diagrams together with your code because effectively it is code that is text that you"
    },
    {
      "speakerLabel": "spk_0",
      "start": 971.44,
      "end": 976.32,
      "text": " can keep in your code base and version it. And the disadvantage, of course, is that you will"
    },
    {
      "speakerLabel": "spk_0",
      "start": 976.32,
      "end": 981.44,
      "text": " need to learn the specific language of that tool. Like everyone has a slightly different flavor and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 981.44,
      "end": 987.12,
      "text": " it might get a while to get used to the semantic of that particular language and be proficient with"
    },
    {
      "speakerLabel": "spk_0",
      "start": 987.12,
      "end": 992.72,
      "text": " it. So maybe there is a bit of a learning curve, but I think eventually there is a lot of value"
    },
    {
      "speakerLabel": "spk_0",
      "start": 992.72,
      "end": 1001.84,
      "text": " that you will unblock by using some of these tools. The next category is generating diagrams"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1001.84,
      "end": 1006.72,
      "text": " from your infrastructure as code. Do you know any tool for that, Lohan?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1006.72,
      "end": 1011.36,
      "text": " There's a couple I've used quite recently, actually, that I think are pretty impressive."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1011.36,
      "end": 1016,
      "text": " The first one is called CFN Diagram. So this is for AWS and it's for cloud formation, hence the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1016,
      "end": 1023.2800000000001,
      "text": " CFN. So it's by Lars Jakobsen. And I'm just really impressed by what this tool can do. So you need a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1023.2800000000001,
      "end": 1027.3600000000001,
      "text": " cloud formation template. That's what you feed it. So if you're using Serverless frameworks, CDK,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1027.36,
      "end": 1036.1599999999999,
      "text": " cloud formation, any of those tools, Sam, you can use this. And it supports different output types."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1036.1599999999999,
      "end": 1043.04,
      "text": " So it supports like ASCII output. It can generate Mermaid diagrams. It can generate draw.io output."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1043.6799999999998,
      "end": 1048.24,
      "text": " So it can even like, you can sync it up with your VS code so that you can view the diagrams there."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1049.28,
      "end": 1055.52,
      "text": " So it's got ASCII art, draw.io, Mermaid diagrams, and I think Graph is as well."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1055.52,
      "end": 1061.36,
      "text": " So all in all, I think it's pretty powerful. The diagrams look really good that it generates."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1061.36,
      "end": 1065.52,
      "text": " Of course, with all generated diagrams, ultimately, if your code is complex and your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1065.52,
      "end": 1069.52,
      "text": " infrastructure is complex, the resulting diagram is going to be complex. And the more resources"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1069.52,
      "end": 1074.8799999999999,
      "text": " you have in there, the more difficult it will be to read. But I think I've been impressed by the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1074.8799999999999,
      "end": 1080.4,
      "text": " output so far. And if you've got an existing code base and you don't have any diagrams for it, you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1080.4,
      "end": 1084.56,
      "text": " could use either something like X-Ray, like use your service map, like your actual dependency"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1084.56,
      "end": 1090,
      "text": " graph to start off, or you could use a tool like this. So I'd really recommend checking that one"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1090,
      "end": 1093.9199999999998,
      "text": " out. And if you're using CDK, people might already be familiar with another one by Tom"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1093.9199999999998,
      "end": 1100.32,
      "text": " Rushko called CDK-Dya. And it does a similar job. It generates, I think it's got a few different"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1100.32,
      "end": 1107.6,
      "text": " formats. I've just basically generated PNGs from it. And it'll include like bounding boxes."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1107.6,
      "end": 1112.8799999999999,
      "text": " So different stacks within your architecture and different constructs will be grouped together."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1112.88,
      "end": 1117.7600000000002,
      "text": " So again, if your code is nicely structured, your diagram will look well. So it's good incentive"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1117.7600000000002,
      "end": 1121.1200000000001,
      "text": " actually to break your application down into small stacks that are nicely structured."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1122.24,
      "end": 1126.88,
      "text": " Outside of CloudFormation, I'm probably not the best person to give advice on the Terraform"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1126.88,
      "end": 1131.1200000000001,
      "text": " ecosystem. I know you can do Terraform graph, and I have used that from time to time. And that'll"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1131.1200000000001,
      "end": 1136.96,
      "text": " basically generate a dot format for graph is that will generate a, basically a dependency diagram"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1136.96,
      "end": 1142.48,
      "text": " for your infrastructure. And I guess a new one in this space is the AWS application component."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1142.48,
      "end": 1147.2,
      "text": " So that's called the AWS application composer, which is the new tool that was announced at"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1147.2,
      "end": 1151.04,
      "text": " reInvent last year. The team that built this is essentially the team that built another tool that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1151.04,
      "end": 1155.44,
      "text": " was very similar to this in the past called Stackery. And AWS acquired that company and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1155.44,
      "end": 1159.84,
      "text": " they've come up with some really nice tooling in AWS application composer. So as this adds more"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1159.84,
      "end": 1164,
      "text": " and more services, it's going to get really compelling because it can sync the code and"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1164,
      "end": 1172,
      "text": " the diagram in your console using the file system API in your browser. So that's a pretty good set,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1172,
      "end": 1177.44,
      "text": " AWS applications. Those are really good for starting off to get a diagram. You can even"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1177.44,
      "end": 1183.6,
      "text": " generate them as part of your build system and include them in your readme then as part of an"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1183.6,
      "end": 1188.72,
      "text": " automated process. We mentioned that these are ultimately a tool for communication between"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1188.72,
      "end": 1192.32,
      "text": " members of a team and people in the company. So what do we do about sharing them and keeping them"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1192.32,
      "end": 1197.36,
      "text": " up to date and all that kind of stuff? Yeah."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1197.36,
      "end": 1203.04,
      "text": " So we already said that programmatic tools are better because you can keep them in a repository. So when you are sharing the code, if you have"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1203.04,
      "end": 1207.6799999999998,
      "text": " these diagrams in line with the code, they are immediately available to at least people that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1207.6799999999998,
      "end": 1212.8,
      "text": " are trying to understand the code or contribute to the code. So that's definitely one way you can"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1212.8,
      "end": 1219.6799999999998,
      "text": " use programmatic tools. Manual tools are I think that they have kind of a lower barrier to entry"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1219.6799999999998,
      "end": 1224.3999999999999,
      "text": " because it's easier to just you open this kind of white canvas and it's easier to understand"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1224.4,
      "end": 1229.2,
      "text": " how to drag and drop things and connect them. But then you have the problem that how do you share"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1229.2,
      "end": 1233.3600000000001,
      "text": " them? Sometimes you need to give people access to that particular tool. For instance, we mentioned"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1233.3600000000001,
      "end": 1239.3600000000001,
      "text": " already Lucidchart, which has that particular problem. And the tool kind of becomes effectively"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1239.3600000000001,
      "end": 1244.72,
      "text": " a repository for you to host all your diagrams, which might get very messy. And if you are a"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1244.72,
      "end": 1249.1200000000001,
      "text": " company that deals with different projects and you want to share the diagrams with your customers,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1249.68,
      "end": 1254.16,
      "text": " how do you do that? So sometimes you just end up exporting pictures and putting these pictures"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1254.16,
      "end": 1259.6000000000001,
      "text": " somewhere. And then there is the problem of how do you keep things in sync? Every time you change"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1259.6000000000001,
      "end": 1263.44,
      "text": " the diagram, you need to re-export the picture and make sure to copy it in the right place, which"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1264.0800000000002,
      "end": 1269.3600000000001,
      "text": " I've seen is kind of a common issue and you generally end up with pictures that are out"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1269.3600000000001,
      "end": 1275.52,
      "text": " of sync with the actual architecture diagram. So I don't necessarily have a solution for that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1275.52,
      "end": 1280.4,
      "text": " problem except trying to be diligent with this process, but just be aware that when you use"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1280.4,
      "end": 1284.48,
      "text": " programmatic tools, you can kind of create pipelines that render the pictures and put"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1284.48,
      "end": 1289.6000000000001,
      "text": " them in the right places. When you're doing things manually using a manual tool, it's much harder to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1289.6000000000001,
      "end": 1295.0400000000002,
      "text": " achieve that. So you have to be more diligent and trying to propagate the rendering of that diagram"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1295.0400000000002,
      "end": 1301.3600000000001,
      "text": " correctly in the right place. And then the other point is where is the place that people are"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1301.3600000000001,
      "end": 1306.88,
      "text": " expected to go in that particular organization to consume these architecture diagrams? Sometimes"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1306.88,
      "end": 1311.2,
      "text": " certain companies rely a lot on wikis, something like Confluence and there are specific sections"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1311.2,
      "end": 1315.92,
      "text": " for architecture, so they do expect to go there and be able to find some kind of visualization"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1315.92,
      "end": 1320.5600000000002,
      "text": " of this architecture. So in that case, you don't really have a lot of options. You still need to"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1320.5600000000002,
      "end": 1325.5200000000002,
      "text": " export pictures and embed them in the wiki system. I don't know if certain wiki systems maybe have"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1325.5200000000002,
      "end": 1332,
      "text": " plugins that can integrate with specific tools like Lucidchart or Visio or other things. Maybe"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1332,
      "end": 1336.4,
      "text": " there could be an option to try to keep things a little bit more in sync, but generally it gets"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1336.4,
      "end": 1342.16,
      "text": " more complicated to work with these kind of integrations. Another thing that I really like"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1342.16,
      "end": 1347.52,
      "text": " is to have diagrams in the readme. So again, if you work in a repository, don't just put the code"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1347.52,
      "end": 1352.16,
      "text": " there, but try to come up with a render version so that you can just click and see it straight"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1352.16,
      "end": 1357.1200000000001,
      "text": " away without having to clone the code and run some kind of script in your own machine to actually see"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1357.1200000000001,
      "end": 1364.0800000000002,
      "text": " the effect of that particular code-generated diagram. And for that, I really like the tool"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1364.08,
      "end": 1368.8,
      "text": " that we mentioned before, croki.io, because you don't necessarily even have to create a pipeline,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1368.8,
      "end": 1374.8,
      "text": " it's just literally the URL itself will become the picture that you can easily embed in your markdown."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1376,
      "end": 1383.04,
      "text": " So I think this is all we have for today. I hope that you found some useful information in this"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1383.04,
      "end": 1388.08,
      "text": " chat, but also I'm really curious to hear if we did miss anything. If you have other tools that"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1388.08,
      "end": 1393.36,
      "text": " we were not aware about, we'd love to learn from you, we'd love to know if you have any"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1393.36,
      "end": 1397.28,
      "text": " best practice that you would recommend, so definitely reach out to us on Twitter or leave"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1397.28,
      "end": 1402.7199999999998,
      "text": " us a comment and we'll make sure to get back to you. So thank you very much and we'll see you in"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1402.72,
      "end": 1424.4,
      "text": " the next episode."
    }
  ]
}