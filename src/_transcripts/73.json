{
  "speakers": {
    "spk_0": "spk_0",
    "spk_1": "spk_1"
  },
  "segments": [
    {
      "speakerLabel": "spk_0",
      "start": 0,
      "end": 5,
      "text": " AWS Application Composer is a free service that helps you architect and build serverless applications."
    },
    {
      "speakerLabel": "spk_0",
      "start": 5,
      "end": 9.6,
      "text": " With a simple drag and drop interface, it promises to lower the barrier to entry"
    },
    {
      "speakerLabel": "spk_0",
      "start": 9.6,
      "end": 12.84,
      "text": " in building applications using infrastructure as code."
    },
    {
      "speakerLabel": "spk_0",
      "start": 12.84,
      "end": 14.72,
      "text": " But does it live up to that promise?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 14.72,
      "end": 18.28,
      "text": " In this episode, we're going to unbox AWS Application Composer,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 18.28,
      "end": 19.92,
      "text": " tell you what it's like to use,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 19.92,
      "end": 23.2,
      "text": " and let you know whether you should add it to your toolkit or give it a hard pass."
    },
    {
      "speakerLabel": "spk_0",
      "start": 23.2,
      "end": 34.8,
      "text": " I'm Eoin, I'm here with Luciano and this is the AWS Bites podcast."
    },
    {
      "speakerLabel": "spk_0",
      "start": 34.8,
      "end": 36.76,
      "text": " AWS Bites is sponsored by Forthereum,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 36.76,
      "end": 40.44,
      "text": " and Forthereum is an AWS partner for migration, architecture and training."
    },
    {
      "speakerLabel": "spk_0",
      "start": 40.44,
      "end": 44.68,
      "text": " Find out more at fourtheorem.com and you can find the link in the show notes."
    },
    {
      "speakerLabel": "spk_0",
      "start": 44.68,
      "end": 46.32,
      "text": " Right, let's get down to it, Luciano."
    },
    {
      "speakerLabel": "spk_0",
      "start": 46.32,
      "end": 51.2,
      "text": " We covered Application Composer briefly when it was announced at reInvent late last year."
    },
    {
      "speakerLabel": "spk_0",
      "start": 51.2,
      "end": 53.64,
      "text": " Since then, you've taken it for a proper test drive"
    },
    {
      "speakerLabel": "spk_0",
      "start": 53.64,
      "end": 56.92,
      "text": " and really tried to see where it works and where it doesn't work."
    },
    {
      "speakerLabel": "spk_0",
      "start": 56.92,
      "end": 60.28,
      "text": " So maybe we can just start by telling everybody who doesn't know"
    },
    {
      "speakerLabel": "spk_0",
      "start": 60.28,
      "end": 65.60000000000001,
      "text": " what is Application Composer and what kind of problem is it actually designed to solve in the first place?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 65.60000000000001,
      "end": 68.48,
      "text": " Of course, yeah. So let's get started."
    },
    {
      "speakerLabel": "spk_1",
      "start": 68.48,
      "end": 72.72,
      "text": " And as you said in the introduction, Application Composer is a free service."
    },
    {
      "speakerLabel": "spk_1",
      "start": 72.72,
      "end": 75.96000000000001,
      "text": " Let's put a little bit of an effort there in that free keyword,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 75.96000000000001,
      "end": 80.92,
      "text": " because I think it's going to be very important towards the end when we try to draw our conclusions."
    },
    {
      "speakerLabel": "spk_1",
      "start": 80.92,
      "end": 85.6,
      "text": " And the idea is that this service is going to help developers, cloud architects,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 85.6,
      "end": 90.92,
      "text": " to streamline and accelerate the architecture configuration of serverless applications."
    },
    {
      "speakerLabel": "spk_1",
      "start": 90.92,
      "end": 95.48,
      "text": " So the idea is that it's built on top of infrastructure as code."
    },
    {
      "speakerLabel": "spk_1",
      "start": 95.48,
      "end": 99.64,
      "text": " So it uses some of cloud formation syntax in a more general sense."
    },
    {
      "speakerLabel": "spk_1",
      "start": 99.64,
      "end": 103.32000000000001,
      "text": " So it kind of helps you out if you are not familiar with that syntax,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 103.32000000000001,
      "end": 108.8,
      "text": " gives you a very visual drag and drop interface where you can drag different resources,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 108.8,
      "end": 112.92,
      "text": " connect them and behind the scenes, it keeps that infrastructure as code representation"
    },
    {
      "speakerLabel": "spk_1",
      "start": 112.92,
      "end": 117.6,
      "text": " of everything that you are drawing up to date with the latest changes."
    },
    {
      "speakerLabel": "spk_1",
      "start": 117.6,
      "end": 122.12,
      "text": " So the idea is that if you don't know infrastructure as code,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 122.12,
      "end": 125.03999999999999,
      "text": " cloud formation specifically, or maybe you know a little bit of it,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 125.03999999999999,
      "end": 130.44,
      "text": " maybe you don't know specific resources, again, it's that idea that it tries to lower down the barrier to end"
    },
    {
      "speakerLabel": "spk_1",
      "start": 130.44,
      "end": 135.76,
      "text": " and trying to speed up achieving something mostly in the serverless space as of today,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 135.76,
      "end": 140.88,
      "text": " that you can quickly build and use it and put it in your own AWS account."
    },
    {
      "speakerLabel": "spk_1",
      "start": 140.88,
      "end": 144.72,
      "text": " The way it works is that it is an application that is running on your browser,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 144.72,
      "end": 146.95999999999998,
      "text": " specifically, you just log in in the AWS console,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 146.95999999999998,
      "end": 151.28,
      "text": " and it's going to be one of the many services that are available through the AWS console."
    },
    {
      "speakerLabel": "spk_1",
      "start": 151.28,
      "end": 154.79999999999998,
      "text": " And when you start that particular service on the AWS console,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 154.79999999999998,
      "end": 157.51999999999998,
      "text": " you immediately see that there is this concept of a canvas,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 157.51999999999998,
      "end": 161.16,
      "text": " which looks like one of the resources that you can manage with this service."
    },
    {
      "speakerLabel": "spk_1",
      "start": 161.16,
      "end": 165.35999999999999,
      "text": " But it's important to mention that it's not really an actual resource in the classic sense,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 165.36,
      "end": 169.44000000000003,
      "text": " because it's not something that is persisted long term in your AWS account."
    },
    {
      "speakerLabel": "spk_1",
      "start": 169.44000000000003,
      "end": 172.8,
      "text": " It's just the idea that you can start a new session in the browser,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 172.8,
      "end": 176.8,
      "text": " but that session is totally lost when you leave that browser window."
    },
    {
      "speakerLabel": "spk_1",
      "start": 176.8,
      "end": 182.4,
      "text": " And this is an important detail that we will cover a little bit more in the rest of this episode."
    },
    {
      "speakerLabel": "spk_1",
      "start": 182.4,
      "end": 185.92000000000002,
      "text": " So the idea is that you have to persist files somewhere"
    },
    {
      "speakerLabel": "spk_1",
      "start": 185.92000000000002,
      "end": 190.96,
      "text": " because you are creating templates in YAML for your infrastructure as code through this experience,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 190.96,
      "end": 192.24,
      "text": " visual experience."
    },
    {
      "speakerLabel": "spk_1",
      "start": 192.24,
      "end": 196.96,
      "text": " So what the application composer gives you is the opportunity to synchronize"
    },
    {
      "speakerLabel": "spk_1",
      "start": 196.96,
      "end": 201.28,
      "text": " a local folder in your file system with everything that you are doing in the browser."
    },
    {
      "speakerLabel": "spk_1",
      "start": 201.28,
      "end": 203.76000000000002,
      "text": " And this is what they call connected mode."
    },
    {
      "speakerLabel": "spk_1",
      "start": 203.76000000000002,
      "end": 205.52,
      "text": " So when you start a new canvas,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 205.52,
      "end": 208.24,
      "text": " the first thing that you see is literally a screen that tells you,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 208.24,
      "end": 210.08,
      "text": " do you want to work in connected mode?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 210.08,
      "end": 212.4,
      "text": " If you want to do that, you need to give me permission."
    },
    {
      "speakerLabel": "spk_1",
      "start": 212.4,
      "end": 216.48000000000002,
      "text": " You need to give the browser permission to read a specific folder in a file system."
    },
    {
      "speakerLabel": "spk_1",
      "start": 216.48,
      "end": 223.35999999999999,
      "text": " Now, this is another important detail because being able to give a browser file system permission"
    },
    {
      "speakerLabel": "spk_1",
      "start": 223.35999999999999,
      "end": 225.83999999999997,
      "text": " is something relatively new in the web platform."
    },
    {
      "speakerLabel": "spk_1",
      "start": 225.83999999999997,
      "end": 230.56,
      "text": " And at this time, only Chrome and Edge, I believe, implemented that."
    },
    {
      "speakerLabel": "spk_1",
      "start": 230.56,
      "end": 232.64,
      "text": " Definitely doesn't work for Firefox,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 232.64,
      "end": 237.35999999999999,
      "text": " even though if I was researching a little bit this API called File System Access API,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 237.35999999999999,
      "end": 241.2,
      "text": " and it seems that Firefox now has an experimental support for that."
    },
    {
      "speakerLabel": "spk_1",
      "start": 241.2,
      "end": 245.2,
      "text": " So maybe eventually this is something that also Firefox will be able to support."
    },
    {
      "speakerLabel": "spk_1",
      "start": 245.2,
      "end": 251.67999999999998,
      "text": " So again, at this point, what you can do is start the browser, start the application composer,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 251.67999999999998,
      "end": 256.15999999999997,
      "text": " connect your local folder, give permission, and at that point, you can work on this canvas."
    },
    {
      "speakerLabel": "spk_0",
      "start": 256.71999999999997,
      "end": 262.32,
      "text": " OK, so from what I understand, then it's something that you get through the AWS console."
    },
    {
      "speakerLabel": "spk_0",
      "start": 262.32,
      "end": 266.56,
      "text": " It gives you a nice looking UI for building applications, and it works in both directions."
    },
    {
      "speakerLabel": "spk_0",
      "start": 266.56,
      "end": 269.28,
      "text": " So you can generate a visual representation from code,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 269.28,
      "end": 273.59999999999997,
      "text": " but you can also generate code by dragging and dropping in this application."
    },
    {
      "speakerLabel": "spk_0",
      "start": 273.6,
      "end": 278.72,
      "text": " I know that like many other people, it took me a while to get to grips with CloudFormation"
    },
    {
      "speakerLabel": "spk_0",
      "start": 278.72,
      "end": 283.84000000000003,
      "text": " when I started many years ago and figuring out how to define components and connect them together."
    },
    {
      "speakerLabel": "spk_0",
      "start": 283.84000000000003,
      "end": 285.92,
      "text": " So it's not something you can pick up that quickly."
    },
    {
      "speakerLabel": "spk_0",
      "start": 285.92,
      "end": 289.6,
      "text": " And for that reason, I think the idea of application composer makes sense."
    },
    {
      "speakerLabel": "spk_0",
      "start": 289.6,
      "end": 292.96000000000004,
      "text": " And you've mentioned that phrase, lowering the barrier to entry a few times."
    },
    {
      "speakerLabel": "spk_0",
      "start": 292.96000000000004,
      "end": 296,
      "text": " So it seems like, in theory, at least a good fit."
    },
    {
      "speakerLabel": "spk_0",
      "start": 296.88,
      "end": 298.32000000000005,
      "text": " In practice, what is it like?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 298.32000000000005,
      "end": 300.16,
      "text": " So you've built some applications with it."
    },
    {
      "speakerLabel": "spk_0",
      "start": 300.16,
      "end": 301.84000000000003,
      "text": " What are your first impressions?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 301.84,
      "end": 303.91999999999996,
      "text": " Did you encounter any major roadblocks?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 307.52,
      "end": 309.44,
      "text": " Yeah, I think it would be beneficial to try to describe what I try to build, because it's a relatively simple project."
    },
    {
      "speakerLabel": "spk_1",
      "start": 309.44,
      "end": 312,
      "text": " But I think there is also enough complexity there,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 312,
      "end": 315.28,
      "text": " if you were going to do all of that infrastructure as code manually,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 315.28,
      "end": 320.79999999999995,
      "text": " to have a good feeling for whether this kind of tool can really help us for more realistic projects."
    },
    {
      "speakerLabel": "spk_1",
      "start": 321.35999999999996,
      "end": 325.76,
      "text": " So everything that I'm about to say, by the way, is available in our repository."
    },
    {
      "speakerLabel": "spk_1",
      "start": 325.76,
      "end": 327.59999999999997,
      "text": " We will have the link in the show notes."
    },
    {
      "speakerLabel": "spk_1",
      "start": 327.6,
      "end": 332.32000000000005,
      "text": " And also the repository details how to basically clone that solution and deploy it,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 332.32000000000005,
      "end": 335.36,
      "text": " if you want to see it running yourself, and all the steps that you can follow,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 335.36,
      "end": 340.16,
      "text": " if you want to replicate everything that I am about to describe yourself."
    },
    {
      "speakerLabel": "spk_1",
      "start": 340.16,
      "end": 342.64000000000004,
      "text": " So the idea is that it's a very simple application,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 342.64000000000004,
      "end": 344.96000000000004,
      "text": " where there is an API gateway with just one endpoint."
    },
    {
      "speakerLabel": "spk_1",
      "start": 345.52000000000004,
      "end": 349.6,
      "text": " This endpoint will trigger a Lambda, which is responsible for basically doing"
    },
    {
      "speakerLabel": "spk_1",
      "start": 349.6,
      "end": 353.04,
      "text": " that Lambda proxy integration and generating an HTTP response."
    },
    {
      "speakerLabel": "spk_1",
      "start": 353.04,
      "end": 356.40000000000003,
      "text": " And before doing that, it's going to go into an S3 bucket"
    },
    {
      "speakerLabel": "spk_1",
      "start": 356.4,
      "end": 359.12,
      "text": " and create a new file. So basically for every request,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 359.12,
      "end": 361.52,
      "text": " it's going to create a new file with a timestamp,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 361.52,
      "end": 365.91999999999996,
      "text": " just to simulate some interaction between the Lambda and another service like S3,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 365.91999999999996,
      "end": 368.56,
      "text": " to answer that particular HTTP request."
    },
    {
      "speakerLabel": "spk_1",
      "start": 368.56,
      "end": 373.67999999999995,
      "text": " So effectively, we have three different services, API gateway, Lambda and S3."
    },
    {
      "speakerLabel": "spk_1",
      "start": 373.67999999999995,
      "end": 376.79999999999995,
      "text": " They are connected together and there is a very specific workflow"
    },
    {
      "speakerLabel": "spk_1",
      "start": 376.79999999999995,
      "end": 380.88,
      "text": " triggered by an HTTP request, starts the Lambda, the Lambda writes to S3,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 380.88,
      "end": 383.44,
      "text": " and then the Lambda responds back to API gateway."
    },
    {
      "speakerLabel": "spk_1",
      "start": 383.44,
      "end": 387.52,
      "text": " So these are the steps that I follow to try to implement all of this."
    },
    {
      "speakerLabel": "spk_1",
      "start": 387.52,
      "end": 391.04,
      "text": " I started a new project in Application Composer, started in synced mode."
    },
    {
      "speakerLabel": "spk_1",
      "start": 391.04,
      "end": 394,
      "text": " So I had to select a folder in my file system."
    },
    {
      "speakerLabel": "spk_1",
      "start": 394,
      "end": 396.64,
      "text": " And as soon as I said, okay, keep going,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 397.2,
      "end": 400.8,
      "text": " the first thing that I noticed is that I didn't have anything in that folder,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 400.8,
      "end": 403.28,
      "text": " but as soon as I clicked okay in Application Composer,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 403.28,
      "end": 406.24,
      "text": " a new template.yaml appeared in that folder."
    },
    {
      "speakerLabel": "spk_1",
      "start": 406.24,
      "end": 407.84,
      "text": " And initially, it's totally emptied."
    },
    {
      "speakerLabel": "spk_1",
      "start": 407.84,
      "end": 411.6,
      "text": " Actually, there is literally like an empty object in the YAML syntax."
    },
    {
      "speakerLabel": "spk_1",
      "start": 411.6,
      "end": 418.24,
      "text": " So that kind of tells you that an empty canvas is equivalent to an empty object in YAML"
    },
    {
      "speakerLabel": "spk_1",
      "start": 418.24,
      "end": 419.76000000000005,
      "text": " for Application Composer."
    },
    {
      "speakerLabel": "spk_1",
      "start": 420.8,
      "end": 423.92,
      "text": " At this point, you have an Application Composer on the left side,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 423.92,
      "end": 426.32000000000005,
      "text": " a list of all the resources that are supported."
    },
    {
      "speakerLabel": "spk_1",
      "start": 426.32000000000005,
      "end": 428.24,
      "text": " And one of these is API gateway."
    },
    {
      "speakerLabel": "spk_1",
      "start": 428.24,
      "end": 431.68,
      "text": " So I just drag and dropped that resource into the canvas."
    },
    {
      "speakerLabel": "spk_1",
      "start": 431.68,
      "end": 437.04,
      "text": " And immediately what you could see is that it starts with one endpoint."
    },
    {
      "speakerLabel": "spk_1",
      "start": 437.04,
      "end": 442.48,
      "text": " This is already preconfigured for you, which is a GET endpoint to the slash path, so the root path."
    },
    {
      "speakerLabel": "spk_1",
      "start": 443.12,
      "end": 444.48,
      "text": " Of course, it's something that you can change."
    },
    {
      "speakerLabel": "spk_1",
      "start": 444.48,
      "end": 449.44,
      "text": " You can double click in the canvas object that you just dropped there,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 449.44,
      "end": 452,
      "text": " and you will see a panel with a bunch of configuration options."
    },
    {
      "speakerLabel": "spk_1",
      "start": 452,
      "end": 454.40000000000003,
      "text": " So you can add more endpoints if you want to."
    },
    {
      "speakerLabel": "spk_1",
      "start": 454.40000000000003,
      "end": 457.92,
      "text": " But for the sake of this project, I was happy with that default endpoint."
    },
    {
      "speakerLabel": "spk_1",
      "start": 458.48,
      "end": 462.24,
      "text": " And then I started to look at the template and I realized that all of that stuff,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 462.24,
      "end": 466.8,
      "text": " so that this new API gateway resource was already codified in Infrastructure as Code."
    },
    {
      "speakerLabel": "spk_1",
      "start": 466.8,
      "end": 471.44,
      "text": " And that was actually something already interesting because that is, I don't know,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 471.44,
      "end": 473.44,
      "text": " probably around 15, 20 lines of code."
    },
    {
      "speakerLabel": "spk_1",
      "start": 473.44,
      "end": 476.8,
      "text": " So it's definitely not necessarily simple if you want to write it yourself."
    },
    {
      "speakerLabel": "spk_1",
      "start": 476.8,
      "end": 481.76,
      "text": " And I was able to get all of that in just a few seconds by drag and dropping something in the browser."
    },
    {
      "speakerLabel": "spk_1",
      "start": 482.64,
      "end": 486.24,
      "text": " So the next step was to start to provision, well,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 486.24,
      "end": 488.96000000000004,
      "text": " start to create the code related to the Lambda function."
    },
    {
      "speakerLabel": "spk_1",
      "start": 488.96000000000004,
      "end": 493.6,
      "text": " So same idea, go to the bar with all the resources supported,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 493.6,
      "end": 498.24,
      "text": " drag the Lambda icon into the canvas and immediately you have the definition of a Lambda,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 498.8,
      "end": 502,
      "text": " both in the canvas visible, but also in your template YAML."
    },
    {
      "speakerLabel": "spk_1",
      "start": 503.20000000000005,
      "end": 506.08000000000004,
      "text": " And with Lambda is actually very interesting."
    },
    {
      "speakerLabel": "spk_1",
      "start": 506.08000000000004,
      "end": 510.56,
      "text": " I feel like it's one of the resources where they spend the most time trying to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 511.12,
      "end": 513.52,
      "text": " give you ways to configure it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 513.52,
      "end": 516.5600000000001,
      "text": " In fact, you can double click that Lambda object in the canvas"
    },
    {
      "speakerLabel": "spk_1",
      "start": 516.5600000000001,
      "end": 520.88,
      "text": " and you will have such a big panel with like many configurations options."
    },
    {
      "speakerLabel": "spk_1",
      "start": 520.88,
      "end": 525.68,
      "text": " And one of these options, the first one that kind of captured my attention was the runtime option."
    },
    {
      "speakerLabel": "spk_1",
      "start": 525.68,
      "end": 529.68,
      "text": " So you can click there and you have a long list of all the possible runtimes that you can use."
    },
    {
      "speakerLabel": "spk_1",
      "start": 530.24,
      "end": 534.08,
      "text": " And actually even more interesting, if you're interested in Node.js,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 534.08,
      "end": 536.32,
      "text": " you have runtimes that are not just Node.js,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 536.32,
      "end": 540.64,
      "text": " but you can have the same runtime for instance Node.js 18 plus TypeScript."
    },
    {
      "speakerLabel": "spk_1",
      "start": 540.64,
      "end": 545.04,
      "text": " So I was really curious to try that and I picked up Node.js 18 with TypeScript."
    },
    {
      "speakerLabel": "spk_1",
      "start": 545.04,
      "end": 552.16,
      "text": " And I immediately realized that I didn't just get all the YAML related to that Lambda"
    },
    {
      "speakerLabel": "spk_1",
      "start": 552.16,
      "end": 556.0799999999999,
      "text": " with that particular runtime, with the metadata that SAMS understands to be able to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 556.64,
      "end": 559.52,
      "text": " build TypeScript for you using ES build."
    },
    {
      "speakerLabel": "spk_1",
      "start": 559.52,
      "end": 565.28,
      "text": " But also there was a skeleton folder that was created for me called source slash function,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 565.28,
      "end": 569.76,
      "text": " where inside of it I already had an handler in TypeScript and a package JSON."
    },
    {
      "speakerLabel": "spk_1",
      "start": 569.76,
      "end": 572.4,
      "text": " So all of that stuff was very convenient."
    },
    {
      "speakerLabel": "spk_1",
      "start": 572.4,
      "end": 575.52,
      "text": " And again, something else that lowers the barrier to end to even understand"
    },
    {
      "speakerLabel": "spk_1",
      "start": 575.52,
      "end": 580.8,
      "text": " how do you organize files with your source code when you're using a template with SAM."
    },
    {
      "speakerLabel": "spk_1",
      "start": 580.8,
      "end": 583.12,
      "text": " All of this stuff was nicely connected together."
    },
    {
      "speakerLabel": "spk_1",
      "start": 584.4,
      "end": 587.04,
      "text": " Then at this point, the next step was S3."
    },
    {
      "speakerLabel": "spk_1",
      "start": 587.04,
      "end": 593.12,
      "text": " So again, drag the S3 icon into the canvas and you get a YAML with the definition of a bucket."
    },
    {
      "speakerLabel": "spk_1",
      "start": 593.12,
      "end": 597.6,
      "text": " And this was also very interesting because this is something if you want to do it yourself,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 597.6,
      "end": 600.24,
      "text": " it's actually the simplest of the three resources."
    },
    {
      "speakerLabel": "spk_1",
      "start": 600.24,
      "end": 604,
      "text": " But then you never remember that there are a bunch of configuration best practices"
    },
    {
      "speakerLabel": "spk_1",
      "start": 604,
      "end": 606.08,
      "text": " that you can do when it comes to S3 buckets."
    },
    {
      "speakerLabel": "spk_1",
      "start": 606.08,
      "end": 610,
      "text": " For instance, encryption, for instance, making sure that you don't have communication"
    },
    {
      "speakerLabel": "spk_1",
      "start": 610,
      "end": 615.2,
      "text": " without encryption when you use the APIs to connect to S3."
    },
    {
      "speakerLabel": "spk_1",
      "start": 615.2,
      "end": 619.12,
      "text": " And all that stuff, all these best practices were already provided"
    },
    {
      "speakerLabel": "spk_1",
      "start": 619.12,
      "end": 621.92,
      "text": " by the YAML auto-generated by Application Composer."
    },
    {
      "speakerLabel": "spk_1",
      "start": 621.92,
      "end": 627.12,
      "text": " So it wasn't just the S3 bucket on its own, but there was also all the configuration for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 627.12,
      "end": 632.5600000000001,
      "text": " encrypting at rest and encrypting in transit, which is, I think, a really good best practice"
    },
    {
      "speakerLabel": "spk_1",
      "start": 632.5600000000001,
      "end": 634.88,
      "text": " and something that you would easily forget to do it yourself,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 634.88,
      "end": 637.92,
      "text": " especially if you are learning cloud formation for the first time."
    },
    {
      "speakerLabel": "spk_1",
      "start": 639.36,
      "end": 644.32,
      "text": " So the next step is to connect things together because right now we only have an API gateway."
    },
    {
      "speakerLabel": "spk_1",
      "start": 644.32,
      "end": 647.68,
      "text": " We have a Lambda and we have an S3 bucket."
    },
    {
      "speakerLabel": "spk_1",
      "start": 647.68,
      "end": 652.08,
      "text": " They are not connected with each other and we can easily connect them by dragging."
    },
    {
      "speakerLabel": "spk_1",
      "start": 652.08,
      "end": 656.4,
      "text": " There are like some dots that you can drag on every source to connect with the other one."
    },
    {
      "speakerLabel": "spk_1",
      "start": 656.4,
      "end": 658.16,
      "text": " So basically you create a line between them."
    },
    {
      "speakerLabel": "spk_1",
      "start": 659.1999999999999,
      "end": 663.6,
      "text": " And the first line that I created was from API gateway to the Lambda."
    },
    {
      "speakerLabel": "spk_1",
      "start": 663.6,
      "end": 668.64,
      "text": " And what that did was basically understand, OK, you want to trigger this Lambda from API gateway."
    },
    {
      "speakerLabel": "spk_1",
      "start": 668.64,
      "end": 674.16,
      "text": " So basically the YAML was updated, creating an event description in the specific Lambda"
    },
    {
      "speakerLabel": "spk_1",
      "start": 674.16,
      "end": 677.4399999999999,
      "text": " saying this Lambda can be triggered by an HTTP event."
    },
    {
      "speakerLabel": "spk_1",
      "start": 678.48,
      "end": 683.6,
      "text": " So that was really convenient as well, especially if you don't really know what's the right syntax."
    },
    {
      "speakerLabel": "spk_1",
      "start": 683.6,
      "end": 685.76,
      "text": " Should they put something on the API gateway side?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 685.76,
      "end": 687.92,
      "text": " Should I put something on the Lambda side?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 687.92,
      "end": 691.6,
      "text": " That kind of helps you out to really figure out how to describe that integration"
    },
    {
      "speakerLabel": "spk_1",
      "start": 691.6,
      "end": 693.76,
      "text": " in cloud formation and some."
    },
    {
      "speakerLabel": "spk_1",
      "start": 694.56,
      "end": 696.96,
      "text": " And finally, I did something similar for the bucket."
    },
    {
      "speakerLabel": "spk_1",
      "start": 696.96,
      "end": 702.88,
      "text": " So basically I connected the bucket to the Lambda and that understood that I wanted to use"
    },
    {
      "speakerLabel": "spk_1",
      "start": 703.4399999999999,
      "end": 706.56,
      "text": " that particular bucket in the context of my Lambda code."
    },
    {
      "speakerLabel": "spk_1",
      "start": 706.56,
      "end": 709.36,
      "text": " So what happened is that it was created a policy for me."
    },
    {
      "speakerLabel": "spk_1",
      "start": 709.36,
      "end": 713.92,
      "text": " So for the Lambda to actually access the S3 bucket, but also this was really cool."
    },
    {
      "speakerLabel": "spk_1",
      "start": 713.92,
      "end": 718.56,
      "text": " It created two environment variables in the Lambda, referencing the name of the bucket"
    },
    {
      "speakerLabel": "spk_1",
      "start": 718.56,
      "end": 722.8,
      "text": " and the ARN of the bucket, which is something very convenient when you need to start to add your code."
    },
    {
      "speakerLabel": "spk_1",
      "start": 722.8,
      "end": 725.8399999999999,
      "text": " You don't necessarily know what's going to be the name of the bucket."
    },
    {
      "speakerLabel": "spk_1",
      "start": 725.8399999999999,
      "end": 729.28,
      "text": " So generally you would use an environment variable to create a reference,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 729.28,
      "end": 734.0799999999999,
      "text": " and then you have an abstract way to connect to a specific bucket in your Lambda code."
    },
    {
      "speakerLabel": "spk_1",
      "start": 735.36,
      "end": 737.5999999999999,
      "text": " Now, the last step was to try to deploy all of this."
    },
    {
      "speakerLabel": "spk_1",
      "start": 737.5999999999999,
      "end": 742.24,
      "text": " I thought at that point I had, of course, I had to write a little bit more code in my own Lambda"
    },
    {
      "speakerLabel": "spk_1",
      "start": 742.24,
      "end": 745.44,
      "text": " because the handler that was generated was just an Hello World."
    },
    {
      "speakerLabel": "spk_1",
      "start": 745.44,
      "end": 749.76,
      "text": " I actually wanted to write code to use the SDK,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 749.76,
      "end": 754.64,
      "text": " connect to S3 and create that file and then respond back to the API Gateway request."
    },
    {
      "speakerLabel": "spk_1",
      "start": 755.36,
      "end": 762.32,
      "text": " So for all of that, I needed to install a few extra dependencies because the SDK was not included."
    },
    {
      "speakerLabel": "spk_1",
      "start": 762.32,
      "end": 766.32,
      "text": " And also there is a dev dependency that you can use to get"
    },
    {
      "speakerLabel": "spk_1",
      "start": 766.32,
      "end": 773.2,
      "text": " types for the different events and responses that you can use with the API integration."
    },
    {
      "speakerLabel": "spk_1",
      "start": 773.2,
      "end": 775.7600000000001,
      "text": " There was some code there, but the dependencies were not installed."
    },
    {
      "speakerLabel": "spk_1",
      "start": 775.7600000000001,
      "end": 779.6800000000001,
      "text": " So I needed to install those myself, but eventually I had all the code ready."
    },
    {
      "speakerLabel": "spk_1",
      "start": 779.6800000000001,
      "end": 783.36,
      "text": " It's probably like 12 lines of code. You can check that in the repository."
    },
    {
      "speakerLabel": "spk_1",
      "start": 783.36,
      "end": 784.48,
      "text": " And I was able to deploy."
    },
    {
      "speakerLabel": "spk_1",
      "start": 785.0400000000001,
      "end": 790.96,
      "text": " I wasn't able to deploy directly from Application Composer itself,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 790.96,
      "end": 792.72,
      "text": " but I had all the files locally."
    },
    {
      "speakerLabel": "spk_1",
      "start": 792.72,
      "end": 797.2,
      "text": " So basically locally you can just run SAM, you can do SAM build to build all the TypeScript"
    },
    {
      "speakerLabel": "spk_1",
      "start": 797.2,
      "end": 801.2,
      "text": " and convert it into proper JavaScript. And then you can do SAM deploy to initialize"
    },
    {
      "speakerLabel": "spk_1",
      "start": 801.2,
      "end": 806.08,
      "text": " a deploy. And after a few minutes, you should have everything running in your AWS account."
    },
    {
      "speakerLabel": "spk_0",
      "start": 806.08,
      "end": 810,
      "text": " It's pretty nice the way you can also then use SAM Accelerator."
    },
    {
      "speakerLabel": "spk_0",
      "start": 810,
      "end": 814.32,
      "text": " So you could run SAM sync, dash dash watch and have it just live update."
    },
    {
      "speakerLabel": "spk_0",
      "start": 814.32,
      "end": 816.88,
      "text": " So when you drag and drop components in your architecture,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 817.6800000000001,
      "end": 821.2,
      "text": " it's actually deploying that infrastructure under the hood and updating the function"
    },
    {
      "speakerLabel": "spk_0",
      "start": 821.2,
      "end": 825.84,
      "text": " configuration under the hood. And it could be a fairly productive workflow"
    },
    {
      "speakerLabel": "spk_0",
      "start": 825.84,
      "end": 829.76,
      "text": " for the kind of applications that Application Composer supports right now."
    },
    {
      "speakerLabel": "spk_0",
      "start": 830.4000000000001,
      "end": 833.2,
      "text": " So you've kind of explained how you start with the visual version,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 833.2,
      "end": 835.2,
      "text": " but we talked about this being bi-directional."
    },
    {
      "speakerLabel": "spk_0",
      "start": 835.2,
      "end": 837.2800000000001,
      "text": " So what happens if you've got an existing application?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 837.84,
      "end": 841.84,
      "text": " Can you import any application you've got that supports CloudFormation or SAM?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 841.84,
      "end": 843.9200000000001,
      "text": " Does it work flawlessly? Are there any limitations?"
    },
    {
      "speakerLabel": "spk_0",
      "start": 845.12,
      "end": 848.08,
      "text": " Yeah, by the way, I didn't try to do that sync idea."
    },
    {
      "speakerLabel": "spk_1",
      "start": 848.08,
      "end": 851.6800000000001,
      "text": " I think it's a pretty cool idea. We should try it at some point."
    },
    {
      "speakerLabel": "spk_1",
      "start": 851.6800000000001,
      "end": 855.6,
      "text": " And I'd be curious to see what happens if you like break the YAML at some point,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 856.1600000000001,
      "end": 859.84,
      "text": " because another note that I have is that it's very easy to break the YAML if you create new"
    },
    {
      "speakerLabel": "spk_1",
      "start": 859.84,
      "end": 862.88,
      "text": " resources, remove them, disconnect them, reconnect them."
    },
    {
      "speakerLabel": "spk_1",
      "start": 862.88,
      "end": 866.8000000000001,
      "text": " You might end up in a state where the YAML is not necessarily 100% correct"
    },
    {
      "speakerLabel": "spk_1",
      "start": 866.8000000000001,
      "end": 871.12,
      "text": " until you fix the issues. So it would be interesting to try exactly what happens"
    },
    {
      "speakerLabel": "spk_1",
      "start": 871.12,
      "end": 876.5600000000001,
      "text": " when you use the sync mode and then it tries to deploy continuously at every change."
    },
    {
      "speakerLabel": "spk_1",
      "start": 876.56,
      "end": 883.52,
      "text": " Anyway, with that aside, I did try to import an existing project that I worked on"
    },
    {
      "speakerLabel": "spk_1",
      "start": 883.52,
      "end": 888.0799999999999,
      "text": " that is a little bit more... It's not too complicated, but there is a little bit more to it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 888.64,
      "end": 892.8,
      "text": " And this is a project we will also have the repository link in the show notes."
    },
    {
      "speakerLabel": "spk_1",
      "start": 892.8,
      "end": 897.5999999999999,
      "text": " It's something that I call earthquake notifier, because it's a small personal project that I built"
    },
    {
      "speakerLabel": "spk_1",
      "start": 897.5999999999999,
      "end": 902.8,
      "text": " just to be notified when a significantly interesting earthquake is happening close"
    },
    {
      "speakerLabel": "spk_1",
      "start": 902.8,
      "end": 907.28,
      "text": " to my family in Sicily. So I can immediately know that that's happening and I can reach out to them"
    },
    {
      "speakerLabel": "spk_1",
      "start": 907.28,
      "end": 913.04,
      "text": " to see if everything is fine. And it's a serverless project. Basically, it's built using a lambda that"
    },
    {
      "speakerLabel": "spk_1",
      "start": 913.04,
      "end": 918.16,
      "text": " runs on a schedule. This lambda will call a specific API every hour that this API has a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 918.16,
      "end": 923.8399999999999,
      "text": " list of recent earthquakes in Italy and it will check if there is a set of conditions that will"
    },
    {
      "speakerLabel": "spk_1",
      "start": 923.8399999999999,
      "end": 929.28,
      "text": " match mostly based on position and magnitude of the latest earthquakes. And if there is an"
    },
    {
      "speakerLabel": "spk_1",
      "start": 929.28,
      "end": 933.8399999999999,
      "text": " earthquake that matches what it does, it creates an event bridge event. Then there is an event bridge"
    },
    {
      "speakerLabel": "spk_1",
      "start": 933.8399999999999,
      "end": 939.6,
      "text": " rule that captures this kind of events and will deliver them to a CloudWatch log stream,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 939.6,
      "end": 944.0799999999999,
      "text": " just for me to see all of them historically. And also to an SNS topic where I can easily"
    },
    {
      "speakerLabel": "spk_1",
      "start": 944.0799999999999,
      "end": 949.92,
      "text": " trigger notifications, for instance, to my email using an email subscription to that SNS topic."
    },
    {
      "speakerLabel": "spk_1",
      "start": 949.92,
      "end": 953.92,
      "text": " So again, it's not an extremely complicated project. It's actually a very simple one,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 953.92,
      "end": 958.9599999999999,
      "text": " but there are enough resources there to try to put application composers to test."
    },
    {
      "speakerLabel": "spk_1",
      "start": 958.96,
      "end": 963.76,
      "text": " And I did all of that using some pretty much manually. So it was also a good use case,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 963.76,
      "end": 967.6800000000001,
      "text": " I think, to try to see that reverse approach when you have something already created manually,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 967.6800000000001,
      "end": 970.96,
      "text": " what happens when you import it in Application Composer."
    },
    {
      "speakerLabel": "spk_1",
      "start": 972.32,
      "end": 977.76,
      "text": " So the result was actually a little bit disappointing because when I imported,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 977.76,
      "end": 982.08,
      "text": " well, basically I created a new canvas and I connected it to my local folder. But this time"
    },
    {
      "speakerLabel": "spk_1",
      "start": 982.08,
      "end": 987.2800000000001,
      "text": " the local folder had all the files for this project, including the template.yaml. And what"
    },
    {
      "speakerLabel": "spk_1",
      "start": 987.28,
      "end": 993.36,
      "text": " appeared in the canvas was some of the resources, not all of them, and they were not all connected"
    },
    {
      "speakerLabel": "spk_1",
      "start": 993.36,
      "end": 998.16,
      "text": " correctly. I had my own architecture diagram and I was expecting to see something very close to it."
    },
    {
      "speakerLabel": "spk_1",
      "start": 998.16,
      "end": 1003.1999999999999,
      "text": " Instead, it was very different. There were only a few resources that were connected together,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1003.1999999999999,
      "end": 1009.36,
      "text": " and most of the connections were missing. And so that was a little bit disappointing."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1009.36,
      "end": 1015.92,
      "text": " And I started to try to fill the gaps myself. For instance, I was trying to connect an event"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1015.92,
      "end": 1023.52,
      "text": " bridge rule to SNS and I got an error message popping up saying this feature is not supported"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1023.52,
      "end": 1028.72,
      "text": " yet. So this is probably one of the reasons why the Application Composer wasn't able to build"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1028.72,
      "end": 1033.6,
      "text": " a correct representation of the architecture or at least the connections between different"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1033.6,
      "end": 1037.12,
      "text": " resources correctly, because probably some of these things are not supported yet."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1037.84,
      "end": 1044.32,
      "text": " So in general, yeah, I wasn't really happy with the result. I don't think it was giving me value"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1044.32,
      "end": 1048.1599999999999,
      "text": " at that point to continue with that approach. I think for that particular project, I was probably"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1048.1599999999999,
      "end": 1052.72,
      "text": " better off to just continue with the manual approach."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1052.72,
      "end": 1057.12,
      "text": " Okay, so there's a mixture of good and bad there. Talk about, you mentioned that it's for creating serverless applications, right? So"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1057.6799999999998,
      "end": 1061.76,
      "text": " I'm sure then it supports all of the serverless offerings from AWS, including, I don't know,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1061.76,
      "end": 1067.12,
      "text": " Fargate, MSK serverless, Redshift serverless, EMR serverless, right? They're all in the same"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1067.12,
      "end": 1074.8,
      "text": " serverless family. Obviously my tongue is in my cheek there, but what is the extent of it? Where"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1074.8,
      "end": 1080.7199999999998,
      "text": " do the boundaries exist for this Application Composer serverless world?"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1080.7199999999998,
      "end": 1086.8799999999999,
      "text": " Yeah, it definitely doesn't support many of the serverless or at least the ones labeled with serverless offering in AWS."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1086.8799999999999,
      "end": 1091.52,
      "text": " For instance, Fargate is the one that I wish was there because it requires significant"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1091.52,
      "end": 1097.36,
      "text": " infrastructure as code to even just provision one container running on Fargate and it takes"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1097.36,
      "end": 1101.12,
      "text": " some time to learn all the concepts. We have another episode on that if you're curious."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1101.68,
      "end": 1108.56,
      "text": " So definitely missing Fargate, I think it's a major feature that I wish was there. And of course,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1108.56,
      "end": 1113.44,
      "text": " you mentioned other serverless services like Redshift, EMR and so on. It would be nice to"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1113.44,
      "end": 1118.6399999999999,
      "text": " have those also integrated in this tool. So the reality is that they are not there yet. There are,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1118.64,
      "end": 1124,
      "text": " the last time I counted was I think yesterday, there were 13 resources, but I also counted them"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1124.5600000000002,
      "end": 1130.0800000000002,
      "text": " a couple of weeks ago and there were 12. So that's maybe an indicator that the team is working hard"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1130.0800000000002,
      "end": 1134.88,
      "text": " on this product and we will see more and more resources being added over time. So that's,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1135.44,
      "end": 1140.96,
      "text": " in the negative, there is a positive trend that we see that there is cost and development happening"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1140.96,
      "end": 1148.16,
      "text": " on this tool. So things might change drastically in a few months. Then there were a couple of weird"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1148.16,
      "end": 1153.52,
      "text": " things that I noticed that I think are just confusing. I don't know if I will consider"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1153.52,
      "end": 1160.0800000000002,
      "text": " them missing features or bugs. I'm just going to try to give you a quick list of things that I"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1160.0800000000002,
      "end": 1165.92,
      "text": " found a little bit confusing or not really working as I expected. The first one is that you see step"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1165.92,
      "end": 1170.72,
      "text": " functions there. And I was like, okay, maybe this is a good alternative or a more integrated tool"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1170.72,
      "end": 1176.96,
      "text": " that I can use to design my step functions visually without, rather than using the step"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1176.96,
      "end": 1182.56,
      "text": " function designer tool. And then I realized that you can create this step function resource,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1182.56,
      "end": 1187.2,
      "text": " but basically it only manages one state. It doesn't allow you to really create a complicated"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1187.2,
      "end": 1190.8,
      "text": " workflow. So you can just connect a step function to one Lambda, for instance, and that's it. You"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1190.8,
      "end": 1196.24,
      "text": " cannot create all the other logical connections that you can use with step functions, like if"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1196.24,
      "end": 1201.1200000000001,
      "text": " statements or parallel execution and all these kinds of things. So that was a little bit annoying"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1201.1200000000001,
      "end": 1205.76,
      "text": " because really there isn't a lot of value to have a step function resource if it doesn't do"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1205.76,
      "end": 1209.68,
      "text": " all, well, not necessarily all, but at least some of the main things that you're probably"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1210.8,
      "end": 1218.16,
      "text": " going to be using a step function for. The other one is that Sqs queues are a little bit confusing"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1218.16,
      "end": 1223.92,
      "text": " because you can use an Sqs queue as a, for instance, as something that triggers event"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1223.92,
      "end": 1228.48,
      "text": " on Lambdas. For instance, if you want to consume messages with a pool of Lambdas from a queue,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1228.48,
      "end": 1234.8799999999999,
      "text": " but also you can use a queue as a dead letter queue for a Lambda. And it seems like these two"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1234.88,
      "end": 1239.2800000000002,
      "text": " options are supported, but I wasn't able to use the designer and really connect things in the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1239.2800000000002,
      "end": 1245.6000000000001,
      "text": " way I wanted. So again, it feels more like there is some missing feature there or some bug, and it"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1245.6000000000001,
      "end": 1250,
      "text": " doesn't really seem to work in the way you want it to work, even though you know, or at least I"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1250,
      "end": 1254.3200000000002,
      "text": " was aware of the concept and I was trying to do something that was very clear in my mind, I wasn't"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1254.3200000000002,
      "end": 1261.3600000000001,
      "text": " able to use this tool to achieve that particular goal. The other thing, there are some other small"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1261.36,
      "end": 1264.9599999999998,
      "text": " things. Like for instance, it's really cool that it creates environment variables in Lambdas for"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1264.9599999999998,
      "end": 1269.6,
      "text": " you. But if you are experimenting heavily, like creating new resources, connecting them, then"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1269.6,
      "end": 1274.08,
      "text": " maybe removing them because you change your mind, you realize you can do something differently,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1274.08,
      "end": 1278.1599999999999,
      "text": " all these environment variables are not cleaned up for you. So you will end up with a lot of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1278.1599999999999,
      "end": 1282.4799999999998,
      "text": " references to resources that maybe are not relevant anymore to your Lambda, maybe you even"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1282.4799999999998,
      "end": 1287.6,
      "text": " deleted and your template at that point is wrong because it's going to fail to reference the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1287.6,
      "end": 1292.8,
      "text": " specific resource when you try to deploy. So again, probably in between a bug and a missing"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1292.8,
      "end": 1297.28,
      "text": " feature there, so there is definitely work to do to polish it. Very similarly, if you change your"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1297.28,
      "end": 1302.32,
      "text": " own runtime, for instance, if you switch from JavaScript to TypeScript, it will create a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1302.32,
      "end": 1307.28,
      "text": " JavaScript file first and then a TypeScript file, but it doesn't clean up the original JavaScript"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1307.28,
      "end": 1313.04,
      "text": " file. Now this is maybe a safety thing because if you have already written code in that JavaScript"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1313.04,
      "end": 1318.6399999999999,
      "text": " file, of course you don't want to lose that code, but you might end up with, for instance, I noticed"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1318.6399999999999,
      "end": 1324.3999999999999,
      "text": " that the package.json was not getting updated correctly, and if you manage to create a new"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1324.3999999999999,
      "end": 1329.68,
      "text": " Lambda with TypeScript straight away, the package.json will contain things that you need"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1329.68,
      "end": 1334.3999999999999,
      "text": " for TypeScript, like the type definitions, but if you started with JavaScript and then you create,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1335.2,
      "end": 1339.12,
      "text": " you switch to TypeScript, it's not going to update your package.json anymore, so it doesn't match"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1339.12,
      "end": 1343.04,
      "text": " exactly your expectations at that point, and you need to manually fix all of that. Well, you need"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1343.04,
      "end": 1349.9199999999998,
      "text": " to realize first and then manually fix it. So yeah, that's another bugbear that I have with it,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1349.9199999999998,
      "end": 1354.56,
      "text": " that it could be a little bit better and will give much more value. And last point I have is,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1354.56,
      "end": 1359.04,
      "text": " actually last two points I have is one that for TypeScript, it is really cool that generates a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1359.04,
      "end": 1364.56,
      "text": " skeleton for you with types already built in, but for instance, when you connect API Gateway,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1364.56,
      "end": 1370.24,
      "text": " I was expecting to create a skeleton that will contain proper types for the LambdaProxy"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1370.24,
      "end": 1375.6799999999998,
      "text": " integration. Instead, it just gives you a generic handler object object, which at that point,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1375.6799999999998,
      "end": 1380.8,
      "text": " it doesn't give you too much value for TypeScript. Of course, you can fix it manually, but it would"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1380.8,
      "end": 1385.36,
      "text": " have been so easy to add that extra step and you will get so much value for it, because you,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1385.36,
      "end": 1390.48,
      "text": " even having to know exactly which types are the right one to use with API Gateway and the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1390.48,
      "end": 1394.72,
      "text": " LambdaProxy integration takes a while, because there are so many different types of events"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1394.72,
      "end": 1398.48,
      "text": " in the TypeScript library that you will be spending probably five minutes just to figure"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1398.48,
      "end": 1402.96,
      "text": " out which ones are the right ones for the incoming event and the response that you have to provide."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1403.76,
      "end": 1408.8,
      "text": " And finally, the last one is that I needed to go into the API Gateway console just to figure out"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1408.8,
      "end": 1414,
      "text": " the URL of my provision API Gateway, because it didn't create an output block for me, which is"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1414,
      "end": 1418.96,
      "text": " something that could have been very easy to do and very convenient. Just a small feature request,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1418.96,
      "end": 1424.96,
      "text": " if anyone from AWS is listening. And the last thing, and I think we kind of mentioned this"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1424.96,
      "end": 1429.8400000000001,
      "text": " already, is that the Canvas resource is not persistent. So basically, that means that if"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1429.8400000000001,
      "end": 1435.3600000000001,
      "text": " you forget to copy paste your files, if you are working in a non-synchronized mode, you're going"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1435.3600000000001,
      "end": 1440.48,
      "text": " to lose everything you just did. It doesn't even ask you, like, when you're closing the tab, be"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1440.48,
      "end": 1445.04,
      "text": " careful because you're losing everything there. It just closes the tab and everything is gone. So if"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1445.04,
      "end": 1449.52,
      "text": " you were working in sync mode, you still have the files locally, you get everything that way."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1449.52,
      "end": 1453.52,
      "text": " But if you didn't work in sync mode, it can be very dangerous that you might be losing everything,"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1453.52,
      "end": 1457.76,
      "text": " while I think the expectation in AWS is that everything is persistent."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1457.76,
      "end": 1462.72,
      "text": " So that could be a little bit misleading if you are used to use the web console in AWS."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1464.3999999999999,
      "end": 1469.2,
      "text": " So it sounds like there's quite a lot of work to do."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1469.2,
      "end": 1473.44,
      "text": " I mean, on Application Composer, I think I'm still on the optimistic side because I like the fact that the designer user interface,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1473.44,
      "end": 1477.68,
      "text": " it seems and feels like a bit of a step forward from other AWS user interfaces."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1479.3600000000001,
      "end": 1483.04,
      "text": " If there was better support for all of the different configuration options for"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1483.04,
      "end": 1487.28,
      "text": " each of the services and some of the other things you point out, it could become very useful."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1487.28,
      "end": 1490.8,
      "text": " But what's your opinion in general? Would you recommend for people listening,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1491.44,
      "end": 1495.68,
      "text": " they should give it a chance now, wait for a while or just ditch Application Composer and"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1495.68,
      "end": 1498.4,
      "text": " forget about it altogether? It's a very good question."
    },
    {
      "speakerLabel": "spk_1",
      "start": 1498.4,
      "end": 1503.44,
      "text": " I honestly have a bit of mixed feelings. I see a lot of potential there. This might become a really"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1503.44,
      "end": 1509.2800000000002,
      "text": " good tool in the future. Right now, it is a little bit not there yet. It could be still useful if you"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1509.2800000000002,
      "end": 1513.3600000000001,
      "text": " are just doing your very first steps in AWS and you are trying to learn serverless and you want"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1513.3600000000001,
      "end": 1518.48,
      "text": " to use infrastructure as code, by the way, you should. So it could be really convenient for just"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1518.48,
      "end": 1523.1200000000001,
      "text": " doing some very quick experiments and trying to see if I do this, what kind of infrastructure"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1523.12,
      "end": 1528.7199999999998,
      "text": " as code do I get? And that could be a way to kind of train yourself to understand CloudFormation"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1528.7199999999998,
      "end": 1532.9599999999998,
      "text": " in a more practical way, rather than just reading the documentation and then copy pasting and trying"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1532.9599999999998,
      "end": 1539.12,
      "text": " to build things from scratch by yourself. This can speed up a little bit. You're building a"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1539.12,
      "end": 1545.6,
      "text": " mental model for our CloudFormation and some work. And when I was trying to think if I like this tool"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1545.6,
      "end": 1553.6,
      "text": " or not, I realized that probably like 20 years ago when I started my tech career, I was learning HTML"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1553.6,
      "end": 1558.32,
      "text": " and the way I learned it was through tools like FrontPage and Dreamweaver, which were giving me"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1558.32,
      "end": 1563.1999999999998,
      "text": " this kind of visual feeling. And then I was really curious and I was constantly switching to the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1563.1999999999998,
      "end": 1569.6799999999998,
      "text": " HTML tab of everything that I was drawing. And it was horrible HTML, retrospective, like it wasn't"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1569.68,
      "end": 1576.24,
      "text": " clean at all. I wouldn't write HTML that way today, but that helped me a lot to learn the HTML"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1576.24,
      "end": 1580.88,
      "text": " language on itself. Like I was able to, for instance, draw a table with columns that were"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1580.88,
      "end": 1585.68,
      "text": " merged and very complicated things, and then just switch to the HTML tab and stuff to learn all the"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1585.68,
      "end": 1590.24,
      "text": " different tags and attributes that I could use to rebuild the thing myself. And eventually, of"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1590.24,
      "end": 1594.88,
      "text": " course, I stopped using these tools because I was able to just write HTML myself. But I think these"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1594.88,
      "end": 1599.92,
      "text": " tools were very instrumental for me to speed up that learning journey and make it more interactive"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1599.92,
      "end": 1604.88,
      "text": " and probably more rewarding, at least for the way of learning that I have. So hopefully Application"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1604.88,
      "end": 1610.0800000000002,
      "text": " Composer can become that kind of tool for infrastructure as code in AWS. That's at least"
    },
    {
      "speakerLabel": "spk_1",
      "start": 1610.0800000000002,
      "end": 1614.24,
      "text": " my positive take on it. That sounds like a fair assessment."
    },
    {
      "speakerLabel": "spk_0",
      "start": 1614.24,
      "end": 1619.44,
      "text": " So it's worth a shot if you're getting started. And also maybe if you just want to prototype something up quickly based on all these"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1619.44,
      "end": 1624.64,
      "text": " serverless resources and then switch to code from that point on. I suppose we should probably say"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1624.64,
      "end": 1628.96,
      "text": " that it's always good advice to prepare to learn what the generated template syntax is anyway,"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1628.96,
      "end": 1632.4,
      "text": " and don't try to completely hide from infrastructure as code because it's a really"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1632.4,
      "end": 1637.1200000000001,
      "text": " valuable cloud skill. Maybe one day we'll be able to use Application Composer to import very advanced"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1637.1200000000001,
      "end": 1643.1200000000001,
      "text": " applications with loads of resources and keep that bi-directional flow going. But it's a difficult"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1643.1200000000001,
      "end": 1648.72,
      "text": " ambition to achieve. So maybe everyone out there, if you have tried it, let us know what you found"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1648.72,
      "end": 1652.96,
      "text": " about it and what you might expect from it in the future. Otherwise, thank you very much for joining"
    },
    {
      "speakerLabel": "spk_0",
      "start": 1652.96,
      "end": 1654.96,
      "text": " us again and we'll see you in the next episode."
    }
  ]
}