WEBVTT

1
00:00:00.000 --> 00:00:02.240
If you're running a software as a service application

2
00:00:02.240 --> 00:00:04.900
or an enterprise application for web and mobile users,

3
00:00:04.900 --> 00:00:07.740
you will likely need to select services for analytics,

4
00:00:07.740 --> 00:00:09.840
customer communication and campaigns.

5
00:00:09.840 --> 00:00:11.540
There are lots of commercial options,

6
00:00:11.540 --> 00:00:13.100
open source options as well,

7
00:00:13.100 --> 00:00:14.240
but in the world of AWS,

8
00:00:14.240 --> 00:00:16.480
there is one service that tries to rule them all,

9
00:00:16.480 --> 00:00:18.500
and this is Amazon Pinpoint.

10
00:00:18.500 --> 00:00:20.940
Pinpoint promises to make it easy for developers

11
00:00:20.940 --> 00:00:22.800
to integrate these capabilities

12
00:00:22.800 --> 00:00:25.440
and also to meet the needs of the market.

13
00:00:25.440 --> 00:00:27.540
However, we have just heard some surprising

14
00:00:27.540 --> 00:00:28.700
and a little bit worrying news

15
00:00:28.700 --> 00:00:31.500
that causes to question the future of Pinpoint.

16
00:00:31.500 --> 00:00:33.240
Today, we're going to talk about Pinpoint,

17
00:00:33.240 --> 00:00:35.100
its capabilities and the recent changes

18
00:00:35.100 --> 00:00:38.240
that makes us a little bit worried and makes us ask,

19
00:00:38.240 --> 00:00:40.700
is AWS going to kill Pinpoint?

20
00:00:40.700 --> 00:00:42.400
My name is Luciano and I'm joined by Eoin

21
00:00:42.400 --> 00:00:44.640
for another episode of AWS Bites podcast.

22
00:00:44.640 --> 00:00:47.640
fourTheorem is the company that makes AWS Bites possible.

23
00:00:58.740 --> 00:01:00.640
If you're looking for a partner to accompany you

24
00:01:00.640 --> 00:01:01.640
on your cloud journey,

25
00:01:01.640 --> 00:01:04.640
check them out at fourtheorem.com.

26
00:01:04.640 --> 00:01:07.640
So, Eoin, should we start by maybe giving an introduction

27
00:01:07.640 --> 00:01:08.640
on what Pinpoint is?

28
00:01:08.640 --> 00:01:11.640
I recognize it's not probably the most famous AWS service

29
00:01:11.640 --> 00:01:13.640
and maybe some people haven't heard about it.

30
00:01:16.640 --> 00:01:18.640
Let's try to describe it, what it is, what it does, and why it can be useful.

31
00:01:18.640 --> 00:01:19.640
Yeah, when it came out,

32
00:01:19.640 --> 00:01:21.640
and since I've heard a lot of people excited about it

33
00:01:21.640 --> 00:01:23.640
because of the range of things it can do,

34
00:01:23.640 --> 00:01:25.640
it hasn't seemed to live up to the hype in some ways

35
00:01:25.640 --> 00:01:27.640
of people talking about it, articles, blog posts,

36
00:01:27.640 --> 00:01:28.640
the kind of thing where you wonder,

37
00:01:28.640 --> 00:01:30.640
is it just used by a couple of large enterprise customers

38
00:01:30.640 --> 00:01:32.640
who just don't talk about it,

39
00:01:32.640 --> 00:01:34.640
or is it something that hasn't seen the uptake

40
00:01:34.640 --> 00:01:35.640
that we expected?

41
00:01:35.640 --> 00:01:37.640
It's designed to solve a lot of different things

42
00:01:37.640 --> 00:01:38.640
in the marketing space.

43
00:01:38.640 --> 00:01:41.640
So if you imagine what you might want from a SaaS application

44
00:01:41.640 --> 00:01:44.640
is to track user engagement and key metrics,

45
00:01:44.640 --> 00:01:47.640
the first thing Pinpoint will tackle is basic analytics.

46
00:01:47.640 --> 00:01:49.640
If you imagine things like Google Analytics,

47
00:01:49.640 --> 00:01:50.640
Mixpanel, Hotjar, Fathom,

48
00:01:50.640 --> 00:01:53.640
analytics within Pinpoint is an alternative.

49
00:01:53.640 --> 00:01:54.640
As a developer, you would typically just use

50
00:01:54.640 --> 00:01:57.640
the Amplify SDK, integrate that into your client.

51
00:01:57.640 --> 00:02:00.640
So that would be your web client, mobile applications.

52
00:02:00.640 --> 00:02:03.640
It can also integrate with like your Cognito user pool,

53
00:02:03.640 --> 00:02:04.640
or you can import your user data

54
00:02:04.640 --> 00:02:06.640
and your segments from somewhere else.

55
00:02:06.640 --> 00:02:09.640
And then you can immediately get automatic metrics,

56
00:02:09.640 --> 00:02:11.640
like you'll get metrics on sign in

57
00:02:11.640 --> 00:02:13.640
and engagement with the user interface,

58
00:02:13.640 --> 00:02:16.640
but you can also get metrics relating to specific things

59
00:02:16.640 --> 00:02:19.640
you're trying to track by adding in custom metrics

60
00:02:19.640 --> 00:02:23.640
in your client application with the Amplify SDK.

61
00:02:23.640 --> 00:02:25.640
And that will send them directly to a Pinpoint API

62
00:02:25.640 --> 00:02:27.640
and stream those click events up

63
00:02:27.640 --> 00:02:29.640
or whatever those engagements are you're tracking.

64
00:02:29.640 --> 00:02:30.640
And then the next thing is kind of

65
00:02:30.640 --> 00:02:32.640
communication and engagement.

66
00:02:32.640 --> 00:02:34.640
If you want to send either transactional messages

67
00:02:34.640 --> 00:02:37.640
or promotional messages to specific categories of users,

68
00:02:37.640 --> 00:02:39.640
Pinpoint is also geared towards that.

69
00:02:39.640 --> 00:02:40.640
So examples of transactional messages

70
00:02:40.640 --> 00:02:44.640
would be sending one-time passwords or reminders to users.

71
00:02:44.640 --> 00:02:46.640
And then you've got promotional messages

72
00:02:46.640 --> 00:02:50.640
designed to convert, upsell, reduce turn,

73
00:02:50.640 --> 00:02:52.640
maybe things like abandoned cart follow-ups.

74
00:02:52.640 --> 00:02:56.640
So you've got channels like email, SMS, phone,

75
00:02:56.640 --> 00:02:59.640
push notifications to mobile devices,

76
00:02:59.640 --> 00:03:01.640
and you can also add your own custom channels as well.

77
00:03:01.640 --> 00:03:04.640
So if you want to support some custom messaging service

78
00:03:04.640 --> 00:03:05.640
or WhatsApp integration,

79
00:03:05.640 --> 00:03:07.640
you can do custom integrations as well.

80
00:03:07.640 --> 00:03:08.640
The difference, I suppose, between this

81
00:03:08.640 --> 00:03:10.640
and using some of the lower level services

82
00:03:10.640 --> 00:03:13.640
like SES and SNS for engagement

83
00:03:13.640 --> 00:03:15.640
is that Pinpoint will give you tracking

84
00:03:15.640 --> 00:03:16.640
of engagement as well.

85
00:03:16.640 --> 00:03:18.640
So it'll give you the number of opens on emails

86
00:03:18.640 --> 00:03:21.640
and messages and engagement with push notifications too.

87
00:03:21.640 --> 00:03:23.640
It's one of the few AWS services

88
00:03:23.640 --> 00:03:24.640
where developers wouldn't interact with it

89
00:03:24.640 --> 00:03:26.640
as much as your marketing team would.

90
00:03:26.640 --> 00:03:27.640
So you'll actually find your marketing team

91
00:03:27.640 --> 00:03:28.640
in the console engaging with it,

92
00:03:28.640 --> 00:03:31.640
looking at metrics and creating campaigns and stuff.

93
00:03:31.640 --> 00:03:32.640
Once you have your analytic

94
00:03:32.640 --> 00:03:34.640
and you've got your users on the system,

95
00:03:34.640 --> 00:03:36.640
you can create segments of users,

96
00:03:36.640 --> 00:03:38.640
and that can be based on a lot of different filter criteria.

97
00:03:38.640 --> 00:03:41.640
Then you can create campaigns that will use the channels

98
00:03:41.640 --> 00:03:44.640
like email or SMS or whatever to reach out to those users.

99
00:03:44.640 --> 00:03:46.640
You'll create your campaign with a channel,

100
00:03:46.640 --> 00:03:48.640
you select an email template or a message,

101
00:03:48.640 --> 00:03:49.640
then you pick a schedule.

102
00:03:49.640 --> 00:03:52.640
And Pinpoint has that capability for you to say,

103
00:03:52.640 --> 00:03:54.640
okay, I want to send this out

104
00:03:54.640 --> 00:03:55.640
over the course of the weekdays,

105
00:03:55.640 --> 00:03:58.640
but I don't want to interrupt my users during a quiet period.

106
00:03:58.640 --> 00:04:01.640
It'll even adjust that to the user's local time zone.

107
00:04:01.640 --> 00:04:02.640
So you can imagine if you were building

108
00:04:02.640 --> 00:04:04.640
all this stuff with SES yourself,

109
00:04:04.640 --> 00:04:06.640
there's actually quite a lot of complexity.

110
00:04:06.640 --> 00:04:08.640
If you think about other products in the market

111
00:04:08.640 --> 00:04:09.640
for messaging and engagement,

112
00:04:09.640 --> 00:04:11.640
you're looking at Twilio and MailChimp

113
00:04:11.640 --> 00:04:14.640
for this campaign stuff segment is a good example.

114
00:04:14.640 --> 00:04:16.640
You also have Salesforce marketing

115
00:04:16.640 --> 00:04:20.640
and Adobe marketing products that do similar things.

116
00:04:20.640 --> 00:04:22.640
If you have an application that has a use case

117
00:04:22.640 --> 00:04:23.640
consisting of multiple steps,

118
00:04:23.640 --> 00:04:26.640
you can track a user's progress through that journey

119
00:04:26.640 --> 00:04:28.640
and then take actions to try and encourage them

120
00:04:28.640 --> 00:04:30.640
to fulfill the journey to its completion.

121
00:04:30.640 --> 00:04:32.640
Examples of user journeys are tracking signups

122
00:04:32.640 --> 00:04:34.640
to ensure that users log in

123
00:04:34.640 --> 00:04:36.640
and then actually use the application once they signed up

124
00:04:36.640 --> 00:04:38.640
or bringing new users through an onboarding process

125
00:04:38.640 --> 00:04:41.640
and also maximizing the number of sales and conversions,

126
00:04:41.640 --> 00:04:43.640
for example, following an initial free trial.

127
00:04:43.640 --> 00:04:45.640
It's almost like step functions for marketers in some ways

128
00:04:45.640 --> 00:04:47.640
because you design the flow,

129
00:04:47.640 --> 00:04:48.640
but then you track the user's engagement

130
00:04:48.640 --> 00:04:52.640
and can see how successful it is at each point and as a whole.

131
00:04:52.640 --> 00:04:55.640
And you can also do sort of multivariate splits,

132
00:04:55.640 --> 00:04:57.640
random splits of users and everything,

133
00:04:57.640 --> 00:04:59.640
take different paths in that flow for different users.

134
00:04:59.640 --> 00:05:01.640
So there's a whole visual designer

135
00:05:01.640 --> 00:05:02.640
in a canvas there for that.

136
00:05:02.640 --> 00:05:04.640
Just finally, reporting is a big thing.

137
00:05:04.640 --> 00:05:06.640
Pinpoint analytics doesn't allow you access

138
00:05:06.640 --> 00:05:07.640
to the raw data by default.

139
00:05:07.640 --> 00:05:09.640
You're essentially looking at aggregate data

140
00:05:09.640 --> 00:05:11.640
by demographics, et cetera.

141
00:05:11.640 --> 00:05:14.640
But you can also stream the events that you capture

142
00:05:14.640 --> 00:05:18.640
through to Kinesis or Kinesis Data Firehose.

143
00:05:18.640 --> 00:05:20.640
And then once you have it in there,

144
00:05:20.640 --> 00:05:23.640
you can take it into Redshift or S3

145
00:05:23.640 --> 00:05:25.640
and then use things like Athena and QuickSight

146
00:05:25.640 --> 00:05:27.640
to visualize and report on it.

147
00:05:27.640 --> 00:05:29.640
Hopefully now that we understand kind of what it does

148
00:05:29.640 --> 00:05:30.640
and what problem it solves,

149
00:05:30.640 --> 00:05:33.640
we can kind of understand why it might be a bit of a concern.

150
00:05:33.640 --> 00:05:34.640
The messaging we've seen around recently,

151
00:05:34.640 --> 00:05:37.640
this kind of relates to quotas and limits.

152
00:05:37.640 --> 00:05:39.640
So Luciano, do you want to take us through

153
00:05:39.640 --> 00:05:41.640
the limits around Pinpoint and the bombshell?

154
00:05:41.640 --> 00:05:43.640
Let's start by discussing the limits first.

155
00:05:43.640 --> 00:05:47.640
So the bigger one to start with is that Pinpoint

156
00:05:47.640 --> 00:05:48.640
is not available in every region.

157
00:05:48.640 --> 00:05:50.640
For instance, it's not available in South America.

158
00:05:50.640 --> 00:05:54.640
So you'll need to go and choose one of the bigger regions.

159
00:05:54.640 --> 00:05:57.640
And there might be some compromises with that,

160
00:05:57.640 --> 00:06:00.640
especially if you are far away from those main regions.

161
00:06:00.640 --> 00:06:04.640
The other one is that you have a maximum of 90 days retention.

162
00:06:04.640 --> 00:06:06.640
And you can kind of work around that.

163
00:06:06.640 --> 00:06:09.640
You already mentioned that you can stream data to Kinesis

164
00:06:09.640 --> 00:06:11.640
using Firehose and send data to S3.

165
00:06:11.640 --> 00:06:13.640
So you can basically use this process

166
00:06:13.640 --> 00:06:15.640
if you want to retain data for longer.

167
00:06:15.640 --> 00:06:17.640
But Pinpoint itself is going to hold the data

168
00:06:17.640 --> 00:06:19.640
for no longer than 90 days.

169
00:06:19.640 --> 00:06:22.640
The breaking news that we wanted to mention is that a week ago,

170
00:06:22.640 --> 00:06:25.640
AWS sent an email to customers using Pinpoint

171
00:06:25.640 --> 00:06:28.640
and basically changed a little bit the limits

172
00:06:28.640 --> 00:06:31.640
that the quota that you have in Pinpoint

173
00:06:31.640 --> 00:06:34.640
in a way that we think it's actually quite important

174
00:06:34.640 --> 00:06:36.640
and might have interesting side effect.

175
00:06:36.640 --> 00:06:38.640
And there are different changes,

176
00:06:38.640 --> 00:06:40.640
but the most interesting one is that

177
00:06:40.640 --> 00:06:45.640
you could originally have 7,000 events per second per account.

178
00:06:45.640 --> 00:06:48.640
But from October 22nd of this year,

179
00:06:48.640 --> 00:06:52.640
the limit changes from 7,000 to just 15.

180
00:06:52.640 --> 00:06:56.640
So this is like 99.8% reduction of throughput.

181
00:06:56.640 --> 00:06:59.640
And also, AWS says that this is an hard quota,

182
00:06:59.640 --> 00:07:01.640
so it cannot be increased.

183
00:07:01.640 --> 00:07:04.640
So it's literally going from 7,000 to 15,

184
00:07:04.640 --> 00:07:07.640
which is like going from 100 to zero almost.

185
00:07:07.640 --> 00:07:11.640
So it's, of course, obvious to start to ask very hard questions

186
00:07:11.640 --> 00:07:14.640
like what can you really do with 15 events per second?

187
00:07:14.640 --> 00:07:15.640
Is that going to be enough?

188
00:07:15.640 --> 00:07:17.640
Especially if before you had 7,000,

189
00:07:17.640 --> 00:07:20.640
was it like massively more than you needed before

190
00:07:20.640 --> 00:07:22.640
or now it's just too low?

191
00:07:22.640 --> 00:07:24.640
What's going on here?

192
00:07:24.640 --> 00:07:26.640
And we can speculate a little bit

193
00:07:26.640 --> 00:07:28.640
and try to figure out from the AWS perspective

194
00:07:28.640 --> 00:07:31.640
what is the motivation for this reduction.

195
00:07:31.640 --> 00:07:32.640
We have a few ideas.

196
00:07:32.640 --> 00:07:36.640
The first one is that the more, I guess, negative one

197
00:07:36.640 --> 00:07:39.640
is that AWS is just using this strategy to try to kill Pinpoint.

198
00:07:39.640 --> 00:07:41.640
And they don't want to explicitly sunset it,

199
00:07:41.640 --> 00:07:45.640
but they want to reduce usage drastically to the point

200
00:07:45.640 --> 00:07:46.640
that nobody's using it

201
00:07:46.640 --> 00:07:49.640
and then maybe eventually they can get rid of it,

202
00:07:49.640 --> 00:07:52.640
which is very concerning because we are familiar

203
00:07:52.640 --> 00:07:55.640
with other cloud providers killing products all the time

204
00:07:55.640 --> 00:07:58.640
and not really caring about what happens to the users.

205
00:07:58.640 --> 00:08:01.640
But to be fair, we always had a very good experience with AWS

206
00:08:01.640 --> 00:08:04.640
and there are very famous cases like SimpleDB

207
00:08:04.640 --> 00:08:06.640
that technically doesn't exist anymore.

208
00:08:06.640 --> 00:08:08.640
It's very hard to find material online.

209
00:08:08.640 --> 00:08:11.640
It's very hard to see anything in the AWS console.

210
00:08:11.640 --> 00:08:13.640
But we know that there are old users

211
00:08:13.640 --> 00:08:15.640
that still have access to that and they can still use it.

212
00:08:15.640 --> 00:08:17.640
And AWS is supporting that,

213
00:08:17.640 --> 00:08:19.640
which we always seen that as a commitment

214
00:08:19.640 --> 00:08:22.640
to keeping the user, giving them a good experience,

215
00:08:22.640 --> 00:08:24.640
making sure that the cloud provider

216
00:08:24.640 --> 00:08:26.640
actually removes concern from the teams.

217
00:08:26.640 --> 00:08:29.640
And so in that way, it's kind of a partner more than a liability.

218
00:08:29.640 --> 00:08:33.640
So if that changes, I think AWS is kind of putting themselves

219
00:08:33.640 --> 00:08:35.640
in a little bit of a dangerous position

220
00:08:35.640 --> 00:08:38.640
from a marketing perspective, from a security perspective.

221
00:08:38.640 --> 00:08:41.640
And as consultants, we often hear this kind of concerns

222
00:08:41.640 --> 00:08:44.640
from customers and we can always reassure them by saying,

223
00:08:44.640 --> 00:08:46.640
look, we have been in this business for a while

224
00:08:46.640 --> 00:08:48.640
and we've never seen the same things

225
00:08:48.640 --> 00:08:50.640
that we have seen in other cloud providers.

226
00:08:50.640 --> 00:08:53.640
So we are relying on AWS and we trust them.

227
00:08:53.640 --> 00:08:55.640
So if that changes, I think it's going to be

228
00:08:55.640 --> 00:08:56.640
an interesting conversation.

229
00:08:56.640 --> 00:08:58.640
The other point that is worth mentioning

230
00:08:58.640 --> 00:09:01.640
is that it's a product, as Eoin, you mentioned,

231
00:09:01.640 --> 00:09:04.640
that is not really focused for technical users,

232
00:09:04.640 --> 00:09:07.640
which is a little bit different from what AWS mostly does

233
00:09:07.640 --> 00:09:12.640
because AWS always provides API infrastructure as code

234
00:09:12.640 --> 00:09:15.640
and automation built in pretty much every service.

235
00:09:15.640 --> 00:09:18.640
So every service is very geared towards developers.

236
00:09:18.640 --> 00:09:21.640
This particular service is more marketing focused.

237
00:09:21.640 --> 00:09:23.640
So I think there might be a little bit of attrition there

238
00:09:23.640 --> 00:09:26.640
in the way that AWS builds services, builds UIs

239
00:09:26.640 --> 00:09:29.640
to give marketers a very good experience.

240
00:09:29.640 --> 00:09:33.640
So just by the fact that users have to go into the AWS console,

241
00:09:33.640 --> 00:09:36.640
if they are not technical enough, if they don't know AWS,

242
00:09:36.640 --> 00:09:38.640
it might be a very distracting experience.

243
00:09:38.640 --> 00:09:39.640
It might not be very well optimized

244
00:09:39.640 --> 00:09:42.640
for the kind of workflows that they need to do.

245
00:09:42.640 --> 00:09:45.640
So maybe that's something that AWS is recognizing

246
00:09:45.640 --> 00:09:47.640
and maybe wants to do something about that,

247
00:09:47.640 --> 00:09:49.640
maybe wants to create an alternative service,

248
00:09:49.640 --> 00:09:52.640
or maybe wants to start, wants to focus more

249
00:09:52.640 --> 00:09:54.640
on kind of the core functionality,

250
00:09:54.640 --> 00:09:57.640
like messaging like SES, SNS,

251
00:09:57.640 --> 00:10:00.640
and just rely on partners like Salesforce, Market,

252
00:10:00.640 --> 00:10:03.640
or Segment, Wilio to do kind of the user-facing part.

253
00:10:03.640 --> 00:10:05.640
Again, it's worth reminding that AWS has a very good reputation

254
00:10:05.640 --> 00:10:06.640
for not killing services.

255
00:10:06.640 --> 00:10:08.640
So maybe we are kind of exaggerating the problem,

256
00:10:08.640 --> 00:10:12.640
but it's worth asking these other questions.

257
00:10:12.640 --> 00:10:13.640
There is another option there.

258
00:10:13.640 --> 00:10:16.640
Like it's not necessarily AWS trying to kill the project.

259
00:10:16.640 --> 00:10:19.640
Maybe there is a pricing conversation to be had there.

260
00:10:19.640 --> 00:10:23.640
And if you look at the pricing of Pinpoint,

261
00:10:23.640 --> 00:10:26.640
from the outside, it actually looks quite cheap.

262
00:10:28.640 --> 00:10:29.640
You've got 100 million events for free in the free tier before you pay anything.

263
00:10:29.640 --> 00:10:33.640
So after that, it's a tiny fraction per event.

264
00:10:33.640 --> 00:10:35.640
So then it might start to count.

265
00:10:35.640 --> 00:10:38.640
But I guess for a lot of startup applications,

266
00:10:38.640 --> 00:10:40.640
they won't get even near 100,

267
00:10:40.640 --> 00:10:42.640
particularly while the user volume is small.

268
00:10:42.640 --> 00:10:43.640
Yeah, absolutely.

269
00:10:43.640 --> 00:10:45.640
So the idea that is maybe AWS is recognized

270
00:10:45.640 --> 00:10:47.640
that they are not being profitable with the service

271
00:10:47.640 --> 00:10:48.640
with the current pricing model.

272
00:10:48.640 --> 00:10:51.640
So maybe they are trying to reduce the usage.

273
00:10:51.640 --> 00:10:53.640
Maybe they will change the pricing a little bit,

274
00:10:53.640 --> 00:10:56.640
or maybe they will have private conversation

275
00:10:56.640 --> 00:10:57.640
with the heavy users and try to figure out

276
00:10:57.640 --> 00:10:59.640
how to make the product better for them,

277
00:10:59.640 --> 00:11:00.640
but at the same time,

278
00:11:00.640 --> 00:11:03.640
figure out a price in the works both ways.

279
00:11:03.640 --> 00:11:05.640
So these are just speculation again.

280
00:11:05.640 --> 00:11:08.640
We don't really have official news from AWS at this point.

281
00:11:08.640 --> 00:11:11.640
So you can, of course, come up with your own opinions,

282
00:11:11.640 --> 00:11:14.640
but I guess it's fair to ask what happens next.

283
00:11:14.640 --> 00:11:16.640
Like if you are a user of Pinpoint,

284
00:11:16.640 --> 00:11:17.640
what can you do now?

285
00:11:20.640 --> 00:11:21.640
If I was using Pinpoint at scale and really relying on it, it's definitely in a question to be had

286
00:11:21.640 --> 00:11:23.640
with your account manager at AWS

287
00:11:23.640 --> 00:11:25.640
and your solutions architect to figure out

288
00:11:25.640 --> 00:11:27.640
what is the strategy.

289
00:11:27.640 --> 00:11:29.640
I've looked in some of the accounts

290
00:11:29.640 --> 00:11:30.640
that we are working with,

291
00:11:30.640 --> 00:11:32.640
and I can still see that we've got the quota

292
00:11:32.640 --> 00:11:34.640
of 7,000 events per second.

293
00:11:34.640 --> 00:11:36.640
It's not clear whether the new limits

294
00:11:36.640 --> 00:11:39.640
will only apply to new accounts or to existing accounts

295
00:11:39.640 --> 00:11:41.640
or to existing Pinpoint users.

296
00:11:41.640 --> 00:11:43.640
So there's definitely clarity required.

297
00:11:43.640 --> 00:11:46.640
And I think that's the main challenge here, actually.

298
00:11:46.640 --> 00:11:49.640
It's not just a limit decrease in its own right.

299
00:11:49.640 --> 00:11:51.640
It's kind of the limited communication around it

300
00:11:51.640 --> 00:11:53.640
and the clarity from AWS.

301
00:11:53.640 --> 00:11:54.640
It would be good to understand

302
00:11:54.640 --> 00:11:56.640
what the strategy is for Pinpoint,

303
00:11:56.640 --> 00:11:57.640
whether you should stick or twist.

304
00:11:57.640 --> 00:11:59.640
If you're planning on adopting Pinpoint,

305
00:11:59.640 --> 00:12:02.640
I know customers who are either using it

306
00:12:02.640 --> 00:12:04.640
or are planning on using it,

307
00:12:04.640 --> 00:12:05.640
and this is obviously something

308
00:12:05.640 --> 00:12:07.640
that's going to scare people quite a lot.

309
00:12:07.640 --> 00:12:08.640
Pinpoint did have this advantage

310
00:12:08.640 --> 00:12:11.640
of having all this capability within AWS,

311
00:12:11.640 --> 00:12:14.640
so you didn't need to integrate lots of third-party solutions.

312
00:12:14.640 --> 00:12:17.640
And it would be nice to have that option of using it,

313
00:12:17.640 --> 00:12:20.640
but using it at scale, because 15 events per second,

314
00:12:20.640 --> 00:12:22.640
I mean, if you can imagine one user

315
00:12:22.640 --> 00:12:25.640
clicking around a website or a mobile application,

316
00:12:25.640 --> 00:12:27.640
it's easy enough to create hundreds of events

317
00:12:27.640 --> 00:12:29.640
in a few seconds for one user.

318
00:12:29.640 --> 00:12:31.640
So if you've got thousands of users,

319
00:12:31.640 --> 00:12:32.640
you need to have that capability

320
00:12:32.640 --> 00:12:34.640
to have thousands of events per second, I believe,

321
00:12:34.640 --> 00:12:37.640
and to be able to increase that as your business grows.

322
00:12:37.640 --> 00:12:39.640
So there's lots of alternatives out there

323
00:12:39.640 --> 00:12:41.640
that people are going to immediately go to

324
00:12:41.640 --> 00:12:42.640
if they need something today,

325
00:12:42.640 --> 00:12:44.640
Google Analytics, Segment, Mixpanel, Adobe,

326
00:12:44.640 --> 00:12:46.640
all of those for email communication

327
00:12:46.640 --> 00:12:50.640
within AWS, you can always just use SES and SNS

328
00:12:50.640 --> 00:12:52.640
for the SMS and push notifications.

329
00:12:52.640 --> 00:12:55.640
You'll just have to do a little bit more work to set it up.

330
00:12:55.640 --> 00:12:58.640
And if you want to track and analyze user events

331
00:12:58.640 --> 00:13:00.640
or just track events in your application,

332
00:13:00.640 --> 00:13:03.640
you could always do the kind of vanilla raw approach,

333
00:13:03.640 --> 00:13:05.640
which is to capture them and send them directly

334
00:13:05.640 --> 00:13:08.640
to Firehose or Kinesis from the applications,

335
00:13:08.640 --> 00:13:11.640
which will give you a similar kind of data set.

336
00:13:11.640 --> 00:13:13.640
Again, it's just not as seamless

337
00:13:13.640 --> 00:13:15.640
as it would have been with Pinpoint.

338
00:13:15.640 --> 00:13:18.640
So let's hold out for some information.

339
00:13:18.640 --> 00:13:21.640
It's nearing the 22nd of October at the time of recording.

340
00:13:21.640 --> 00:13:25.640
So we'll kind of keep a keen eye on any communication

341
00:13:25.640 --> 00:13:27.640
around this and any other chatter.

342
00:13:27.640 --> 00:13:29.640
There's very little, there is one Reddit thread

343
00:13:29.640 --> 00:13:31.640
where this is being discussed by people using Pinpoint

344
00:13:31.640 --> 00:13:32.640
and there's a lot of concern there.

345
00:13:32.640 --> 00:13:34.640
Maybe we can link that in the show notes too,

346
00:13:34.640 --> 00:13:36.640
but there's very little chatter about it.

347
00:13:36.640 --> 00:13:38.640
I couldn't find anything on Twitter

348
00:13:38.640 --> 00:13:40.640
or any other social media outlet.

349
00:13:40.640 --> 00:13:42.640
So we'll kind of keep a close eye on it

350
00:13:42.640 --> 00:13:43.640
and let you know as well

351
00:13:43.640 --> 00:13:45.640
if we hear anything official.

352
00:13:48.640 --> 00:13:49.640
Yeah, I think that brings to the end of this episode, but before we wrap up,

353
00:13:49.640 --> 00:13:51.640
we'd be very curious to hear your opinion

354
00:13:51.640 --> 00:13:53.640
in general on Pinpoint.

355
00:13:53.640 --> 00:13:54.640
Have you been using it?

356
00:13:54.640 --> 00:13:55.640
What was your experience?

357
00:13:55.640 --> 00:13:57.640
Are you planning maybe to use it in the future

358
00:13:57.640 --> 00:14:00.640
and why compared to all the other alternatives?

359
00:14:01.640 --> 00:14:04.640
I'm curious to know if you have other speculations

360
00:14:04.640 --> 00:14:05.640
in why this is happening

361
00:14:05.640 --> 00:14:07.640
or what will be the future of this service.

362
00:14:07.640 --> 00:14:09.640
So definitely reach out to us and let us know

363
00:14:09.640 --> 00:14:11.640
if you're watching on YouTube, leave a comment,

364
00:14:11.640 --> 00:14:13.640
otherwise reach out on social.

365
00:14:13.640 --> 00:14:16.640
As always, if you find value in this episode,

366
00:14:16.640 --> 00:14:18.640
give us a shout, give us a thumbs up,

367
00:14:18.640 --> 00:14:22.640
reviews, share it and help us to grow the channel.

368
00:14:22.640 --> 00:14:25.640
We recently reached 2,000 subscribers on YouTube.

369
00:14:25.640 --> 00:14:27.640
So that kind of makes us very happy.

370
00:14:27.640 --> 00:14:29.640
So thank you everyone for following us so far

371
00:14:29.640 --> 00:14:31.640
and for supporting us.

372
00:14:31.640 --> 00:14:48.640
We'll see you in the next episode.
